{"version":3,"sources":["swiper-bundle.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","Swiper","this","isObject$1","obj","constructor","Object","extend$1","target","src","keys","forEach","key","length","ssrDocument","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","getDocument","doc","document","ssrWindow","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","getWindow","win","window","nextTick","delay","now","getTranslate","el","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","getComputedStyle$1","WebKitCSSMatrix","transform","webkitTransform","split","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","parseFloat","m42","isObject","o","prototype","call","slice","extend","to","arguments","undefined","noExtend","i","nextSource","node","HTMLElement","nodeType","keysArray","filter","indexOf","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","__swiper__","setCSSProperty","varName","varValue","setProperty","animateCSSModeScroll","_ref","swiper","targetPosition","side","startPosition","translate","time","startTime","duration","params","speed","wrapperEl","scrollSnapType","cssModeFrameID","dir","isOutOfBound","current","animate","getTime","progress","Math","max","min","easeProgress","cos","PI","currentPosition","scrollTo","overflow","getSlideTransformEl","slideEl","shadowEl","elementChildren","element","selector","matches","tag","classes","classList","add","Array","isArray","elementOffset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","elementStyle","prop","elementIndex","child","previousSibling","elementParents","parents","parent","parentElement","push","elementTransitionEnd","fireCallBack","e","elementOuterSize","size","includeMargins","offsetWidth","support","deviceCached","browser","getSupport","smoothScroll","documentElement","touch","DocumentTouch","calcSupport","getDevice","overrides","_temp","platform","ua","device","ios","android","screenWidth","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","os","calcDevice","getBrowser","needPerspectiveFix","isSafari","toLowerCase","String","includes","major","minor","num","Number","isWebView","test","calcBrowser","eventsEmitter","on","events","handler","priority","eventsListeners","destroyed","method","event","once","onceHandler","off","__emitterProxy","_len","args","_key","apply","onAny","eventsAnyListeners","offAny","index","splice","eventHandler","emit","data","context","_len2","_key2","unshift","update","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","isNaN","assign","updateSlides","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","slidesEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","centeredSlides","cssMode","gridEnabled","grid","rows","slideSize","initSlides","shouldResetSlideSize","slidesPerView","breakpoints","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","floor","swiperSlideSize","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","loop","groups","ceil","slidesBefore","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","remove","updateAutoHeight","activeSlides","newHeight","setTransition","getSlideByIndex","getAttribute","visibleSlides","activeIndex","offsetHeight","minusOffset","isElement","offsetLeft","offsetTop","swiperSlideOffset","updateSlidesProgress","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","originalProgress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","autoHeight","updateSlidesClasses","getFilteredSlide","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","nextSlide","nextEls","nextElementSibling","next","elementNextAll","prevSlide","prevEls","previousElementSibling","prev","elementPrevAll","emitSlidesClasses","updateActiveIndex","newActiveIndex","previousIndex","realIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","getActiveIndexByTranslate","skip","initialized","runCallbacksOnInit","updateClickedSlide","closest","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","behavior","onTranslateToWrapperTransitionEnd","transitionEmit","direction","step","slideTo","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","initialSlide","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","slideNext","perGroup","slidesPerGroupAuto","slidesPerViewDynamic","increment","loopPreventsSliding","loopFix","_clientLeft","rewind","slidePrev","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","threshold","currentSnap","slideToIndex","slideSelector","loopedSlides","loopCreate","slideRealIndex","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","append","recalcSlides","currentSlideTranslate","diff","touches","controller","control","loopParams","c","loopDestroy","newSlidesOrder","swiperSlideIndex","removeAttribute","onTouchStart","touchEventsData","evCache","simulateTouch","pointerType","originalEvent","targetEl","touchEventsTarget","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","shadowRoot","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","closestElement","allowClick","swipeHandler","currentX","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchMove","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","nested","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","startTranslate","evt","bubbles","dispatchEvent","allowMomentumBounce","grabCursor","setGrabCursor","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","type","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","timeout","onResize","setBreakpoint","isVirtualLoop","autoplay","running","paused","resume","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","processLazyPreloader","imageEl","lazyEl","lazyPreloaderClass","onLoad","dummyEventAttached","dummyEventListener","capture","domMethod","swiperMethod","passive","updateOnWindowResize","isGridEnabled","defaults","init","resizeObserver","createElements","url","breakpointsBase","uniqueNavElements","passiveListeners","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","auto","prototypes","transition","transitionDuration","moving","isLocked","cursor","unsetGrabCursor","attachEvents","bind","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","containerEl","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","wasLocked","lastSlideRightEdge","addClasses","classNames","suffixes","entries","prefix","resultClasses","item","prepareClasses","autoheight","centered","removeClasses","extendedDefaults","swipers","newParams","modules","__modules__","mod","extendParams","swiperParams","passedParams","eventName","velocity","clickTimeout","velocities","imagesToLoad","imagesLoaded","setProgress","cls","className","getSlideClasses","updates","view","exact","spv","breakLoop","translateValue","translated","complete","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","mounted","getWrapperSelector","trim","getWrapper","destroy","deleteInstance","cleanStyles","object","deleteProps","static","newDefaults","m","installModule","createElementIfNotDefined","checkProps","classesToSelector","appendSlide","appendElement","tempDOM","innerHTML","observer","prependSlide","prependElement","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","effectInit","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","effectTarget","effectParams","transformEl","backfaceVisibility","effectVirtualTransitionEnd","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","createShadow","shadowClass","shadowContainer","prototypeGroup","protoMethod","use","animationFrame","resizeHandler","orientationChangeHandler","ResizeObserver","newWidth","_ref2","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","disconnect","cssModeTimeout","cache","renderSlide","renderExternal","renderExternalUpdate","addSlidesBefore","addSlidesAfter","from","offset","textContent","force","previousFrom","previousTo","previousSlidesGrid","previousOffset","offsetProp","onRendered","slidesToRender","prependIndexes","appendIndexes","getSlideIndex","loopFrom","loopTo","domSlidesAssigned","numberOfNewSlides","newCache","cachedIndex","cachedEl","cachedElIndex","handle","kc","keyCode","charCode","pageUpDown","keyboard","isPageUp","isPageDown","isArrowLeft","isArrowRight","isArrowUp","isArrowDown","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","swiperWidth","swiperHeight","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","mousewheel","releaseOnEdges","invert","forceToAxis","sensitivity","eventsTarget","thresholdDelta","thresholdTime","lastEventBeforeSnap","lastScrollTime","recentWheelEvents","handleMouseEnter","mouseEntered","handleMouseLeave","animateSlider","newEvent","delta","raw","targetElContainsTarget","rtlFactor","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","positions","sign","ignoreWheelEvents","position","sticky","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","releaseScroll","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","onPrevClick","onNextClick","initButton","destroyButton","pagination","clickable","isHidden","toggle","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","bulletEl","onBulletClick","total","firstIndex","midIndex","suffix","bullet","bulletIndex","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","subElIndex","fractionEl","totalEl","progressbarDirection","scale","scaleX","scaleY","progressEl","render","paginationHTML","numberOfBullets","dragStartPos","dragSize","trackSize","divider","dragTimeout","scrollbar","dragEl","newSize","newPos","hide","opacity","display","getPointerPosition","clientX","clientY","setDragPosition","positionRatio","onDragStart","onDragMove","onDragEnd","snapOnRelease","activeListener","passiveListener","eventMethod","swiperEl","dragClass","draggable","scrollbarDisabledClass","parallax","setTransform","p","rotate","currentOpacity","_swiper","parallaxEl","parallaxDuration","maxRatio","containerClass","zoomedSlideClass","fakeGestureTouched","fakeGestureMoved","currentScale","isScaling","gesture","slideWidth","slideHeight","imageWrapEl","image","minX","minY","maxX","maxY","touchesStart","touchesCurrent","prevPositionX","prevPositionY","prevTime","getDistanceBetweenTouches","x1","y1","x2","y2","eventWithinSlide","onGestureStart","scaleStart","onGestureChange","scaleMove","onGestureEnd","imageE","eventWithinZoomContainer","scaledWidth","scaledHeight","onTransitionEnd","zoomIn","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","touchAction","forceZoomRatio","zoomOut","zoomToggle","getListeners","activeListenerWithCapture","defineProperty","get","set","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","momentumDuration","in","out","LinearSpline","binarySearch","maxIndex","minIndex","guess","array","i1","i3","interpolate","removeSpline","spline","inverse","by","controlElement","onControllerSwiper","_t","controlled","controlledTranslate","setControlledTranslate","getInterpolateFunction","setControlledTransition","a11y","notificationClass","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","slideLabelMessage","containerMessage","containerRoleDescriptionMessage","itemRoleDescriptionMessage","slideRole","clicked","liveRegion","notify","message","notification","makeElFocusable","makeElNotFocusable","addElRole","role","addElRoleDescription","description","addElLabel","disableEl","enableEl","onEnterOrSpaceKey","click","hasPagination","hasClickablePagination","initNavEl","wrapperId","controls","addElControls","handlePointerDown","handlePointerUp","handleFocus","isActive","isVisible","sourceCapabilities","firesTouchEvents","repeat","round","random","live","addElLive","updateNavigation","updatePagination","root","keepQuery","paths","slugify","text","getPathValues","urlOverride","URL","pathArray","part","setHistory","currentState","state","scrollToSlide","setHistoryPopState","hashNavigation","watchState","onHashChange","newHash","setHash","raf","timeLeft","waitForTransition","disableOnInteraction","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","autoplayTimeLeft","wasPaused","pausedByTouch","touchStartTimeout","slideChanged","pausedByInteraction","autoplayDelayTotal","autoplayDelayCurrent","autoplayStartTime","calcTimeLeft","run","delayForce","currentSlideDelay","activeSlideEl","getSlideDelay","proceed","start","pause","reset","onVisibilityChange","visibilityState","onPointerEnter","onPointerLeave","thumbs","multipleActiveThumbs","autoScrollOffset","slideThumbActiveClass","thumbsContainerClass","swiperCreated","onThumbClick","thumbsSwiper","thumbsParams","SwiperClass","thumbsSwiperParams","thumbsToActivate","thumbActiveClass","useOffset","currentThumbsIndex","newThumbsIndex","newThumbsSlide","getThumbsElementAndInit","thumbsElement","onThumbsSwiper","watchForThumbsToAppear","momentum","momentumRatio","momentumBounce","momentumBounceRatio","momentumVelocityRatio","minimumVelocity","lastMoveEvent","pop","velocityEvent","distance","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","j","moveDistance","currentSlideSize","slidesNumberEvenToRows","slidesPerRow","numFullColumns","newSlideOrderIndex","column","row","groupIndex","slideIndexInGroup","columnsInGroup","order","fadeEffect","crossFade","tx","ty","slideOpacity","cubeEffect","shadow","shadowOffset","shadowScale","createSlideShadows","shadowBefore","shadowAfter","cubeShadowEl","wrapperRotate","slideAngle","tz","transformOrigin","shadowAngle","sin","scale1","scale2","zFactor","flipEffect","limitRotation","rotateY","rotateX","zIndex","coverflowEffect","stretch","depth","modifier","center","centerOffset","offsetMultiplier","translateZ","slideTransform","shadowBeforeEl","shadowAfterEl","creativeEffect","limitProgress","shadowPerProgress","progressMultiplier","getTranslateValue","isCenteredSlides","margin","r","custom","translateString","rotateString","scaleString","opacityString","shadowOpacity","cardsEffect","perSlideRotate","perSlideOffset","tX","tY","tZ","tXAdd","isSwipeToNext","isSwipeToPrev","subProgress"],"mappings":"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","file":"../swiper/libs.min.js","sourcesContent":["/**\n * Swiper 9.0.3\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 6, 2023\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\n})(this, (function () { 'use strict';\n\n    /**\n     * SSR Window 4.0.2\n     * Better handling for window object in SSR environment\n     * https://github.com/nolimits4web/ssr-window\n     *\n     * Copyright 2021, Vladimir Kharlampidi\n     *\n     * Licensed under MIT\n     *\n     * Released on: December 13, 2021\n     */\n    /* eslint-disable no-param-reassign */\n    function isObject$1(obj) {\n      return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n    }\n    function extend$1(target, src) {\n      if (target === void 0) {\n        target = {};\n      }\n      if (src === void 0) {\n        src = {};\n      }\n      Object.keys(src).forEach(key => {\n        if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n          extend$1(target[key], src[key]);\n        }\n      });\n    }\n    const ssrDocument = {\n      body: {},\n      addEventListener() {},\n      removeEventListener() {},\n      activeElement: {\n        blur() {},\n        nodeName: ''\n      },\n      querySelector() {\n        return null;\n      },\n      querySelectorAll() {\n        return [];\n      },\n      getElementById() {\n        return null;\n      },\n      createEvent() {\n        return {\n          initEvent() {}\n        };\n      },\n      createElement() {\n        return {\n          children: [],\n          childNodes: [],\n          style: {},\n          setAttribute() {},\n          getElementsByTagName() {\n            return [];\n          }\n        };\n      },\n      createElementNS() {\n        return {};\n      },\n      importNode() {\n        return null;\n      },\n      location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: ''\n      }\n    };\n    function getDocument() {\n      const doc = typeof document !== 'undefined' ? document : {};\n      extend$1(doc, ssrDocument);\n      return doc;\n    }\n    const ssrWindow = {\n      document: ssrDocument,\n      navigator: {\n        userAgent: ''\n      },\n      location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: ''\n      },\n      history: {\n        replaceState() {},\n        pushState() {},\n        go() {},\n        back() {}\n      },\n      CustomEvent: function CustomEvent() {\n        return this;\n      },\n      addEventListener() {},\n      removeEventListener() {},\n      getComputedStyle() {\n        return {\n          getPropertyValue() {\n            return '';\n          }\n        };\n      },\n      Image() {},\n      Date() {},\n      screen: {},\n      setTimeout() {},\n      clearTimeout() {},\n      matchMedia() {\n        return {};\n      },\n      requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n          callback();\n          return null;\n        }\n        return setTimeout(callback, 0);\n      },\n      cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n          return;\n        }\n        clearTimeout(id);\n      }\n    };\n    function getWindow() {\n      const win = typeof window !== 'undefined' ? window : {};\n      extend$1(win, ssrWindow);\n      return win;\n    }\n\n    function deleteProps(obj) {\n      const object = obj;\n      Object.keys(object).forEach(key => {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    }\n    function nextTick(callback, delay) {\n      if (delay === void 0) {\n        delay = 0;\n      }\n      return setTimeout(callback, delay);\n    }\n    function now() {\n      return Date.now();\n    }\n    function getComputedStyle$1(el) {\n      const window = getWindow();\n      let style;\n      if (window.getComputedStyle) {\n        style = window.getComputedStyle(el, null);\n      }\n      if (!style && el.currentStyle) {\n        style = el.currentStyle;\n      }\n      if (!style) {\n        style = el.style;\n      }\n      return style;\n    }\n    function getTranslate(el, axis) {\n      if (axis === void 0) {\n        axis = 'x';\n      }\n      const window = getWindow();\n      let matrix;\n      let curTransform;\n      let transformMatrix;\n      const curStyle = getComputedStyle$1(el);\n      if (window.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n        // Normal Browsers\n        else curTransform = parseFloat(matrix[4]);\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n        // Normal Browsers\n        else curTransform = parseFloat(matrix[5]);\n      }\n      return curTransform || 0;\n    }\n    function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n    }\n    function isNode(node) {\n      // eslint-disable-next-line\n      if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n        return node instanceof HTMLElement;\n      }\n      return node && (node.nodeType === 1 || node.nodeType === 11);\n    }\n    function extend() {\n      const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n      const noExtend = ['__proto__', 'constructor', 'prototype'];\n      for (let i = 1; i < arguments.length; i += 1) {\n        const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n        if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n          const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n          for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            const nextKey = keysArray[nextIndex];\n            const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n                if (nextSource[nextKey].__swiper__) {\n                  to[nextKey] = nextSource[nextKey];\n                } else {\n                  extend(to[nextKey], nextSource[nextKey]);\n                }\n              } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                if (nextSource[nextKey].__swiper__) {\n                  to[nextKey] = nextSource[nextKey];\n                } else {\n                  extend(to[nextKey], nextSource[nextKey]);\n                }\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    }\n    function setCSSProperty(el, varName, varValue) {\n      el.style.setProperty(varName, varValue);\n    }\n    function animateCSSModeScroll(_ref) {\n      let {\n        swiper,\n        targetPosition,\n        side\n      } = _ref;\n      const window = getWindow();\n      const startPosition = -swiper.translate;\n      let startTime = null;\n      let time;\n      const duration = swiper.params.speed;\n      swiper.wrapperEl.style.scrollSnapType = 'none';\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      const dir = targetPosition > startPosition ? 'next' : 'prev';\n      const isOutOfBound = (current, target) => {\n        return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n      };\n      const animate = () => {\n        time = new Date().getTime();\n        if (startTime === null) {\n          startTime = time;\n        }\n        const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n        const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n        let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n        if (isOutOfBound(currentPosition, targetPosition)) {\n          currentPosition = targetPosition;\n        }\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n        if (isOutOfBound(currentPosition, targetPosition)) {\n          swiper.wrapperEl.style.overflow = 'hidden';\n          swiper.wrapperEl.style.scrollSnapType = '';\n          setTimeout(() => {\n            swiper.wrapperEl.style.overflow = '';\n            swiper.wrapperEl.scrollTo({\n              [side]: currentPosition\n            });\n          });\n          window.cancelAnimationFrame(swiper.cssModeFrameID);\n          return;\n        }\n        swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n      };\n      animate();\n    }\n    function getSlideTransformEl(slideEl) {\n      return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n    }\n    function elementChildren(element, selector) {\n      if (selector === void 0) {\n        selector = '';\n      }\n      return [...element.children].filter(el => el.matches(selector));\n    }\n    function createElement(tag, classes) {\n      if (classes === void 0) {\n        classes = [];\n      }\n      const el = document.createElement(tag);\n      el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n      return el;\n    }\n    function elementOffset(el) {\n      const window = getWindow();\n      const document = getDocument();\n      const box = el.getBoundingClientRect();\n      const body = document.body;\n      const clientTop = el.clientTop || body.clientTop || 0;\n      const clientLeft = el.clientLeft || body.clientLeft || 0;\n      const scrollTop = el === window ? window.scrollY : el.scrollTop;\n      const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    }\n    function elementPrevAll(el, selector) {\n      const prevEls = [];\n      while (el.previousElementSibling) {\n        const prev = el.previousElementSibling; // eslint-disable-line\n        if (selector) {\n          if (prev.matches(selector)) prevEls.push(prev);\n        } else prevEls.push(prev);\n        el = prev;\n      }\n      return prevEls;\n    }\n    function elementNextAll(el, selector) {\n      const nextEls = [];\n      while (el.nextElementSibling) {\n        const next = el.nextElementSibling; // eslint-disable-line\n        if (selector) {\n          if (next.matches(selector)) nextEls.push(next);\n        } else nextEls.push(next);\n        el = next;\n      }\n      return nextEls;\n    }\n    function elementStyle(el, prop) {\n      const window = getWindow();\n      return window.getComputedStyle(el, null).getPropertyValue(prop);\n    }\n    function elementIndex(el) {\n      let child = el;\n      let i;\n      if (child) {\n        i = 0;\n        // eslint-disable-next-line\n        while ((child = child.previousSibling) !== null) {\n          if (child.nodeType === 1) i += 1;\n        }\n        return i;\n      }\n      return undefined;\n    }\n    function elementParents(el, selector) {\n      const parents = []; // eslint-disable-line\n      let parent = el.parentElement; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if (parent.matches(selector)) parents.push(parent);\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentElement;\n      }\n      return parents;\n    }\n    function elementTransitionEnd(el, callback) {\n      function fireCallBack(e) {\n        if (e.target !== el) return;\n        callback.call(el, e);\n        el.removeEventListener('transitionend', fireCallBack);\n      }\n      if (callback) {\n        el.addEventListener('transitionend', fireCallBack);\n      }\n    }\n    function elementOuterSize(el, size, includeMargins) {\n      const window = getWindow();\n      if (includeMargins) {\n        return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n      }\n      return el.offsetWidth;\n    }\n\n    let support;\n    function calcSupport() {\n      const window = getWindow();\n      const document = getDocument();\n      return {\n        smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n        touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n      };\n    }\n    function getSupport() {\n      if (!support) {\n        support = calcSupport();\n      }\n      return support;\n    }\n\n    let deviceCached;\n    function calcDevice(_temp) {\n      let {\n        userAgent\n      } = _temp === void 0 ? {} : _temp;\n      const support = getSupport();\n      const window = getWindow();\n      const platform = window.navigator.platform;\n      const ua = userAgent || window.navigator.userAgent;\n      const device = {\n        ios: false,\n        android: false\n      };\n      const screenWidth = window.screen.width;\n      const screenHeight = window.screen.height;\n      const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n      let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n      const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n      const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n      const windows = platform === 'Win32';\n      let macos = platform === 'MacIntel';\n\n      // iPadOs 13 fix\n      const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n      if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\n        if (!ipad) ipad = [0, 1, '13_0_0'];\n        macos = false;\n      }\n\n      // Android\n      if (android && !windows) {\n        device.os = 'android';\n        device.android = true;\n      }\n      if (ipad || iphone || ipod) {\n        device.os = 'ios';\n        device.ios = true;\n      }\n\n      // Export object\n      return device;\n    }\n    function getDevice(overrides) {\n      if (overrides === void 0) {\n        overrides = {};\n      }\n      if (!deviceCached) {\n        deviceCached = calcDevice(overrides);\n      }\n      return deviceCached;\n    }\n\n    let browser;\n    function calcBrowser() {\n      const window = getWindow();\n      let needPerspectiveFix = false;\n      function isSafari() {\n        const ua = window.navigator.userAgent.toLowerCase();\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n      }\n      if (isSafari()) {\n        const ua = String(window.navigator.userAgent);\n        if (ua.includes('Version/')) {\n          const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n          needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n        }\n      }\n      return {\n        isSafari: needPerspectiveFix || isSafari(),\n        needPerspectiveFix,\n        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n      };\n    }\n    function getBrowser() {\n      if (!browser) {\n        browser = calcBrowser();\n      }\n      return browser;\n    }\n\n    function Resize(_ref) {\n      let {\n        swiper,\n        on,\n        emit\n      } = _ref;\n      const window = getWindow();\n      let observer = null;\n      let animationFrame = null;\n      const resizeHandler = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit('beforeResize');\n        emit('resize');\n      };\n      const createObserver = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        observer = new ResizeObserver(entries => {\n          animationFrame = window.requestAnimationFrame(() => {\n            const {\n              width,\n              height\n            } = swiper;\n            let newWidth = width;\n            let newHeight = height;\n            entries.forEach(_ref2 => {\n              let {\n                contentBoxSize,\n                contentRect,\n                target\n              } = _ref2;\n              if (target && target !== swiper.el) return;\n              newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n              newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n            });\n            if (newWidth !== width || newHeight !== height) {\n              resizeHandler();\n            }\n          });\n        });\n        observer.observe(swiper.el);\n      };\n      const removeObserver = () => {\n        if (animationFrame) {\n          window.cancelAnimationFrame(animationFrame);\n        }\n        if (observer && observer.unobserve && swiper.el) {\n          observer.unobserve(swiper.el);\n          observer = null;\n        }\n      };\n      const orientationChangeHandler = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit('orientationchange');\n      };\n      on('init', () => {\n        if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n          createObserver();\n          return;\n        }\n        window.addEventListener('resize', resizeHandler);\n        window.addEventListener('orientationchange', orientationChangeHandler);\n      });\n      on('destroy', () => {\n        removeObserver();\n        window.removeEventListener('resize', resizeHandler);\n        window.removeEventListener('orientationchange', orientationChangeHandler);\n      });\n    }\n\n    function Observer(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const observers = [];\n      const window = getWindow();\n      const attach = function (target, options) {\n        if (options === void 0) {\n          options = {};\n        }\n        const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n        const observer = new ObserverFunc(mutations => {\n          // The observerUpdate event should only be triggered\n          // once despite the number of mutations.  Additional\n          // triggers are redundant and are very costly\n          if (mutations.length === 1) {\n            emit('observerUpdate', mutations[0]);\n            return;\n          }\n          const observerUpdate = function observerUpdate() {\n            emit('observerUpdate', mutations[0]);\n          };\n          if (window.requestAnimationFrame) {\n            window.requestAnimationFrame(observerUpdate);\n          } else {\n            window.setTimeout(observerUpdate, 0);\n          }\n        });\n        observer.observe(target, {\n          attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n          childList: typeof options.childList === 'undefined' ? true : options.childList,\n          characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n        });\n        observers.push(observer);\n      };\n      const init = () => {\n        if (!swiper.params.observer) return;\n        if (swiper.params.observeParents) {\n          const containerParents = elementParents(swiper.el);\n          for (let i = 0; i < containerParents.length; i += 1) {\n            attach(containerParents[i]);\n          }\n        }\n        // Observe container\n        attach(swiper.el, {\n          childList: swiper.params.observeSlideChildren\n        });\n\n        // Observe wrapper\n        attach(swiper.wrapperEl, {\n          attributes: false\n        });\n      };\n      const destroy = () => {\n        observers.forEach(observer => {\n          observer.disconnect();\n        });\n        observers.splice(0, observers.length);\n      };\n      extendParams({\n        observer: false,\n        observeParents: false,\n        observeSlideChildren: false\n      });\n      on('init', init);\n      on('destroy', destroy);\n    }\n\n    /* eslint-disable no-underscore-dangle */\n\n    var eventsEmitter = {\n      on(events, handler, priority) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== 'function') return self;\n        const method = priority ? 'unshift' : 'push';\n        events.split(' ').forEach(event => {\n          if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n          self.eventsListeners[event][method](handler);\n        });\n        return self;\n      },\n      once(events, handler, priority) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== 'function') return self;\n        function onceHandler() {\n          self.off(events, onceHandler);\n          if (onceHandler.__emitterProxy) {\n            delete onceHandler.__emitterProxy;\n          }\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          handler.apply(self, args);\n        }\n        onceHandler.__emitterProxy = handler;\n        return self.on(events, onceHandler, priority);\n      },\n      onAny(handler, priority) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== 'function') return self;\n        const method = priority ? 'unshift' : 'push';\n        if (self.eventsAnyListeners.indexOf(handler) < 0) {\n          self.eventsAnyListeners[method](handler);\n        }\n        return self;\n      },\n      offAny(handler) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsAnyListeners) return self;\n        const index = self.eventsAnyListeners.indexOf(handler);\n        if (index >= 0) {\n          self.eventsAnyListeners.splice(index, 1);\n        }\n        return self;\n      },\n      off(events, handler) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsListeners) return self;\n        events.split(' ').forEach(event => {\n          if (typeof handler === 'undefined') {\n            self.eventsListeners[event] = [];\n          } else if (self.eventsListeners[event]) {\n            self.eventsListeners[event].forEach((eventHandler, index) => {\n              if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n                self.eventsListeners[event].splice(index, 1);\n              }\n            });\n          }\n        });\n        return self;\n      },\n      emit() {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsListeners) return self;\n        let events;\n        let data;\n        let context;\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n          events = args[0];\n          data = args.slice(1, args.length);\n          context = self;\n        } else {\n          events = args[0].events;\n          data = args[0].data;\n          context = args[0].context || self;\n        }\n        data.unshift(context);\n        const eventsArray = Array.isArray(events) ? events : events.split(' ');\n        eventsArray.forEach(event => {\n          if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n            self.eventsAnyListeners.forEach(eventHandler => {\n              eventHandler.apply(context, [event, ...data]);\n            });\n          }\n          if (self.eventsListeners && self.eventsListeners[event]) {\n            self.eventsListeners[event].forEach(eventHandler => {\n              eventHandler.apply(context, data);\n            });\n          }\n        });\n        return self;\n      }\n    };\n\n    function updateSize() {\n      const swiper = this;\n      let width;\n      let height;\n      const el = swiper.el;\n      if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n        width = swiper.params.width;\n      } else {\n        width = el.clientWidth;\n      }\n      if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n        height = swiper.params.height;\n      } else {\n        height = el.clientHeight;\n      }\n      if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n        return;\n      }\n\n      // Subtract paddings\n      width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n      height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n      if (Number.isNaN(width)) width = 0;\n      if (Number.isNaN(height)) height = 0;\n      Object.assign(swiper, {\n        width,\n        height,\n        size: swiper.isHorizontal() ? width : height\n      });\n    }\n\n    function updateSlides() {\n      const swiper = this;\n      function getDirectionLabel(property) {\n        if (swiper.isHorizontal()) {\n          return property;\n        }\n        // prettier-ignore\n        return {\n          'width': 'height',\n          'margin-top': 'margin-left',\n          'margin-bottom ': 'margin-right',\n          'margin-left': 'margin-top',\n          'margin-right': 'margin-bottom',\n          'padding-left': 'padding-top',\n          'padding-right': 'padding-bottom',\n          'marginRight': 'marginBottom'\n        }[property];\n      }\n      function getDirectionPropertyValue(node, label) {\n        return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n      }\n      const params = swiper.params;\n      const {\n        wrapperEl,\n        slidesEl,\n        size: swiperSize,\n        rtlTranslate: rtl,\n        wrongRTL\n      } = swiper;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n      const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n      const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n      let snapGrid = [];\n      const slidesGrid = [];\n      const slidesSizesGrid = [];\n      let offsetBefore = params.slidesOffsetBefore;\n      if (typeof offsetBefore === 'function') {\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\n      }\n      let offsetAfter = params.slidesOffsetAfter;\n      if (typeof offsetAfter === 'function') {\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\n      }\n      const previousSnapGridLength = swiper.snapGrid.length;\n      const previousSlidesGridLength = swiper.slidesGrid.length;\n      let spaceBetween = params.spaceBetween;\n      let slidePosition = -offsetBefore;\n      let prevSlideSize = 0;\n      let index = 0;\n      if (typeof swiperSize === 'undefined') {\n        return;\n      }\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n      }\n      swiper.virtualSize = -spaceBetween;\n\n      // reset margins\n      slides.forEach(slideEl => {\n        if (rtl) {\n          slideEl.style.marginLeft = '';\n        } else {\n          slideEl.style.marginRight = '';\n        }\n        slideEl.style.marginBottom = '';\n        slideEl.style.marginTop = '';\n      });\n\n      // reset cssMode offsets\n      if (params.centeredSlides && params.cssMode) {\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n      }\n      const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n      if (gridEnabled) {\n        swiper.grid.initSlides(slidesLength);\n      }\n\n      // Calc slides\n      let slideSize;\n      const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n        return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n      }).length > 0;\n      for (let i = 0; i < slidesLength; i += 1) {\n        slideSize = 0;\n        let slide;\n        if (slides[i]) slide = slides[i];\n        if (gridEnabled) {\n          swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n        }\n        if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n        if (params.slidesPerView === 'auto') {\n          if (shouldResetSlideSize) {\n            slides[i].style[getDirectionLabel('width')] = ``;\n          }\n          const slideStyles = getComputedStyle(slide);\n          const currentTransform = slide.style.transform;\n          const currentWebKitTransform = slide.style.webkitTransform;\n          if (currentTransform) {\n            slide.style.transform = 'none';\n          }\n          if (currentWebKitTransform) {\n            slide.style.webkitTransform = 'none';\n          }\n          if (params.roundLengths) {\n            slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n          } else {\n            // eslint-disable-next-line\n            const width = getDirectionPropertyValue(slideStyles, 'width');\n            const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n            const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n            const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n            const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n            const boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              const {\n                clientWidth,\n                offsetWidth\n              } = slide;\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n            }\n          }\n          if (currentTransform) {\n            slide.style.transform = currentTransform;\n          }\n          if (currentWebKitTransform) {\n            slide.style.webkitTransform = currentWebKitTransform;\n          }\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\n        } else {\n          slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\n          if (slides[i]) {\n            slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n          }\n        }\n        if (slides[i]) {\n          slides[i].swiperSlideSize = slideSize;\n        }\n        slidesSizesGrid.push(slideSize);\n        if (params.centeredSlides) {\n          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n          if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n          if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n          slidesGrid.push(slidePosition);\n        } else {\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n          if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n          slidesGrid.push(slidePosition);\n          slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index += 1;\n      }\n      swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n      if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n        wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n      }\n      if (params.setWrapperSize) {\n        wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n      }\n      if (gridEnabled) {\n        swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n      }\n\n      // Remove last grid elements depending on width\n      if (!params.centeredSlides) {\n        const newSlidesGrid = [];\n        for (let i = 0; i < snapGrid.length; i += 1) {\n          let slidesGridItem = snapGrid[i];\n          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n          if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n            newSlidesGrid.push(slidesGridItem);\n          }\n        }\n        snapGrid = newSlidesGrid;\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n          snapGrid.push(swiper.virtualSize - swiperSize);\n        }\n      }\n      if (isVirtual && params.loop) {\n        const size = slidesSizesGrid[0] + spaceBetween;\n        if (params.slidesPerGroup > 1) {\n          const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n          const groupSize = size * params.slidesPerGroup;\n          for (let i = 0; i < groups; i += 1) {\n            snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n          }\n        }\n        for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n          if (params.slidesPerGroup === 1) {\n            snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n          }\n          slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n          swiper.virtualSize += size;\n        }\n      }\n      if (snapGrid.length === 0) snapGrid = [0];\n      if (params.spaceBetween !== 0) {\n        const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n        slides.filter((_, slideIndex) => {\n          if (!params.cssMode || params.loop) return true;\n          if (slideIndex === slides.length - 1) {\n            return false;\n          }\n          return true;\n        }).forEach(slideEl => {\n          slideEl.style[key] = `${spaceBetween}px`;\n        });\n      }\n      if (params.centeredSlides && params.centeredSlidesBounds) {\n        let allSlidesSize = 0;\n        slidesSizesGrid.forEach(slideSizeValue => {\n          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize -= params.spaceBetween;\n        const maxSnap = allSlidesSize - swiperSize;\n        snapGrid = snapGrid.map(snap => {\n          if (snap < 0) return -offsetBefore;\n          if (snap > maxSnap) return maxSnap + offsetAfter;\n          return snap;\n        });\n      }\n      if (params.centerInsufficientSlides) {\n        let allSlidesSize = 0;\n        slidesSizesGrid.forEach(slideSizeValue => {\n          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize -= params.spaceBetween;\n        if (allSlidesSize < swiperSize) {\n          const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n          snapGrid.forEach((snap, snapIndex) => {\n            snapGrid[snapIndex] = snap - allSlidesOffset;\n          });\n          slidesGrid.forEach((snap, snapIndex) => {\n            slidesGrid[snapIndex] = snap + allSlidesOffset;\n          });\n        }\n      }\n      Object.assign(swiper, {\n        slides,\n        snapGrid,\n        slidesGrid,\n        slidesSizesGrid\n      });\n      if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n        const addToSnapGrid = -swiper.snapGrid[0];\n        const addToSlidesGrid = -swiper.slidesGrid[0];\n        swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n        swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n      }\n      if (slidesLength !== previousSlidesLength) {\n        swiper.emit('slidesLengthChange');\n      }\n      if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow) swiper.checkOverflow();\n        swiper.emit('snapGridLengthChange');\n      }\n      if (slidesGrid.length !== previousSlidesGridLength) {\n        swiper.emit('slidesGridLengthChange');\n      }\n      if (params.watchSlidesProgress) {\n        swiper.updateSlidesOffset();\n      }\n      if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n        const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n        const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n        if (slidesLength <= params.maxBackfaceHiddenSlides) {\n          if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n        } else if (hasClassBackfaceClassAdded) {\n          swiper.el.classList.remove(backFaceHiddenClass);\n        }\n      }\n    }\n\n    function updateAutoHeight(speed) {\n      const swiper = this;\n      const activeSlides = [];\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      let newHeight = 0;\n      let i;\n      if (typeof speed === 'number') {\n        swiper.setTransition(speed);\n      } else if (speed === true) {\n        swiper.setTransition(swiper.params.speed);\n      }\n      const getSlideByIndex = index => {\n        if (isVirtual) {\n          return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n        }\n        return swiper.slides[index];\n      };\n      // Find slides currently in view\n      if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n        if (swiper.params.centeredSlides) {\n          (swiper.visibleSlides || []).forEach(slide => {\n            activeSlides.push(slide);\n          });\n        } else {\n          for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n            const index = swiper.activeIndex + i;\n            if (index > swiper.slides.length && !isVirtual) break;\n            activeSlides.push(getSlideByIndex(index));\n          }\n        }\n      } else {\n        activeSlides.push(getSlideByIndex(swiper.activeIndex));\n      }\n\n      // Find new height from highest slide in view\n      for (i = 0; i < activeSlides.length; i += 1) {\n        if (typeof activeSlides[i] !== 'undefined') {\n          const height = activeSlides[i].offsetHeight;\n          newHeight = height > newHeight ? height : newHeight;\n        }\n      }\n\n      // Update Height\n      if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n    }\n\n    function updateSlidesOffset() {\n      const swiper = this;\n      const slides = swiper.slides;\n      // eslint-disable-next-line\n      const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n      for (let i = 0; i < slides.length; i += 1) {\n        slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset;\n      }\n    }\n\n    function updateSlidesProgress(translate) {\n      if (translate === void 0) {\n        translate = this && this.translate || 0;\n      }\n      const swiper = this;\n      const params = swiper.params;\n      const {\n        slides,\n        rtlTranslate: rtl,\n        snapGrid\n      } = swiper;\n      if (slides.length === 0) return;\n      if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n      let offsetCenter = -translate;\n      if (rtl) offsetCenter = translate;\n\n      // Visible Slides\n      slides.forEach(slideEl => {\n        slideEl.classList.remove(params.slideVisibleClass);\n      });\n      swiper.visibleSlidesIndexes = [];\n      swiper.visibleSlides = [];\n      for (let i = 0; i < slides.length; i += 1) {\n        const slide = slides[i];\n        let slideOffset = slide.swiperSlideOffset;\n        if (params.cssMode && params.centeredSlides) {\n          slideOffset -= slides[0].swiperSlideOffset;\n        }\n        const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n        const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n        const slideBefore = -(offsetCenter - slideOffset);\n        const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides[i].classList.add(params.slideVisibleClass);\n        }\n        slide.progress = rtl ? -slideProgress : slideProgress;\n        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n      }\n    }\n\n    function updateProgress(translate) {\n      const swiper = this;\n      if (typeof translate === 'undefined') {\n        const multiplier = swiper.rtlTranslate ? -1 : 1;\n        // eslint-disable-next-line\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n      }\n      const params = swiper.params;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      let {\n        progress,\n        isBeginning,\n        isEnd,\n        progressLoop\n      } = swiper;\n      const wasBeginning = isBeginning;\n      const wasEnd = isEnd;\n      if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n      } else {\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\n        const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n        const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n        isBeginning = isBeginningRounded || progress <= 0;\n        isEnd = isEndRounded || progress >= 1;\n        if (isBeginningRounded) progress = 0;\n        if (isEndRounded) progress = 1;\n      }\n      if (params.loop) {\n        const firstSlideIndex = elementIndex(swiper.slides.filter(el => el.getAttribute('data-swiper-slide-index') === '0')[0]);\n        const lastSlideIndex = elementIndex(swiper.slides.filter(el => el.getAttribute('data-swiper-slide-index') * 1 === swiper.slides.length - 1)[0]);\n        const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n        const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n        const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n        const translateAbs = Math.abs(translate);\n        if (translateAbs >= firstSlideTranslate) {\n          progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n        } else {\n          progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n        }\n        if (progressLoop > 1) progressLoop -= 1;\n      }\n      Object.assign(swiper, {\n        progress,\n        progressLoop,\n        isBeginning,\n        isEnd\n      });\n      if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n      if (isBeginning && !wasBeginning) {\n        swiper.emit('reachBeginning toEdge');\n      }\n      if (isEnd && !wasEnd) {\n        swiper.emit('reachEnd toEdge');\n      }\n      if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n        swiper.emit('fromEdge');\n      }\n      swiper.emit('progress', progress);\n    }\n\n    function updateSlidesClasses() {\n      const swiper = this;\n      const {\n        slides,\n        params,\n        slidesEl,\n        activeIndex\n      } = swiper;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      const getFilteredSlide = selector => {\n        return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n      };\n      slides.forEach(slideEl => {\n        slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n      });\n      let activeSlide;\n      if (isVirtual) {\n        if (params.loop) {\n          let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n          if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n          if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n          activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n        } else {\n          activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n        }\n      } else {\n        activeSlide = slides[activeIndex];\n      }\n      if (activeSlide) {\n        // Active classes\n        activeSlide.classList.add(params.slideActiveClass);\n\n        // Next Slide\n        let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n        if (params.loop && !nextSlide) {\n          nextSlide = slides[0];\n        }\n        if (nextSlide) {\n          nextSlide.classList.add(params.slideNextClass);\n        }\n        // Prev Slide\n        let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n        if (params.loop && !prevSlide === 0) {\n          prevSlide = slides[slides.length - 1];\n        }\n        if (prevSlide) {\n          prevSlide.classList.add(params.slidePrevClass);\n        }\n      }\n      swiper.emitSlidesClasses();\n    }\n\n    function getActiveIndexByTranslate(swiper) {\n      const {\n        slidesGrid,\n        params\n      } = swiper;\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      let activeIndex;\n      for (let i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n      }\n      return activeIndex;\n    }\n    function updateActiveIndex(newActiveIndex) {\n      const swiper = this;\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      const {\n        snapGrid,\n        params,\n        activeIndex: previousIndex,\n        realIndex: previousRealIndex,\n        snapIndex: previousSnapIndex\n      } = swiper;\n      let activeIndex = newActiveIndex;\n      let snapIndex;\n      const getVirtualRealIndex = aIndex => {\n        let realIndex = aIndex - swiper.virtual.slidesBefore;\n        if (realIndex < 0) {\n          realIndex = swiper.virtual.slides.length + realIndex;\n        }\n        if (realIndex >= swiper.virtual.slides.length) {\n          realIndex -= swiper.virtual.slides.length;\n        }\n        return realIndex;\n      };\n      if (typeof activeIndex === 'undefined') {\n        activeIndex = getActiveIndexByTranslate(swiper);\n      }\n      if (snapGrid.indexOf(translate) >= 0) {\n        snapIndex = snapGrid.indexOf(translate);\n      } else {\n        const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n      }\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n      if (activeIndex === previousIndex) {\n        if (snapIndex !== previousSnapIndex) {\n          swiper.snapIndex = snapIndex;\n          swiper.emit('snapIndexChange');\n        }\n        if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.realIndex = getVirtualRealIndex(activeIndex);\n        }\n        return;\n      }\n      // Get real index\n      let realIndex;\n      if (swiper.virtual && params.virtual.enabled && params.loop) {\n        realIndex = getVirtualRealIndex(activeIndex);\n      } else if (swiper.slides[activeIndex]) {\n        realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n      } else {\n        realIndex = activeIndex;\n      }\n      Object.assign(swiper, {\n        snapIndex,\n        realIndex,\n        previousIndex,\n        activeIndex\n      });\n      swiper.emit('activeIndexChange');\n      swiper.emit('snapIndexChange');\n      if (previousRealIndex !== realIndex) {\n        swiper.emit('realIndexChange');\n      }\n      if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n        swiper.emit('slideChange');\n      }\n    }\n\n    function updateClickedSlide(e) {\n      const swiper = this;\n      const params = swiper.params;\n      const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n      let slideFound = false;\n      let slideIndex;\n      if (slide) {\n        for (let i = 0; i < swiper.slides.length; i += 1) {\n          if (swiper.slides[i] === slide) {\n            slideFound = true;\n            slideIndex = i;\n            break;\n          }\n        }\n      }\n      if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n        } else {\n          swiper.clickedIndex = slideIndex;\n        }\n      } else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n      }\n      if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n        swiper.slideToClickedSlide();\n      }\n    }\n\n    var update = {\n      updateSize,\n      updateSlides,\n      updateAutoHeight,\n      updateSlidesOffset,\n      updateSlidesProgress,\n      updateProgress,\n      updateSlidesClasses,\n      updateActiveIndex,\n      updateClickedSlide\n    };\n\n    function getSwiperTranslate(axis) {\n      if (axis === void 0) {\n        axis = this.isHorizontal() ? 'x' : 'y';\n      }\n      const swiper = this;\n      const {\n        params,\n        rtlTranslate: rtl,\n        translate,\n        wrapperEl\n      } = swiper;\n      if (params.virtualTranslate) {\n        return rtl ? -translate : translate;\n      }\n      if (params.cssMode) {\n        return translate;\n      }\n      let currentTranslate = getTranslate(wrapperEl, axis);\n      if (rtl) currentTranslate = -currentTranslate;\n      return currentTranslate || 0;\n    }\n\n    function setTranslate(translate, byController) {\n      const swiper = this;\n      const {\n        rtlTranslate: rtl,\n        params,\n        wrapperEl,\n        progress\n      } = swiper;\n      let x = 0;\n      let y = 0;\n      const z = 0;\n      if (swiper.isHorizontal()) {\n        x = rtl ? -translate : translate;\n      } else {\n        y = translate;\n      }\n      if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n      }\n      if (params.cssMode) {\n        wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n      } else if (!params.virtualTranslate) {\n        wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n      }\n      swiper.previousTranslate = swiper.translate;\n      swiper.translate = swiper.isHorizontal() ? x : y;\n\n      // Check if we need to update progress\n      let newProgress;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n      }\n      if (newProgress !== progress) {\n        swiper.updateProgress(translate);\n      }\n      swiper.emit('setTranslate', swiper.translate, byController);\n    }\n\n    function minTranslate() {\n      return -this.snapGrid[0];\n    }\n\n    function maxTranslate() {\n      return -this.snapGrid[this.snapGrid.length - 1];\n    }\n\n    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n      if (translate === void 0) {\n        translate = 0;\n      }\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      if (translateBounds === void 0) {\n        translateBounds = true;\n      }\n      const swiper = this;\n      const {\n        params,\n        wrapperEl\n      } = swiper;\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n      }\n      const minTranslate = swiper.minTranslate();\n      const maxTranslate = swiper.maxTranslate();\n      let newTranslate;\n      if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n      // Update progress\n      swiper.updateProgress(newTranslate);\n      if (params.cssMode) {\n        const isH = swiper.isHorizontal();\n        if (speed === 0) {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        } else {\n          if (!swiper.support.smoothScroll) {\n            animateCSSModeScroll({\n              swiper,\n              targetPosition: -newTranslate,\n              side: isH ? 'left' : 'top'\n            });\n            return true;\n          }\n          wrapperEl.scrollTo({\n            [isH ? 'left' : 'top']: -newTranslate,\n            behavior: 'smooth'\n          });\n        }\n        return true;\n      }\n      if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionEnd');\n        }\n      } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionStart');\n        }\n        if (!swiper.animating) {\n          swiper.animating = true;\n          if (!swiper.onTranslateToWrapperTransitionEnd) {\n            swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n              if (!swiper || swiper.destroyed) return;\n              if (e.target !== this) return;\n              swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n              swiper.onTranslateToWrapperTransitionEnd = null;\n              delete swiper.onTranslateToWrapperTransitionEnd;\n              if (runCallbacks) {\n                swiper.emit('transitionEnd');\n              }\n            };\n          }\n          swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        }\n      }\n      return true;\n    }\n\n    var translate = {\n      getTranslate: getSwiperTranslate,\n      setTranslate,\n      minTranslate,\n      maxTranslate,\n      translateTo\n    };\n\n    function setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.params.cssMode) {\n        swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n      }\n      swiper.emit('setTransition', duration, byController);\n    }\n\n    function transitionEmit(_ref) {\n      let {\n        swiper,\n        runCallbacks,\n        direction,\n        step\n      } = _ref;\n      const {\n        activeIndex,\n        previousIndex\n      } = swiper;\n      let dir = direction;\n      if (!dir) {\n        if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n      }\n      swiper.emit(`transition${step}`);\n      if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n          swiper.emit(`slideResetTransition${step}`);\n          return;\n        }\n        swiper.emit(`slideChangeTransition${step}`);\n        if (dir === 'next') {\n          swiper.emit(`slideNextTransition${step}`);\n        } else {\n          swiper.emit(`slidePrevTransition${step}`);\n        }\n      }\n    }\n\n    function transitionStart(runCallbacks, direction) {\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      const {\n        params\n      } = swiper;\n      if (params.cssMode) return;\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      transitionEmit({\n        swiper,\n        runCallbacks,\n        direction,\n        step: 'Start'\n      });\n    }\n\n    function transitionEnd(runCallbacks, direction) {\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      const {\n        params\n      } = swiper;\n      swiper.animating = false;\n      if (params.cssMode) return;\n      swiper.setTransition(0);\n      transitionEmit({\n        swiper,\n        runCallbacks,\n        direction,\n        step: 'End'\n      });\n    }\n\n    var transition = {\n      setTransition,\n      transitionStart,\n      transitionEnd\n    };\n\n    function slideTo(index, speed, runCallbacks, internal, initial) {\n      if (index === void 0) {\n        index = 0;\n      }\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      if (typeof index === 'string') {\n        index = parseInt(index, 10);\n      }\n      const swiper = this;\n      let slideIndex = index;\n      if (slideIndex < 0) slideIndex = 0;\n      const {\n        params,\n        snapGrid,\n        slidesGrid,\n        previousIndex,\n        activeIndex,\n        rtlTranslate: rtl,\n        wrapperEl,\n        enabled\n      } = swiper;\n      if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n        return false;\n      }\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n      let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n      const translate = -snapGrid[snapIndex];\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        for (let i = 0; i < slidesGrid.length; i += 1) {\n          const normalizedTranslate = -Math.floor(translate * 100);\n          const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n          const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n          if (typeof slidesGrid[i + 1] !== 'undefined') {\n            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n              slideIndex = i;\n            } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n              slideIndex = i + 1;\n            }\n          } else if (normalizedTranslate >= normalizedGrid) {\n            slideIndex = i;\n          }\n        }\n      }\n      // Directions locks\n      if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n          return false;\n        }\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n          if ((activeIndex || 0) !== slideIndex) {\n            return false;\n          }\n        }\n      }\n      if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n        swiper.emit('beforeSlideChangeStart');\n      }\n\n      // Update progress\n      swiper.updateProgress(translate);\n      let direction;\n      if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n      // Update Index\n      if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n        swiper.updateActiveIndex(slideIndex);\n        // Update Height\n        if (params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n        swiper.updateSlidesClasses();\n        if (params.effect !== 'slide') {\n          swiper.setTranslate(translate);\n        }\n        if (direction !== 'reset') {\n          swiper.transitionStart(runCallbacks, direction);\n          swiper.transitionEnd(runCallbacks, direction);\n        }\n        return false;\n      }\n      if (params.cssMode) {\n        const isH = swiper.isHorizontal();\n        const t = rtl ? translate : -translate;\n        if (speed === 0) {\n          const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n          if (isVirtual) {\n            swiper.wrapperEl.style.scrollSnapType = 'none';\n            swiper._immediateVirtual = true;\n          }\n          if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n            swiper._cssModeVirtualInitialSet = true;\n            requestAnimationFrame(() => {\n              wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n            });\n          } else {\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n          }\n          if (isVirtual) {\n            requestAnimationFrame(() => {\n              swiper.wrapperEl.style.scrollSnapType = '';\n              swiper._immediateVirtual = false;\n            });\n          }\n        } else {\n          if (!swiper.support.smoothScroll) {\n            animateCSSModeScroll({\n              swiper,\n              targetPosition: t,\n              side: isH ? 'left' : 'top'\n            });\n            return true;\n          }\n          wrapperEl.scrollTo({\n            [isH ? 'left' : 'top']: t,\n            behavior: 'smooth'\n          });\n        }\n        return true;\n      }\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (speed === 0) {\n        swiper.transitionEnd(runCallbacks, direction);\n      } else if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      }\n      return true;\n    }\n\n    function slideToLoop(index, speed, runCallbacks, internal) {\n      if (index === void 0) {\n        index = 0;\n      }\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      if (typeof index === 'string') {\n        const indexAsNumber = parseInt(index, 10);\n        index = indexAsNumber;\n      }\n      const swiper = this;\n      let newIndex = index;\n      if (swiper.params.loop) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          // eslint-disable-next-line\n          newIndex = newIndex + swiper.virtual.slidesBefore;\n        } else {\n          newIndex = elementIndex(swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === newIndex)[0]);\n        }\n      }\n      return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideNext(speed, runCallbacks, internal) {\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      const {\n        enabled,\n        params,\n        animating\n      } = swiper;\n      if (!enabled) return swiper;\n      let perGroup = params.slidesPerGroup;\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n        perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n      }\n      const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      if (params.loop) {\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\n        swiper.loopFix({\n          direction: 'next'\n        });\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\n      }\n      if (params.rewind && swiper.isEnd) {\n        return swiper.slideTo(0, speed, runCallbacks, internal);\n      }\n      return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slidePrev(speed, runCallbacks, internal) {\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      const {\n        params,\n        snapGrid,\n        slidesGrid,\n        rtlTranslate,\n        enabled,\n        animating\n      } = swiper;\n      if (!enabled) return swiper;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      if (params.loop) {\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\n        swiper.loopFix({\n          direction: 'prev'\n        });\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\n      }\n      const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n      function normalize(val) {\n        if (val < 0) return -Math.floor(Math.abs(val));\n        return Math.floor(val);\n      }\n      const normalizedTranslate = normalize(translate);\n      const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n      let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n      if (typeof prevSnap === 'undefined' && params.cssMode) {\n        let prevSnapIndex;\n        snapGrid.forEach((snap, snapIndex) => {\n          if (normalizedTranslate >= snap) {\n            // prevSnap = snap;\n            prevSnapIndex = snapIndex;\n          }\n        });\n        if (typeof prevSnapIndex !== 'undefined') {\n          prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n        }\n      }\n      let prevIndex = 0;\n      if (typeof prevSnap !== 'undefined') {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n        if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n          prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n          prevIndex = Math.max(prevIndex, 0);\n        }\n      }\n      if (params.rewind && swiper.isBeginning) {\n        const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n        return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n      }\n      return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideReset(speed, runCallbacks, internal) {\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideToClosest(speed, runCallbacks, internal, threshold) {\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      if (threshold === void 0) {\n        threshold = 0.5;\n      }\n      const swiper = this;\n      let index = swiper.activeIndex;\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n      const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      if (translate >= swiper.snapGrid[snapIndex]) {\n        // The current translate is on or after the current snap index, so the choice\n        // is between the current index and the one after it.\n        const currentSnap = swiper.snapGrid[snapIndex];\n        const nextSnap = swiper.snapGrid[snapIndex + 1];\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n          index += swiper.params.slidesPerGroup;\n        }\n      } else {\n        // The current translate is before the current snap index, so the choice\n        // is between the current index and the one before it.\n        const prevSnap = swiper.snapGrid[snapIndex - 1];\n        const currentSnap = swiper.snapGrid[snapIndex];\n        if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n          index -= swiper.params.slidesPerGroup;\n        }\n      }\n      index = Math.max(index, 0);\n      index = Math.min(index, swiper.slidesGrid.length - 1);\n      return swiper.slideTo(index, speed, runCallbacks, internal);\n    }\n\n    function slideToClickedSlide() {\n      const swiper = this;\n      const {\n        params,\n        slidesEl\n      } = swiper;\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n      let slideToIndex = swiper.clickedIndex;\n      let realIndex;\n      const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n      if (params.loop) {\n        if (swiper.animating) return;\n        realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n        if (params.centeredSlides) {\n          if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n            swiper.loopFix();\n            slideToIndex = elementIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n            nextTick(() => {\n              swiper.slideTo(slideToIndex);\n            });\n          } else {\n            swiper.slideTo(slideToIndex);\n          }\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n          swiper.loopFix();\n          slideToIndex = elementIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n          nextTick(() => {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    }\n\n    var slide = {\n      slideTo,\n      slideToLoop,\n      slideNext,\n      slidePrev,\n      slideReset,\n      slideToClosest,\n      slideToClickedSlide\n    };\n\n    function loopCreate(slideRealIndex) {\n      const swiper = this;\n      const {\n        params,\n        slidesEl\n      } = swiper;\n      if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n      const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n      slides.forEach((el, index) => {\n        el.setAttribute('data-swiper-slide-index', index);\n      });\n      swiper.loopFix({\n        slideRealIndex,\n        direction: params.centeredSlides ? undefined : 'next'\n      });\n    }\n\n    function loopFix(_temp) {\n      let {\n        slideRealIndex,\n        slideTo = true,\n        direction,\n        setTranslate,\n        activeSlideIndex,\n        byController,\n        byMousewheel\n      } = _temp === void 0 ? {} : _temp;\n      const swiper = this;\n      if (!swiper.params.loop) return;\n      swiper.emit('beforeLoopFix');\n      const {\n        slides,\n        allowSlidePrev,\n        allowSlideNext,\n        slidesEl,\n        params\n      } = swiper;\n      swiper.allowSlidePrev = true;\n      swiper.allowSlideNext = true;\n      if (swiper.virtual && params.virtual.enabled) {\n        if (slideTo) {\n          if (!params.centeredSlides && swiper.snapIndex === 0) {\n            swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n          } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n            swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n          } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n            swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n          }\n        }\n        swiper.allowSlidePrev = allowSlidePrev;\n        swiper.allowSlideNext = allowSlideNext;\n        swiper.emit('loopFix');\n        return;\n      }\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n      let loopedSlides = params.loopedSlides || slidesPerView;\n      if (loopedSlides % params.slidesPerGroup !== 0) {\n        loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n      }\n      swiper.loopedSlides = loopedSlides;\n      const prependSlidesIndexes = [];\n      const appendSlidesIndexes = [];\n      let activeIndex = swiper.activeIndex;\n      if (typeof activeSlideIndex === 'undefined') {\n        activeSlideIndex = elementIndex(swiper.slides.filter(el => el.classList.contains('swiper-slide-active'))[0]);\n      } else {\n        activeIndex = activeSlideIndex;\n      }\n      const isNext = direction === 'next' || !direction;\n      const isPrev = direction === 'prev' || !direction;\n      let slidesPrepended = 0;\n      let slidesAppended = 0;\n      // prepend last slides before start\n      if (activeSlideIndex < loopedSlides) {\n        slidesPrepended = loopedSlides - activeSlideIndex;\n        for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n          const index = i - Math.floor(i / slides.length) * slides.length;\n          prependSlidesIndexes.push(slides.length - index - 1);\n        }\n      } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n        slidesAppended = activeSlideIndex - (swiper.slides.length - loopedSlides * 2);\n        for (let i = 0; i < slidesAppended; i += 1) {\n          const index = i - Math.floor(i / slides.length) * slides.length;\n          appendSlidesIndexes.push(index);\n        }\n      }\n      if (isPrev) {\n        prependSlidesIndexes.forEach(index => {\n          slidesEl.prepend(swiper.slides[index]);\n        });\n      }\n      if (isNext) {\n        appendSlidesIndexes.forEach(index => {\n          slidesEl.append(swiper.slides[index]);\n        });\n      }\n      swiper.recalcSlides();\n      if (params.watchSlidesProgress) {\n        swiper.updateSlidesOffset();\n      }\n      if (slideTo) {\n        if (prependSlidesIndexes.length > 0 && isPrev) {\n          if (typeof slideRealIndex === 'undefined') {\n            const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n            const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n            const diff = newSlideTranslate - currentSlideTranslate;\n            if (byMousewheel) {\n              swiper.setTranslate(swiper.translate - diff);\n            } else {\n              swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n              if (setTranslate) {\n                swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n              }\n            }\n          } else {\n            if (setTranslate) {\n              swiper.slideToLoop(slideRealIndex, 0, false, true);\n            }\n          }\n        } else if (appendSlidesIndexes.length > 0 && isNext) {\n          if (typeof slideRealIndex === 'undefined') {\n            const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n            const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n            const diff = newSlideTranslate - currentSlideTranslate;\n            if (byMousewheel) {\n              swiper.setTranslate(swiper.translate - diff);\n            } else {\n              swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n              if (setTranslate) {\n                swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n              }\n            }\n          } else {\n            swiper.slideToLoop(slideRealIndex, 0, false, true);\n          }\n        }\n      }\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      if (swiper.controller && swiper.controller.control && !byController) {\n        const loopParams = {\n          slideRealIndex,\n          slideTo: false,\n          direction,\n          setTranslate,\n          activeSlideIndex,\n          byController: true\n        };\n        if (Array.isArray(swiper.controller.control)) {\n          swiper.controller.control.forEach(c => {\n            if (c.params.loop) c.loopFix(loopParams);\n          });\n        } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n          swiper.controller.control.loopFix(loopParams);\n        }\n      }\n      swiper.emit('loopFix');\n    }\n\n    function loopDestroy() {\n      const swiper = this;\n      const {\n        slides,\n        params,\n        slidesEl\n      } = swiper;\n      if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n      swiper.recalcSlides();\n      const newSlidesOrder = [];\n      slides.forEach(slideEl => {\n        const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n        newSlidesOrder[index] = slideEl;\n      });\n      slides.forEach(slideEl => {\n        slideEl.removeAttribute('data-swiper-slide-index');\n      });\n      newSlidesOrder.forEach(slideEl => {\n        slidesEl.append(slideEl);\n      });\n      swiper.recalcSlides();\n      swiper.slideTo(swiper.realIndex, 0);\n    }\n\n    var loop = {\n      loopCreate,\n      loopFix,\n      loopDestroy\n    };\n\n    function setGrabCursor(moving) {\n      const swiper = this;\n      if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n      const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n      el.style.cursor = 'move';\n      el.style.cursor = moving ? 'grabbing' : 'grab';\n    }\n\n    function unsetGrabCursor() {\n      const swiper = this;\n      if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n        return;\n      }\n      swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n    }\n\n    var grabCursor = {\n      setGrabCursor,\n      unsetGrabCursor\n    };\n\n    // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n    function closestElement(selector, base) {\n      if (base === void 0) {\n        base = this;\n      }\n      function __closestFrom(el) {\n        if (!el || el === getDocument() || el === getWindow()) return null;\n        if (el.assignedSlot) el = el.assignedSlot;\n        const found = el.closest(selector);\n        if (!found && !el.getRootNode) {\n          return null;\n        }\n        return found || __closestFrom(el.getRootNode().host);\n      }\n      return __closestFrom(base);\n    }\n    function onTouchStart(event) {\n      const swiper = this;\n      const document = getDocument();\n      const window = getWindow();\n      const data = swiper.touchEventsData;\n      data.evCache.push(event);\n      const {\n        params,\n        touches,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return;\n      }\n      if (!swiper.animating && params.cssMode && params.loop) {\n        swiper.loopFix();\n      }\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n      let targetEl = e.target;\n      if (params.touchEventsTarget === 'wrapper') {\n        if (!swiper.wrapperEl.contains(targetEl)) return;\n      }\n      if ('which' in e && e.which === 3) return;\n      if ('button' in e && e.button > 0) return;\n      if (data.isTouched && data.isMoved) return;\n\n      // change target el for shadow root component\n      const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n      // eslint-disable-next-line\n      const eventPath = event.composedPath ? event.composedPath() : event.path;\n      if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n        targetEl = eventPath[0];\n      }\n      const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n      const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n      // use closestElement for shadow root element to get the actual closest for nested shadow root element\n      if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n        swiper.allowClick = true;\n        return;\n      }\n      if (params.swipeHandler) {\n        if (!targetEl.closest(params.swipeHandler)) return;\n      }\n      touches.currentX = e.pageX;\n      touches.currentY = e.pageY;\n      const startX = touches.currentX;\n      const startY = touches.currentY;\n\n      // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n      const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n      const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n      if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n        if (edgeSwipeDetection === 'prevent') {\n          event.preventDefault();\n        } else {\n          return;\n        }\n      }\n      Object.assign(data, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined\n      });\n      touches.startX = startX;\n      touches.startY = startY;\n      data.touchStartTime = now();\n      swiper.allowClick = true;\n      swiper.updateSize();\n      swiper.swipeDirection = undefined;\n      if (params.threshold > 0) data.allowThresholdMove = false;\n      let preventDefault = true;\n      if (targetEl.matches(data.focusableElements)) {\n        preventDefault = false;\n        if (targetEl.nodeName === 'SELECT') {\n          data.isTouched = false;\n        }\n      }\n      if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n        document.activeElement.blur();\n      }\n      const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n        e.preventDefault();\n      }\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n        swiper.freeMode.onTouchStart();\n      }\n      swiper.emit('touchStart', e);\n    }\n\n    function onTouchMove(event) {\n      const document = getDocument();\n      const swiper = this;\n      const data = swiper.touchEventsData;\n      const {\n        params,\n        touches,\n        rtlTranslate: rtl,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n      if (!data.isTouched) {\n        if (data.startMoving && data.isScrolling) {\n          swiper.emit('touchMoveOpposite', e);\n        }\n        return;\n      }\n      const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n      if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n      const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n      const pageX = targetTouch.pageX;\n      const pageY = targetTouch.pageY;\n      if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n      }\n      if (!swiper.allowTouchMove) {\n        if (!e.target.matches(data.focusableElements)) {\n          swiper.allowClick = false;\n        }\n        if (data.isTouched) {\n          Object.assign(touches, {\n            startX: pageX,\n            startY: pageY,\n            prevX: swiper.touches.currentX,\n            prevY: swiper.touches.currentY,\n            currentX: pageX,\n            currentY: pageY\n          });\n          data.touchStartTime = now();\n        }\n        return;\n      }\n      if (params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) {\n          // Vertical\n          if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n            data.isTouched = false;\n            data.isMoved = false;\n            return;\n          }\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n          return;\n        }\n      }\n      if (document.activeElement) {\n        if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n          data.isMoved = true;\n          swiper.allowClick = false;\n          return;\n        }\n      }\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchMove', e);\n      }\n      if (e.targetTouches && e.targetTouches.length > 1) return;\n      touches.currentX = pageX;\n      touches.currentY = pageY;\n      const diffX = touches.currentX - touches.startX;\n      const diffY = touches.currentY - touches.startY;\n      if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n      if (typeof data.isScrolling === 'undefined') {\n        let touchAngle;\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n          data.isScrolling = false;\n        } else {\n          // eslint-disable-next-line\n          if (diffX * diffX + diffY * diffY >= 25) {\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n          }\n        }\n      }\n      if (data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      if (typeof data.startMoving === 'undefined') {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n          data.startMoving = true;\n        }\n      }\n      if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n        data.isTouched = false;\n        return;\n      }\n      if (!data.startMoving) {\n        return;\n      }\n      swiper.allowClick = false;\n      if (!params.cssMode && e.cancelable) {\n        e.preventDefault();\n      }\n      if (params.touchMoveStopPropagation && !params.nested) {\n        e.stopPropagation();\n      }\n      let diff = swiper.isHorizontal() ? diffX : diffY;\n      let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n      if (params.oneWayMovement) {\n        diff = Math.abs(diff) * (rtl ? 1 : -1);\n        touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n      }\n      touches.diff = diff;\n      diff *= params.touchRatio;\n      if (rtl) {\n        diff = -diff;\n        touchesDiff = -touchesDiff;\n      }\n      const prevTouchesDirection = swiper.touchesDirection;\n      swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n      swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n      const isLoop = swiper.params.loop && !params.cssMode;\n      if (!data.isMoved) {\n        if (isLoop) {\n          swiper.loopFix({\n            direction: swiper.swipeDirection\n          });\n        }\n        data.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n        if (swiper.animating) {\n          const evt = new window.CustomEvent('transitionend', {\n            bubbles: true,\n            cancelable: true\n          });\n          swiper.wrapperEl.dispatchEvent(evt);\n        }\n        data.allowMomentumBounce = false;\n        // Grab Cursor\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n          swiper.setGrabCursor(true);\n        }\n        swiper.emit('sliderFirstMove', e);\n      }\n      let loopFixed;\n      if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n        // need another loop fix\n        swiper.loopFix({\n          direction: swiper.swipeDirection,\n          setTranslate: true\n        });\n        loopFixed = true;\n      }\n      swiper.emit('sliderMove', e);\n      data.isMoved = true;\n      data.currentTranslate = diff + data.startTranslate;\n      let disableParentSwiper = true;\n      let resistanceRatio = params.resistanceRatio;\n      if (params.touchReleaseOnEdges) {\n        resistanceRatio = 0;\n      }\n      if (diff > 0) {\n        if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n          swiper.loopFix({\n            direction: 'prev',\n            setTranslate: true,\n            activeSlideIndex: 0\n          });\n        }\n        if (data.currentTranslate > swiper.minTranslate()) {\n          disableParentSwiper = false;\n          if (params.resistance) {\n            data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n          }\n        }\n      } else if (diff < 0) {\n        if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n          swiper.loopFix({\n            direction: 'next',\n            setTranslate: true,\n            activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n          });\n        }\n        if (data.currentTranslate < swiper.maxTranslate()) {\n          disableParentSwiper = false;\n          if (params.resistance) {\n            data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n          }\n        }\n      }\n      if (disableParentSwiper) {\n        e.preventedByNestedSwiper = true;\n      }\n\n      // Directions locks\n      if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n      if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n      if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n        data.currentTranslate = data.startTranslate;\n      }\n\n      // Threshold\n      if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n          if (!data.allowThresholdMove) {\n            data.allowThresholdMove = true;\n            touches.startX = touches.currentX;\n            touches.startY = touches.currentY;\n            data.currentTranslate = data.startTranslate;\n            touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n            return;\n          }\n        } else {\n          data.currentTranslate = data.startTranslate;\n          return;\n        }\n      }\n      if (!params.followFinger || params.cssMode) return;\n\n      // Update active index in free mode\n      if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n        swiper.freeMode.onTouchMove();\n      }\n      // Update progress\n      swiper.updateProgress(data.currentTranslate);\n      // Update translate\n      swiper.setTranslate(data.currentTranslate);\n    }\n\n    function onTouchEnd(event) {\n      const swiper = this;\n      const data = swiper.touchEventsData;\n      const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n      if (pointerIndex >= 0) {\n        data.evCache.splice(pointerIndex, 1);\n      }\n      if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) return;\n      const {\n        params,\n        touches,\n        rtlTranslate: rtl,\n        slidesGrid,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchEnd', e);\n      }\n      data.allowTouchCallbacks = false;\n      if (!data.isTouched) {\n        if (data.isMoved && params.grabCursor) {\n          swiper.setGrabCursor(false);\n        }\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      }\n      // Return Grab Cursor\n      if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(false);\n      }\n\n      // Time diff\n      const touchEndTime = now();\n      const timeDiff = touchEndTime - data.touchStartTime;\n\n      // Tap, doubleTap, Click\n      if (swiper.allowClick) {\n        const pathTree = e.path || e.composedPath && e.composedPath();\n        swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n        swiper.emit('tap click', e);\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n          swiper.emit('doubleTap doubleClick', e);\n        }\n      }\n      data.lastClickTime = now();\n      nextTick(() => {\n        if (!swiper.destroyed) swiper.allowClick = true;\n      });\n      if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n        data.isTouched = false;\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      }\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      let currentPos;\n      if (params.followFinger) {\n        currentPos = rtl ? swiper.translate : -swiper.translate;\n      } else {\n        currentPos = -data.currentTranslate;\n      }\n      if (params.cssMode) {\n        return;\n      }\n      if (swiper.params.freeMode && params.freeMode.enabled) {\n        swiper.freeMode.onTouchEnd({\n          currentPos\n        });\n        return;\n      }\n\n      // Find current slide\n      let stopIndex = 0;\n      let groupSize = swiper.slidesSizesGrid[0];\n      for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n        const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n        if (typeof slidesGrid[i + increment] !== 'undefined') {\n          if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n            stopIndex = i;\n            groupSize = slidesGrid[i + increment] - slidesGrid[i];\n          }\n        } else if (currentPos >= slidesGrid[i]) {\n          stopIndex = i;\n          groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n      }\n      let rewindFirstIndex = null;\n      let rewindLastIndex = null;\n      if (params.rewind) {\n        if (swiper.isBeginning) {\n          rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n        } else if (swiper.isEnd) {\n          rewindFirstIndex = 0;\n        }\n      }\n      // Find current slide size\n      const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n      const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n      if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        if (swiper.swipeDirection === 'next') {\n          if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n        }\n        if (swiper.swipeDirection === 'prev') {\n          if (ratio > 1 - params.longSwipesRatio) {\n            swiper.slideTo(stopIndex + increment);\n          } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n            swiper.slideTo(rewindLastIndex);\n          } else {\n            swiper.slideTo(stopIndex);\n          }\n        }\n      } else {\n        // Short swipes\n        if (!params.shortSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n        if (!isNavButtonTarget) {\n          if (swiper.swipeDirection === 'next') {\n            swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n          }\n          if (swiper.swipeDirection === 'prev') {\n            swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n          }\n        } else if (e.target === swiper.navigation.nextEl) {\n          swiper.slideTo(stopIndex + increment);\n        } else {\n          swiper.slideTo(stopIndex);\n        }\n      }\n    }\n\n    let timeout;\n    function onResize() {\n      const swiper = this;\n      const {\n        params,\n        el\n      } = swiper;\n      if (el && el.offsetWidth === 0) return;\n\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Save locks\n      const {\n        allowSlideNext,\n        allowSlidePrev,\n        snapGrid\n      } = swiper;\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      // Disable locks on resize\n      swiper.allowSlideNext = true;\n      swiper.allowSlidePrev = true;\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateSlidesClasses();\n      const isVirtualLoop = isVirtual && params.loop;\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        if (swiper.params.loop && !isVirtual) {\n          swiper.slideToLoop(swiper.realIndex, 0, false, true);\n        } else {\n          swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n      }\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          swiper.autoplay.resume();\n        }, 500);\n      }\n      // Return locks after resize\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n    }\n\n    function onClick(e) {\n      const swiper = this;\n      if (!swiper.enabled) return;\n      if (!swiper.allowClick) {\n        if (swiper.params.preventClicks) e.preventDefault();\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n        }\n      }\n    }\n\n    function onScroll() {\n      const swiper = this;\n      const {\n        wrapperEl,\n        rtlTranslate,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      swiper.previousTranslate = swiper.translate;\n      if (swiper.isHorizontal()) {\n        swiper.translate = -wrapperEl.scrollLeft;\n      } else {\n        swiper.translate = -wrapperEl.scrollTop;\n      }\n      // eslint-disable-next-line\n      if (swiper.translate === 0) swiper.translate = 0;\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n      let newProgress;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n      }\n      if (newProgress !== swiper.progress) {\n        swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n      }\n      swiper.emit('setTranslate', swiper.translate, false);\n    }\n\n    const processLazyPreloader = (swiper, imageEl) => {\n      if (!swiper || swiper.destroyed || !swiper.params) return;\n      const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n      const slideEl = imageEl.closest(slideSelector());\n      if (slideEl) {\n        const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n        if (lazyEl) lazyEl.remove();\n      }\n    };\n\n    function onLoad(e) {\n      const swiper = this;\n      processLazyPreloader(swiper, e.target);\n      swiper.update();\n    }\n\n    let dummyEventAttached = false;\n    function dummyEventListener() {}\n    const events = (swiper, method) => {\n      const document = getDocument();\n      const {\n        params,\n        el,\n        wrapperEl,\n        device\n      } = swiper;\n      const capture = !!params.nested;\n      const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n      const swiperMethod = method;\n\n      // Touch Events\n      el[domMethod]('pointerdown', swiper.onTouchStart, {\n        passive: false\n      });\n      document[domMethod]('pointermove', swiper.onTouchMove, {\n        passive: false,\n        capture\n      });\n      document[domMethod]('pointerup', swiper.onTouchEnd, {\n        passive: true\n      });\n      document[domMethod]('pointercancel', swiper.onTouchEnd, {\n        passive: true\n      });\n      document[domMethod]('pointerout', swiper.onTouchEnd, {\n        passive: true\n      });\n      document[domMethod]('pointerleave', swiper.onTouchEnd, {\n        passive: true\n      });\n\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        el[domMethod]('click', swiper.onClick, true);\n      }\n      if (params.cssMode) {\n        wrapperEl[domMethod]('scroll', swiper.onScroll);\n      }\n\n      // Resize handler\n      if (params.updateOnWindowResize) {\n        swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n      } else {\n        swiper[swiperMethod]('observerUpdate', onResize, true);\n      }\n\n      // Images loader\n      el[domMethod]('load', swiper.onLoad, {\n        capture: true\n      });\n    };\n    function attachEvents() {\n      const swiper = this;\n      const document = getDocument();\n      const {\n        params\n      } = swiper;\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n      if (params.cssMode) {\n        swiper.onScroll = onScroll.bind(swiper);\n      }\n      swiper.onClick = onClick.bind(swiper);\n      swiper.onLoad = onLoad.bind(swiper);\n      if (!dummyEventAttached) {\n        document.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n      events(swiper, 'on');\n    }\n    function detachEvents() {\n      const swiper = this;\n      events(swiper, 'off');\n    }\n    var events$1 = {\n      attachEvents,\n      detachEvents\n    };\n\n    const isGridEnabled = (swiper, params) => {\n      return swiper.grid && params.grid && params.grid.rows > 1;\n    };\n    function setBreakpoint() {\n      const swiper = this;\n      const {\n        realIndex,\n        initialized,\n        params,\n        el\n      } = swiper;\n      const breakpoints = params.breakpoints;\n      if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n      // Get breakpoint for window width and update parameters\n      const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n      if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n      const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      const wasMultiRow = isGridEnabled(swiper, params);\n      const isMultiRow = isGridEnabled(swiper, breakpointParams);\n      const wasEnabled = params.enabled;\n      if (wasMultiRow && !isMultiRow) {\n        el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n        swiper.emitContainerClasses();\n      } else if (!wasMultiRow && isMultiRow) {\n        el.classList.add(`${params.containerModifierClass}grid`);\n        if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n          el.classList.add(`${params.containerModifierClass}grid-column`);\n        }\n        swiper.emitContainerClasses();\n      }\n\n      // Toggle navigation, pagination, scrollbar\n      ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n        const wasModuleEnabled = params[prop] && params[prop].enabled;\n        const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n        if (wasModuleEnabled && !isModuleEnabled) {\n          swiper[prop].disable();\n        }\n        if (!wasModuleEnabled && isModuleEnabled) {\n          swiper[prop].enable();\n        }\n      });\n      const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n      extend(swiper.params, breakpointParams);\n      const isEnabled = swiper.params.enabled;\n      Object.assign(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev\n      });\n      if (wasEnabled && !isEnabled) {\n        swiper.disable();\n      } else if (!wasEnabled && isEnabled) {\n        swiper.enable();\n      }\n      swiper.currentBreakpoint = breakpoint;\n      swiper.emit('_beforeBreakpoint', breakpointParams);\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate(realIndex);\n        swiper.updateSlides();\n      }\n      swiper.emit('breakpoint', breakpointParams);\n    }\n\n    function getBreakpoint(breakpoints, base, containerEl) {\n      if (base === void 0) {\n        base = 'window';\n      }\n      if (!breakpoints || base === 'container' && !containerEl) return undefined;\n      let breakpoint = false;\n      const window = getWindow();\n      const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n      const points = Object.keys(breakpoints).map(point => {\n        if (typeof point === 'string' && point.indexOf('@') === 0) {\n          const minRatio = parseFloat(point.substr(1));\n          const value = currentHeight * minRatio;\n          return {\n            value,\n            point\n          };\n        }\n        return {\n          value: point,\n          point\n        };\n      });\n      points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n      for (let i = 0; i < points.length; i += 1) {\n        const {\n          point,\n          value\n        } = points[i];\n        if (base === 'window') {\n          if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n            breakpoint = point;\n          }\n        } else if (value <= containerEl.clientWidth) {\n          breakpoint = point;\n        }\n      }\n      return breakpoint || 'max';\n    }\n\n    var breakpoints = {\n      setBreakpoint,\n      getBreakpoint\n    };\n\n    function prepareClasses(entries, prefix) {\n      const resultClasses = [];\n      entries.forEach(item => {\n        if (typeof item === 'object') {\n          Object.keys(item).forEach(classNames => {\n            if (item[classNames]) {\n              resultClasses.push(prefix + classNames);\n            }\n          });\n        } else if (typeof item === 'string') {\n          resultClasses.push(prefix + item);\n        }\n      });\n      return resultClasses;\n    }\n    function addClasses() {\n      const swiper = this;\n      const {\n        classNames,\n        params,\n        rtl,\n        el,\n        device\n      } = swiper;\n      // prettier-ignore\n      const suffixes = prepareClasses(['initialized', params.direction, {\n        'free-mode': swiper.params.freeMode && params.freeMode.enabled\n      }, {\n        'autoheight': params.autoHeight\n      }, {\n        'rtl': rtl\n      }, {\n        'grid': params.grid && params.grid.rows > 1\n      }, {\n        'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n      }, {\n        'android': device.android\n      }, {\n        'ios': device.ios\n      }, {\n        'css-mode': params.cssMode\n      }, {\n        'centered': params.cssMode && params.centeredSlides\n      }, {\n        'watch-progress': params.watchSlidesProgress\n      }], params.containerModifierClass);\n      classNames.push(...suffixes);\n      el.classList.add(...classNames);\n      swiper.emitContainerClasses();\n    }\n\n    function removeClasses() {\n      const swiper = this;\n      const {\n        el,\n        classNames\n      } = swiper;\n      el.classList.remove(...classNames);\n      swiper.emitContainerClasses();\n    }\n\n    var classes = {\n      addClasses,\n      removeClasses\n    };\n\n    function checkOverflow() {\n      const swiper = this;\n      const {\n        isLocked: wasLocked,\n        params\n      } = swiper;\n      const {\n        slidesOffsetBefore\n      } = params;\n      if (slidesOffsetBefore) {\n        const lastSlideIndex = swiper.slides.length - 1;\n        const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n        swiper.isLocked = swiper.size > lastSlideRightEdge;\n      } else {\n        swiper.isLocked = swiper.snapGrid.length === 1;\n      }\n      if (params.allowSlideNext === true) {\n        swiper.allowSlideNext = !swiper.isLocked;\n      }\n      if (params.allowSlidePrev === true) {\n        swiper.allowSlidePrev = !swiper.isLocked;\n      }\n      if (wasLocked && wasLocked !== swiper.isLocked) {\n        swiper.isEnd = false;\n      }\n      if (wasLocked !== swiper.isLocked) {\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n      }\n    }\n    var checkOverflow$1 = {\n      checkOverflow\n    };\n\n    var defaults = {\n      init: true,\n      direction: 'horizontal',\n      oneWayMovement: false,\n      touchEventsTarget: 'wrapper',\n      initialSlide: 0,\n      speed: 300,\n      cssMode: false,\n      updateOnWindowResize: true,\n      resizeObserver: true,\n      nested: false,\n      createElements: false,\n      enabled: true,\n      focusableElements: 'input, select, option, textarea, button, video, label',\n      // Overrides\n      width: null,\n      height: null,\n      //\n      preventInteractionOnTransition: false,\n      // ssr\n      userAgent: null,\n      url: null,\n      // To support iOS's swipe-to-go-back gesture (when being used in-app).\n      edgeSwipeDetection: false,\n      edgeSwipeThreshold: 20,\n      // Autoheight\n      autoHeight: false,\n      // Set wrapper width\n      setWrapperSize: false,\n      // Virtual Translate\n      virtualTranslate: false,\n      // Effects\n      effect: 'slide',\n      // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n      // Breakpoints\n      breakpoints: undefined,\n      breakpointsBase: 'window',\n      // Slides grid\n      spaceBetween: 0,\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      slidesPerGroupSkip: 0,\n      slidesPerGroupAuto: false,\n      centeredSlides: false,\n      centeredSlidesBounds: false,\n      slidesOffsetBefore: 0,\n      // in px\n      slidesOffsetAfter: 0,\n      // in px\n      normalizeSlideIndex: true,\n      centerInsufficientSlides: false,\n      // Disable swiper and hide navigation when container not overflow\n      watchOverflow: true,\n      // Round length\n      roundLengths: false,\n      // Touches\n      touchRatio: 1,\n      touchAngle: 45,\n      simulateTouch: true,\n      shortSwipes: true,\n      longSwipes: true,\n      longSwipesRatio: 0.5,\n      longSwipesMs: 300,\n      followFinger: true,\n      allowTouchMove: true,\n      threshold: 5,\n      touchMoveStopPropagation: false,\n      touchStartPreventDefault: true,\n      touchStartForcePreventDefault: false,\n      touchReleaseOnEdges: false,\n      // Unique Navigation Elements\n      uniqueNavElements: true,\n      // Resistance\n      resistance: true,\n      resistanceRatio: 0.85,\n      // Progress\n      watchSlidesProgress: false,\n      // Cursor\n      grabCursor: false,\n      // Clicks\n      preventClicks: true,\n      preventClicksPropagation: true,\n      slideToClickedSlide: false,\n      // loop\n      loop: false,\n      loopedSlides: null,\n      loopPreventsSliding: true,\n      // rewind\n      rewind: false,\n      // Swiping/no swiping\n      allowSlidePrev: true,\n      allowSlideNext: true,\n      swipeHandler: null,\n      // '.swipe-handler',\n      noSwiping: true,\n      noSwipingClass: 'swiper-no-swiping',\n      noSwipingSelector: null,\n      // Passive Listeners\n      passiveListeners: true,\n      maxBackfaceHiddenSlides: 10,\n      // NS\n      containerModifierClass: 'swiper-',\n      // NEW\n      slideClass: 'swiper-slide',\n      slideActiveClass: 'swiper-slide-active',\n      slideVisibleClass: 'swiper-slide-visible',\n      slideNextClass: 'swiper-slide-next',\n      slidePrevClass: 'swiper-slide-prev',\n      wrapperClass: 'swiper-wrapper',\n      lazyPreloaderClass: 'swiper-lazy-preloader',\n      // Callbacks\n      runCallbacksOnInit: true,\n      // Internals\n      _emitClasses: false\n    };\n\n    function moduleExtendParams(params, allModulesParams) {\n      return function extendParams(obj) {\n        if (obj === void 0) {\n          obj = {};\n        }\n        const moduleParamName = Object.keys(obj)[0];\n        const moduleParams = obj[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) {\n          extend(allModulesParams, obj);\n          return;\n        }\n        if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n          params[moduleParamName] = {\n            auto: true\n          };\n        }\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n          extend(allModulesParams, obj);\n          return;\n        }\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = {\n            enabled: true\n          };\n        }\n        if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = {\n          enabled: false\n        };\n        extend(allModulesParams, obj);\n      };\n    }\n\n    /* eslint no-param-reassign: \"off\" */\n    const prototypes = {\n      eventsEmitter,\n      update,\n      translate,\n      transition,\n      slide,\n      loop,\n      grabCursor,\n      events: events$1,\n      breakpoints,\n      checkOverflow: checkOverflow$1,\n      classes\n    };\n    const extendedDefaults = {};\n    class Swiper {\n      constructor() {\n        let el;\n        let params;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n          params = args[0];\n        } else {\n          [el, params] = args;\n        }\n        if (!params) params = {};\n        params = extend({}, params);\n        if (el && !params.el) params.el = el;\n        const document = getDocument();\n        if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n          const swipers = [];\n          document.querySelectorAll(params.el).forEach(containerEl => {\n            const newParams = extend({}, params, {\n              el: containerEl\n            });\n            swipers.push(new Swiper(newParams));\n          });\n          // eslint-disable-next-line no-constructor-return\n          return swipers;\n        }\n\n        // Swiper Instance\n        const swiper = this;\n        swiper.__swiper__ = true;\n        swiper.support = getSupport();\n        swiper.device = getDevice({\n          userAgent: params.userAgent\n        });\n        swiper.browser = getBrowser();\n        swiper.eventsListeners = {};\n        swiper.eventsAnyListeners = [];\n        swiper.modules = [...swiper.__modules__];\n        if (params.modules && Array.isArray(params.modules)) {\n          swiper.modules.push(...params.modules);\n        }\n        const allModulesParams = {};\n        swiper.modules.forEach(mod => {\n          mod({\n            params,\n            swiper,\n            extendParams: moduleExtendParams(params, allModulesParams),\n            on: swiper.on.bind(swiper),\n            once: swiper.once.bind(swiper),\n            off: swiper.off.bind(swiper),\n            emit: swiper.emit.bind(swiper)\n          });\n        });\n\n        // Extend defaults with modules params\n        const swiperParams = extend({}, defaults, allModulesParams);\n\n        // Extend defaults with passed params\n        swiper.params = extend({}, swiperParams, extendedDefaults, params);\n        swiper.originalParams = extend({}, swiper.params);\n        swiper.passedParams = extend({}, params);\n\n        // add event listeners\n        if (swiper.params && swiper.params.on) {\n          Object.keys(swiper.params.on).forEach(eventName => {\n            swiper.on(eventName, swiper.params.on[eventName]);\n          });\n        }\n        if (swiper.params && swiper.params.onAny) {\n          swiper.onAny(swiper.params.onAny);\n        }\n\n        // Extend Swiper\n        Object.assign(swiper, {\n          enabled: swiper.params.enabled,\n          el,\n          // Classes\n          classNames: [],\n          // Slides\n          slides: [],\n          slidesGrid: [],\n          snapGrid: [],\n          slidesSizesGrid: [],\n          // isDirection\n          isHorizontal() {\n            return swiper.params.direction === 'horizontal';\n          },\n          isVertical() {\n            return swiper.params.direction === 'vertical';\n          },\n          // Indexes\n          activeIndex: 0,\n          realIndex: 0,\n          //\n          isBeginning: true,\n          isEnd: false,\n          // Props\n          translate: 0,\n          previousTranslate: 0,\n          progress: 0,\n          velocity: 0,\n          animating: false,\n          // Locks\n          allowSlideNext: swiper.params.allowSlideNext,\n          allowSlidePrev: swiper.params.allowSlidePrev,\n          // Touch Events\n          touchEventsData: {\n            isTouched: undefined,\n            isMoved: undefined,\n            allowTouchCallbacks: undefined,\n            touchStartTime: undefined,\n            isScrolling: undefined,\n            currentTranslate: undefined,\n            startTranslate: undefined,\n            allowThresholdMove: undefined,\n            // Form elements to match\n            focusableElements: swiper.params.focusableElements,\n            // Last click time\n            lastClickTime: now(),\n            clickTimeout: undefined,\n            // Velocities\n            velocities: [],\n            allowMomentumBounce: undefined,\n            startMoving: undefined,\n            evCache: []\n          },\n          // Clicks\n          allowClick: true,\n          // Touches\n          allowTouchMove: swiper.params.allowTouchMove,\n          touches: {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n          },\n          // Images\n          imagesToLoad: [],\n          imagesLoaded: 0\n        });\n        swiper.emit('_swiper');\n\n        // Init\n        if (swiper.params.init) {\n          swiper.init();\n        }\n\n        // Return app instance\n        // eslint-disable-next-line no-constructor-return\n        return swiper;\n      }\n      recalcSlides() {\n        const swiper = this;\n        const {\n          slidesEl,\n          params\n        } = swiper;\n        swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n      }\n      enable() {\n        const swiper = this;\n        if (swiper.enabled) return;\n        swiper.enabled = true;\n        if (swiper.params.grabCursor) {\n          swiper.setGrabCursor();\n        }\n        swiper.emit('enable');\n      }\n      disable() {\n        const swiper = this;\n        if (!swiper.enabled) return;\n        swiper.enabled = false;\n        if (swiper.params.grabCursor) {\n          swiper.unsetGrabCursor();\n        }\n        swiper.emit('disable');\n      }\n      setProgress(progress, speed) {\n        const swiper = this;\n        progress = Math.min(Math.max(progress, 0), 1);\n        const min = swiper.minTranslate();\n        const max = swiper.maxTranslate();\n        const current = (max - min) * progress + min;\n        swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      emitContainerClasses() {\n        const swiper = this;\n        if (!swiper.params._emitClasses || !swiper.el) return;\n        const cls = swiper.el.className.split(' ').filter(className => {\n          return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n        });\n        swiper.emit('_containerClasses', cls.join(' '));\n      }\n      getSlideClasses(slideEl) {\n        const swiper = this;\n        if (swiper.destroyed) return '';\n        return slideEl.className.split(' ').filter(className => {\n          return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n        }).join(' ');\n      }\n      emitSlidesClasses() {\n        const swiper = this;\n        if (!swiper.params._emitClasses || !swiper.el) return;\n        const updates = [];\n        swiper.slides.forEach(slideEl => {\n          const classNames = swiper.getSlideClasses(slideEl);\n          updates.push({\n            slideEl,\n            classNames\n          });\n          swiper.emit('_slideClass', slideEl, classNames);\n        });\n        swiper.emit('_slideClasses', updates);\n      }\n      slidesPerViewDynamic(view, exact) {\n        if (view === void 0) {\n          view = 'current';\n        }\n        if (exact === void 0) {\n          exact = false;\n        }\n        const swiper = this;\n        const {\n          params,\n          slides,\n          slidesGrid,\n          slidesSizesGrid,\n          size: swiperSize,\n          activeIndex\n        } = swiper;\n        let spv = 1;\n        if (params.centeredSlides) {\n          let slideSize = slides[activeIndex].swiperSlideSize;\n          let breakLoop;\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\n            if (slides[i] && !breakLoop) {\n              slideSize += slides[i].swiperSlideSize;\n              spv += 1;\n              if (slideSize > swiperSize) breakLoop = true;\n            }\n          }\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\n            if (slides[i] && !breakLoop) {\n              slideSize += slides[i].swiperSlideSize;\n              spv += 1;\n              if (slideSize > swiperSize) breakLoop = true;\n            }\n          }\n        } else {\n          // eslint-disable-next-line\n          if (view === 'current') {\n            for (let i = activeIndex + 1; i < slides.length; i += 1) {\n              const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n              if (slideInView) {\n                spv += 1;\n              }\n            }\n          } else {\n            // previous\n            for (let i = activeIndex - 1; i >= 0; i -= 1) {\n              const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n              if (slideInView) {\n                spv += 1;\n              }\n            }\n          }\n        }\n        return spv;\n      }\n      update() {\n        const swiper = this;\n        if (!swiper || swiper.destroyed) return;\n        const {\n          snapGrid,\n          params\n        } = swiper;\n        // Breakpoints\n        if (params.breakpoints) {\n          swiper.setBreakpoint();\n        }\n        [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n          if (imageEl.complete) {\n            processLazyPreloader(swiper, imageEl);\n          }\n        });\n        swiper.updateSize();\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        function setTranslate() {\n          const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n          const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n          swiper.setTranslate(newTranslate);\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n        let translated;\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n          setTranslate();\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        } else {\n          if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n            translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n          } else {\n            translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n          }\n          if (!translated) {\n            setTranslate();\n          }\n        }\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n          swiper.checkOverflow();\n        }\n        swiper.emit('update');\n      }\n      changeDirection(newDirection, needUpdate) {\n        if (needUpdate === void 0) {\n          needUpdate = true;\n        }\n        const swiper = this;\n        const currentDirection = swiper.params.direction;\n        if (!newDirection) {\n          // eslint-disable-next-line\n          newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n        }\n        if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n          return swiper;\n        }\n        swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n        swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n        swiper.emitContainerClasses();\n        swiper.params.direction = newDirection;\n        swiper.slides.forEach(slideEl => {\n          if (newDirection === 'vertical') {\n            slideEl.style.width = '';\n          } else {\n            slideEl.style.height = '';\n          }\n        });\n        swiper.emit('changeDirection');\n        if (needUpdate) swiper.update();\n        return swiper;\n      }\n      changeLanguageDirection(direction) {\n        const swiper = this;\n        if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n        swiper.rtl = direction === 'rtl';\n        swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n        if (swiper.rtl) {\n          swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n          swiper.el.dir = 'rtl';\n        } else {\n          swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n          swiper.el.dir = 'ltr';\n        }\n        swiper.update();\n      }\n      mount(element) {\n        const swiper = this;\n        if (swiper.mounted) return true;\n\n        // Find el\n        let el = element || swiper.params.el;\n        if (typeof el === 'string') {\n          el = document.querySelector(el);\n        }\n        if (!el) {\n          return false;\n        }\n        el.swiper = swiper;\n        if (el.shadowEl) {\n          swiper.isElement = true;\n        }\n        const getWrapperSelector = () => {\n          return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n        };\n        const getWrapper = () => {\n          if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n            const res = el.shadowRoot.querySelector(getWrapperSelector());\n            // Children needs to return slot items\n            return res;\n          }\n          return elementChildren(el, getWrapperSelector())[0];\n        };\n        // Find Wrapper\n        let wrapperEl = getWrapper();\n        if (!wrapperEl && swiper.params.createElements) {\n          wrapperEl = createElement('div', swiper.params.wrapperClass);\n          el.append(wrapperEl);\n          elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n            wrapperEl.append(slideEl);\n          });\n        }\n        Object.assign(swiper, {\n          el,\n          wrapperEl,\n          slidesEl: swiper.isElement ? el : wrapperEl,\n          mounted: true,\n          // RTL\n          rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n          rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n          wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n        });\n        return true;\n      }\n      init(el) {\n        const swiper = this;\n        if (swiper.initialized) return swiper;\n        const mounted = swiper.mount(el);\n        if (mounted === false) return swiper;\n        swiper.emit('beforeInit');\n\n        // Set breakpoint\n        if (swiper.params.breakpoints) {\n          swiper.setBreakpoint();\n        }\n\n        // Add Classes\n        swiper.addClasses();\n\n        // Update size\n        swiper.updateSize();\n\n        // Update slides\n        swiper.updateSlides();\n        if (swiper.params.watchOverflow) {\n          swiper.checkOverflow();\n        }\n\n        // Set Grab Cursor\n        if (swiper.params.grabCursor && swiper.enabled) {\n          swiper.setGrabCursor();\n        }\n\n        // Slide To Initial Slide\n        if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n        } else {\n          swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n        }\n\n        // Create loop\n        if (swiper.params.loop) {\n          swiper.loopCreate();\n        }\n\n        // Attach events\n        swiper.attachEvents();\n        [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n          if (imageEl.complete) {\n            processLazyPreloader(swiper, imageEl);\n          } else {\n            imageEl.addEventListener('load', e => {\n              processLazyPreloader(swiper, e.target);\n            });\n          }\n        });\n\n        // Init Flag\n        swiper.initialized = true;\n\n        // Emit\n        swiper.emit('init');\n        swiper.emit('afterInit');\n        return swiper;\n      }\n      destroy(deleteInstance, cleanStyles) {\n        if (deleteInstance === void 0) {\n          deleteInstance = true;\n        }\n        if (cleanStyles === void 0) {\n          cleanStyles = true;\n        }\n        const swiper = this;\n        const {\n          params,\n          el,\n          wrapperEl,\n          slides\n        } = swiper;\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n          return null;\n        }\n        swiper.emit('beforeDestroy');\n\n        // Init Flag\n        swiper.initialized = false;\n\n        // Detach events\n        swiper.detachEvents();\n\n        // Destroy loop\n        if (params.loop) {\n          swiper.loopDestroy();\n        }\n\n        // Cleanup styles\n        if (cleanStyles) {\n          swiper.removeClasses();\n          el.removeAttribute('style');\n          wrapperEl.removeAttribute('style');\n          if (slides && slides.length) {\n            slides.forEach(slideEl => {\n              slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n              slideEl.removeAttribute('style');\n              slideEl.removeAttribute('data-swiper-slide-index');\n            });\n          }\n        }\n        swiper.emit('destroy');\n\n        // Detach emitter events\n        Object.keys(swiper.eventsListeners).forEach(eventName => {\n          swiper.off(eventName);\n        });\n        if (deleteInstance !== false) {\n          swiper.el.swiper = null;\n          deleteProps(swiper);\n        }\n        swiper.destroyed = true;\n        return null;\n      }\n      static extendDefaults(newDefaults) {\n        extend(extendedDefaults, newDefaults);\n      }\n      static get extendedDefaults() {\n        return extendedDefaults;\n      }\n      static get defaults() {\n        return defaults;\n      }\n      static installModule(mod) {\n        if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n        const modules = Swiper.prototype.__modules__;\n        if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n          modules.push(mod);\n        }\n      }\n      static use(module) {\n        if (Array.isArray(module)) {\n          module.forEach(m => Swiper.installModule(m));\n          return Swiper;\n        }\n        Swiper.installModule(module);\n        return Swiper;\n      }\n    }\n    Object.keys(prototypes).forEach(prototypeGroup => {\n      Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n        Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n      });\n    });\n    Swiper.use([Resize, Observer]);\n\n    function Virtual(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      extendParams({\n        virtual: {\n          enabled: false,\n          slides: [],\n          cache: true,\n          renderSlide: null,\n          renderExternal: null,\n          renderExternalUpdate: true,\n          addSlidesBefore: 0,\n          addSlidesAfter: 0\n        }\n      });\n      let cssModeTimeout;\n      const document = getDocument();\n      swiper.virtual = {\n        cache: {},\n        from: undefined,\n        to: undefined,\n        slides: [],\n        offset: 0,\n        slidesGrid: []\n      };\n      const tempDOM = document.createElement('div');\n      function renderSlide(slide, index) {\n        const params = swiper.params.virtual;\n        if (params.cache && swiper.virtual.cache[index]) {\n          return swiper.virtual.cache[index];\n        }\n        // eslint-disable-next-line\n        let slideEl;\n        if (params.renderSlide) {\n          slideEl = params.renderSlide.call(swiper, slide, index);\n          if (typeof slideEl === 'string') {\n            tempDOM.innerHTML = slideEl;\n            slideEl = tempDOM.children[0];\n          }\n        } else if (swiper.isElement) {\n          slideEl = createElement('swiper-slide');\n        } else {\n          slideEl = createElement('div', swiper.params.slideClass);\n        }\n        slideEl.setAttribute('data-swiper-slide-index', index);\n        if (!params.renderSlide) {\n          slideEl.textContent = slide;\n        }\n        if (params.cache) swiper.virtual.cache[index] = slideEl;\n        return slideEl;\n      }\n      function update(force) {\n        const {\n          slidesPerView,\n          slidesPerGroup,\n          centeredSlides,\n          loop: isLoop\n        } = swiper.params;\n        const {\n          addSlidesBefore,\n          addSlidesAfter\n        } = swiper.params.virtual;\n        const {\n          from: previousFrom,\n          to: previousTo,\n          slides,\n          slidesGrid: previousSlidesGrid,\n          offset: previousOffset\n        } = swiper.virtual;\n        if (!swiper.params.cssMode) {\n          swiper.updateActiveIndex();\n        }\n        const activeIndex = swiper.activeIndex || 0;\n        let offsetProp;\n        if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n        let slidesAfter;\n        let slidesBefore;\n        if (centeredSlides) {\n          slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n          slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        } else {\n          slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n          slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n        }\n        let from = activeIndex - slidesBefore;\n        let to = activeIndex + slidesAfter;\n        if (!isLoop) {\n          from = Math.max(from, 0);\n          to = Math.min(to, slides.length - 1);\n        }\n        let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n        if (isLoop && activeIndex >= slidesBefore) {\n          from -= slidesBefore;\n          if (!centeredSlides) offset += swiper.slidesGrid[0];\n        } else if (isLoop && activeIndex < slidesBefore) {\n          from = -slidesBefore;\n          if (centeredSlides) offset += swiper.slidesGrid[0];\n        }\n        Object.assign(swiper.virtual, {\n          from,\n          to,\n          offset,\n          slidesGrid: swiper.slidesGrid,\n          slidesBefore,\n          slidesAfter\n        });\n        function onRendered() {\n          swiper.updateSlides();\n          swiper.updateProgress();\n          swiper.updateSlidesClasses();\n          emit('virtualUpdate');\n        }\n        if (previousFrom === from && previousTo === to && !force) {\n          if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n            swiper.slides.forEach(slideEl => {\n              slideEl.style[offsetProp] = `${offset}px`;\n            });\n          }\n          swiper.updateProgress();\n          emit('virtualUpdate');\n          return;\n        }\n        if (swiper.params.virtual.renderExternal) {\n          swiper.params.virtual.renderExternal.call(swiper, {\n            offset,\n            from,\n            to,\n            slides: function getSlides() {\n              const slidesToRender = [];\n              for (let i = from; i <= to; i += 1) {\n                slidesToRender.push(slides[i]);\n              }\n              return slidesToRender;\n            }()\n          });\n          if (swiper.params.virtual.renderExternalUpdate) {\n            onRendered();\n          } else {\n            emit('virtualUpdate');\n          }\n          return;\n        }\n        const prependIndexes = [];\n        const appendIndexes = [];\n        const getSlideIndex = index => {\n          let slideIndex = index;\n          if (index < 0) {\n            slideIndex = slides.length + index;\n          } else if (slideIndex >= slides.length) {\n            // eslint-disable-next-line\n            slideIndex = slideIndex - slides.length;\n          }\n          return slideIndex;\n        };\n        if (force) {\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        } else {\n          for (let i = previousFrom; i <= previousTo; i += 1) {\n            if (i < from || i > to) {\n              const slideIndex = getSlideIndex(i);\n              swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n                slideEl.remove();\n              });\n            }\n          }\n        }\n        const loopFrom = isLoop ? -slides.length : 0;\n        const loopTo = isLoop ? slides.length * 2 : slides.length;\n        for (let i = loopFrom; i < loopTo; i += 1) {\n          if (i >= from && i <= to) {\n            const slideIndex = getSlideIndex(i);\n            if (typeof previousTo === 'undefined' || force) {\n              appendIndexes.push(slideIndex);\n            } else {\n              if (i > previousTo) appendIndexes.push(slideIndex);\n              if (i < previousFrom) prependIndexes.push(slideIndex);\n            }\n          }\n        }\n        appendIndexes.forEach(index => {\n          swiper.slidesEl.append(renderSlide(slides[index], index));\n        });\n        if (isLoop) {\n          for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n            const index = prependIndexes[i];\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\n          }\n        } else {\n          prependIndexes.sort((a, b) => b - a);\n          prependIndexes.forEach(index => {\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\n          });\n        }\n        elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset}px`;\n        });\n        onRendered();\n      }\n      function appendSlide(slides) {\n        if (typeof slides === 'object' && 'length' in slides) {\n          for (let i = 0; i < slides.length; i += 1) {\n            if (slides[i]) swiper.virtual.slides.push(slides[i]);\n          }\n        } else {\n          swiper.virtual.slides.push(slides);\n        }\n        update(true);\n      }\n      function prependSlide(slides) {\n        const activeIndex = swiper.activeIndex;\n        let newActiveIndex = activeIndex + 1;\n        let numberOfNewSlides = 1;\n        if (Array.isArray(slides)) {\n          for (let i = 0; i < slides.length; i += 1) {\n            if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n          }\n          newActiveIndex = activeIndex + slides.length;\n          numberOfNewSlides = slides.length;\n        } else {\n          swiper.virtual.slides.unshift(slides);\n        }\n        if (swiper.params.virtual.cache) {\n          const cache = swiper.virtual.cache;\n          const newCache = {};\n          Object.keys(cache).forEach(cachedIndex => {\n            const cachedEl = cache[cachedIndex];\n            const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n            if (cachedElIndex) {\n              cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n            }\n            newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n          });\n          swiper.virtual.cache = newCache;\n        }\n        update(true);\n        swiper.slideTo(newActiveIndex, 0);\n      }\n      function removeSlide(slidesIndexes) {\n        if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n        let activeIndex = swiper.activeIndex;\n        if (Array.isArray(slidesIndexes)) {\n          for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\n            if (swiper.params.virtual.cache) {\n              delete swiper.virtual.cache[slidesIndexes[i]];\n            }\n            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n            activeIndex = Math.max(activeIndex, 0);\n          }\n        } else {\n          swiper.virtual.slides.splice(slidesIndexes, 1);\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes];\n          }\n          if (slidesIndexes < activeIndex) activeIndex -= 1;\n          activeIndex = Math.max(activeIndex, 0);\n        }\n        update(true);\n        swiper.slideTo(activeIndex, 0);\n      }\n      function removeAllSlides() {\n        swiper.virtual.slides = [];\n        if (swiper.params.virtual.cache) {\n          swiper.virtual.cache = {};\n        }\n        update(true);\n        swiper.slideTo(0, 0);\n      }\n      on('beforeInit', () => {\n        if (!swiper.params.virtual.enabled) return;\n        let domSlidesAssigned;\n        if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n          const slides = swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`);\n          if (slides && slides.length) {\n            swiper.virtual.slides = [...slides];\n            domSlidesAssigned = true;\n            slides.forEach((slideEl, slideIndex) => {\n              slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n              swiper.virtual.cache[slideIndex] = slideEl;\n              slideEl.remove();\n            });\n          }\n        }\n        if (!domSlidesAssigned) {\n          swiper.virtual.slides = swiper.params.virtual.slides;\n        }\n        swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n        if (!swiper.params.initialSlide) {\n          update();\n        }\n      });\n      on('setTranslate', () => {\n        if (!swiper.params.virtual.enabled) return;\n        if (swiper.params.cssMode && !swiper._immediateVirtual) {\n          clearTimeout(cssModeTimeout);\n          cssModeTimeout = setTimeout(() => {\n            update();\n          }, 100);\n        } else {\n          update();\n        }\n      });\n      on('init update resize', () => {\n        if (!swiper.params.virtual.enabled) return;\n        if (swiper.params.cssMode) {\n          setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n        }\n      });\n      Object.assign(swiper.virtual, {\n        appendSlide,\n        prependSlide,\n        removeSlide,\n        removeAllSlides,\n        update\n      });\n    }\n\n    /* eslint-disable consistent-return */\n    function Keyboard(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const document = getDocument();\n      const window = getWindow();\n      swiper.keyboard = {\n        enabled: false\n      };\n      extendParams({\n        keyboard: {\n          enabled: false,\n          onlyInViewport: true,\n          pageUpDown: true\n        }\n      });\n      function handle(event) {\n        if (!swiper.enabled) return;\n        const {\n          rtlTranslate: rtl\n        } = swiper;\n        let e = event;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n        const kc = e.keyCode || e.charCode;\n        const pageUpDown = swiper.params.keyboard.pageUpDown;\n        const isPageUp = pageUpDown && kc === 33;\n        const isPageDown = pageUpDown && kc === 34;\n        const isArrowLeft = kc === 37;\n        const isArrowRight = kc === 39;\n        const isArrowUp = kc === 38;\n        const isArrowDown = kc === 40;\n        // Directions locks\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n          return false;\n        }\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n          return false;\n        }\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n          return undefined;\n        }\n        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n          return undefined;\n        }\n        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n          let inView = false;\n          // Check that swiper should be inside of visible area of window\n          if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n            return undefined;\n          }\n          const el = swiper.el;\n          const swiperWidth = el.clientWidth;\n          const swiperHeight = el.clientHeight;\n          const windowWidth = window.innerWidth;\n          const windowHeight = window.innerHeight;\n          const swiperOffset = elementOffset(el);\n          if (rtl) swiperOffset.left -= el.scrollLeft;\n          const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n          for (let i = 0; i < swiperCoord.length; i += 1) {\n            const point = swiperCoord[i];\n            if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n              if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n              inView = true;\n            }\n          }\n          if (!inView) return undefined;\n        }\n        if (swiper.isHorizontal()) {\n          if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n          }\n          if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n          if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n        } else {\n          if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n          }\n          if (isPageDown || isArrowDown) swiper.slideNext();\n          if (isPageUp || isArrowUp) swiper.slidePrev();\n        }\n        emit('keyPress', kc);\n        return undefined;\n      }\n      function enable() {\n        if (swiper.keyboard.enabled) return;\n        document.addEventListener('keydown', handle);\n        swiper.keyboard.enabled = true;\n      }\n      function disable() {\n        if (!swiper.keyboard.enabled) return;\n        document.removeEventListener('keydown', handle);\n        swiper.keyboard.enabled = false;\n      }\n      on('init', () => {\n        if (swiper.params.keyboard.enabled) {\n          enable();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.keyboard.enabled) {\n          disable();\n        }\n      });\n      Object.assign(swiper.keyboard, {\n        enable,\n        disable\n      });\n    }\n\n    /* eslint-disable consistent-return */\n    function Mousewheel(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const window = getWindow();\n      extendParams({\n        mousewheel: {\n          enabled: false,\n          releaseOnEdges: false,\n          invert: false,\n          forceToAxis: false,\n          sensitivity: 1,\n          eventsTarget: 'container',\n          thresholdDelta: null,\n          thresholdTime: null\n        }\n      });\n      swiper.mousewheel = {\n        enabled: false\n      };\n      let timeout;\n      let lastScrollTime = now();\n      let lastEventBeforeSnap;\n      const recentWheelEvents = [];\n      function normalize(e) {\n        // Reasonable defaults\n        const PIXEL_STEP = 10;\n        const LINE_HEIGHT = 40;\n        const PAGE_HEIGHT = 800;\n        let sX = 0;\n        let sY = 0; // spinX, spinY\n        let pX = 0;\n        let pY = 0; // pixelX, pixelY\n\n        // Legacy\n        if ('detail' in e) {\n          sY = e.detail;\n        }\n        if ('wheelDelta' in e) {\n          sY = -e.wheelDelta / 120;\n        }\n        if ('wheelDeltaY' in e) {\n          sY = -e.wheelDeltaY / 120;\n        }\n        if ('wheelDeltaX' in e) {\n          sX = -e.wheelDeltaX / 120;\n        }\n\n        // side scrolling on FF with DOMMouseScroll\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n          sX = sY;\n          sY = 0;\n        }\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n        if ('deltaY' in e) {\n          pY = e.deltaY;\n        }\n        if ('deltaX' in e) {\n          pX = e.deltaX;\n        }\n        if (e.shiftKey && !pX) {\n          // if user scrolls with shift he wants horizontal scroll\n          pX = pY;\n          pY = 0;\n        }\n        if ((pX || pY) && e.deltaMode) {\n          if (e.deltaMode === 1) {\n            // delta in LINE units\n            pX *= LINE_HEIGHT;\n            pY *= LINE_HEIGHT;\n          } else {\n            // delta in PAGE units\n            pX *= PAGE_HEIGHT;\n            pY *= PAGE_HEIGHT;\n          }\n        }\n\n        // Fall-back if spin cannot be determined\n        if (pX && !sX) {\n          sX = pX < 1 ? -1 : 1;\n        }\n        if (pY && !sY) {\n          sY = pY < 1 ? -1 : 1;\n        }\n        return {\n          spinX: sX,\n          spinY: sY,\n          pixelX: pX,\n          pixelY: pY\n        };\n      }\n      function handleMouseEnter() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = true;\n      }\n      function handleMouseLeave() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = false;\n      }\n      function animateSlider(newEvent) {\n        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n          // Prevent if delta of wheel scroll delta is below configured threshold\n          return false;\n        }\n        if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n          // Prevent if time between scrolls is below configured threshold\n          return false;\n        }\n\n        // If the movement is NOT big enough and\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n        //   Don't go any further (avoid insignificant scroll movement).\n        if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n          // Return false as a default\n          return true;\n        }\n        // If user is scrolling towards the end:\n        //   If the slider hasn't hit the latest slide or\n        //   if the slider is a loop and\n        //   if the slider isn't moving right now:\n        //     Go to next slide and\n        //     emit a scroll event.\n        // Else (the user is scrolling towards the beginning) and\n        // if the slider hasn't hit the first slide or\n        // if the slider is a loop and\n        // if the slider isn't moving right now:\n        //   Go to prev slide and\n        //   emit a scroll event.\n        if (newEvent.direction < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            emit('scroll', newEvent.raw);\n          }\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          emit('scroll', newEvent.raw);\n        }\n        // If you got here is because an animation has been triggered so store the current time\n        lastScrollTime = new window.Date().getTime();\n        // Return false as a default\n        return false;\n      }\n      function releaseScroll(newEvent) {\n        const params = swiper.params.mousewheel;\n        if (newEvent.direction < 0) {\n          if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n            // Return true to animate scroll on edges\n            return true;\n          }\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n        return false;\n      }\n      function handle(event) {\n        let e = event;\n        let disableParentSwiper = true;\n        if (!swiper.enabled) return;\n        const params = swiper.params.mousewheel;\n        if (swiper.params.cssMode) {\n          e.preventDefault();\n        }\n        let targetEl = swiper.el;\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\n          targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n        }\n        const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n        if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n        let delta = 0;\n        const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        const data = normalize(e);\n        if (params.forceToAxis) {\n          if (swiper.isHorizontal()) {\n            if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n          } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n        } else {\n          delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n        }\n        if (delta === 0) return true;\n        if (params.invert) delta = -delta;\n\n        // Get the scroll positions\n        let positions = swiper.getTranslate() + delta * params.sensitivity;\n        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n        // When loop is true:\n        //     the disableParentSwiper will be true.\n        // When loop is false:\n        //     if the scroll positions is not on edge,\n        //     then the disableParentSwiper will be true.\n        //     if the scroll on edge positions,\n        //     then the disableParentSwiper will be false.\n        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n          // Register the new event in a variable which stores the relevant data\n          const newEvent = {\n            time: now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta),\n            raw: event\n          };\n\n          // Keep the most recent events\n          if (recentWheelEvents.length >= 2) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          recentWheelEvents.push(newEvent);\n\n          // If there is at least one previous recorded event:\n          //   If direction has changed or\n          //   if the scroll is quicker than the previous one:\n          //     Animate the slider.\n          // Else (this is the first time the wheel is moved):\n          //     Animate the slider.\n          if (prevEvent) {\n            if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n              animateSlider(newEvent);\n            }\n          } else {\n            animateSlider(newEvent);\n          }\n\n          // If it's time to release the scroll:\n          //   Return now so you don't hit the preventDefault.\n          if (releaseScroll(newEvent)) {\n            return true;\n          }\n        } else {\n          // Freemode or scrollContainer:\n\n          // If we recently snapped after a momentum scroll, then ignore wheel events\n          // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n          // or if it's a new scroll (larger delta or inverse sign as last event before\n          // an end-of-momentum snap).\n          const newEvent = {\n            time: now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta)\n          };\n          const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n          if (!ignoreWheelEvents) {\n            lastEventBeforeSnap = undefined;\n            let position = swiper.getTranslate() + delta * params.sensitivity;\n            const wasBeginning = swiper.isBeginning;\n            const wasEnd = swiper.isEnd;\n            if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n            if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n            swiper.setTransition(0);\n            swiper.setTranslate(position);\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n            if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n              swiper.updateSlidesClasses();\n            }\n            if (swiper.params.loop) {\n              swiper.loopFix({\n                direction: newEvent.direction < 0 ? 'next' : 'prev',\n                byMousewheel: true\n              });\n            }\n            if (swiper.params.freeMode.sticky) {\n              // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n              // the end of a momentum scroll by storing recent (N=15?) wheel events.\n              // 1. do all N events have decreasing or same (absolute value) delta?\n              // 2. did all N events arrive in the last M (M=500?) msecs?\n              // 3. does the earliest event have an (absolute value) delta that's\n              //    at least P (P=1?) larger than the most recent event's delta?\n              // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n              // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n              // Snap immediately and ignore remaining wheel events in this scroll.\n              // See comment above for \"remaining wheel events in this scroll\" determination.\n              // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n              clearTimeout(timeout);\n              timeout = undefined;\n              if (recentWheelEvents.length >= 15) {\n                recentWheelEvents.shift(); // only store the last N events\n              }\n\n              const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n              const firstEvent = recentWheelEvents[0];\n              recentWheelEvents.push(newEvent);\n              if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n                // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n                recentWheelEvents.splice(0);\n              } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n                // We're at the end of the deceleration of a momentum scroll, so there's no need\n                // to wait for more events. Snap ASAP on the next tick.\n                // Also, because there's some remaining momentum we'll bias the snap in the\n                // direction of the ongoing scroll because it's better UX for the scroll to snap\n                // in the same direction as the scroll instead of reversing to snap.  Therefore,\n                // if it's already scrolled more than 20% in the current direction, keep going.\n                const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n                lastEventBeforeSnap = newEvent;\n                recentWheelEvents.splice(0);\n                timeout = nextTick(() => {\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 0); // no delay; move on next tick\n              }\n\n              if (!timeout) {\n                // if we get here, then we haven't detected the end of a momentum scroll, so\n                // we'll consider a scroll \"complete\" when there haven't been any wheel events\n                // for 500ms.\n                timeout = nextTick(() => {\n                  const snapToThreshold = 0.5;\n                  lastEventBeforeSnap = newEvent;\n                  recentWheelEvents.splice(0);\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 500);\n              }\n            }\n\n            // Emit event\n            if (!ignoreWheelEvents) emit('scroll', e);\n\n            // Stop autoplay\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n            // Return page scroll on edge positions\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n          }\n        }\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        return false;\n      }\n      function events(method) {\n        let targetEl = swiper.el;\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\n          targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n        }\n        targetEl[method]('mouseenter', handleMouseEnter);\n        targetEl[method]('mouseleave', handleMouseLeave);\n        targetEl[method]('wheel', handle);\n      }\n      function enable() {\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.removeEventListener('wheel', handle);\n          return true;\n        }\n        if (swiper.mousewheel.enabled) return false;\n        events('addEventListener');\n        swiper.mousewheel.enabled = true;\n        return true;\n      }\n      function disable() {\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.addEventListener(event, handle);\n          return true;\n        }\n        if (!swiper.mousewheel.enabled) return false;\n        events('removeEventListener');\n        swiper.mousewheel.enabled = false;\n        return true;\n      }\n      on('init', () => {\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n          disable();\n        }\n        if (swiper.params.mousewheel.enabled) enable();\n      });\n      on('destroy', () => {\n        if (swiper.params.cssMode) {\n          enable();\n        }\n        if (swiper.mousewheel.enabled) disable();\n      });\n      Object.assign(swiper.mousewheel, {\n        enable,\n        disable\n      });\n    }\n\n    function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n      if (swiper.params.createElements) {\n        Object.keys(checkProps).forEach(key => {\n          if (!params[key] && params.auto === true) {\n            let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n            if (!element) {\n              element = createElement('div', checkProps[key]);\n              element.className = checkProps[key];\n              swiper.el.append(element);\n            }\n            params[key] = element;\n            originalParams[key] = element;\n          }\n        });\n      }\n      return params;\n    }\n\n    function Navigation(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      extendParams({\n        navigation: {\n          nextEl: null,\n          prevEl: null,\n          hideOnClick: false,\n          disabledClass: 'swiper-button-disabled',\n          hiddenClass: 'swiper-button-hidden',\n          lockClass: 'swiper-button-lock',\n          navigationDisabledClass: 'swiper-navigation-disabled'\n        }\n      });\n      swiper.navigation = {\n        nextEl: null,\n        prevEl: null\n      };\n      const makeElementsArray = el => {\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\n        return el;\n      };\n      function getEl(el) {\n        let res;\n        if (el && typeof el === 'string' && swiper.isElement) {\n          res = swiper.el.shadowRoot.querySelector(el);\n          if (res) return res;\n        }\n        if (el) {\n          if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n          if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n            res = swiper.el.querySelector(el);\n          }\n        }\n        if (el && !res) return el;\n        // if (Array.isArray(res) && res.length === 1) res = res[0];\n        return res;\n      }\n      function toggleEl(el, disabled) {\n        const params = swiper.params.navigation;\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          if (subEl) {\n            subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n            if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n            if (swiper.params.watchOverflow && swiper.enabled) {\n              subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n            }\n          }\n        });\n      }\n      function update() {\n        // Update Navigation Buttons\n        const {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        if (swiper.params.loop) {\n          toggleEl(prevEl, false);\n          toggleEl(nextEl, false);\n          return;\n        }\n        toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n        toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n      }\n      function onPrevClick(e) {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n        swiper.slidePrev();\n        emit('navigationPrev');\n      }\n      function onNextClick(e) {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n        swiper.slideNext();\n        emit('navigationNext');\n      }\n      function init() {\n        const params = swiper.params.navigation;\n        swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n          nextEl: 'swiper-button-next',\n          prevEl: 'swiper-button-prev'\n        });\n        if (!(params.nextEl || params.prevEl)) return;\n        let nextEl = getEl(params.nextEl);\n        let prevEl = getEl(params.prevEl);\n        Object.assign(swiper.navigation, {\n          nextEl,\n          prevEl\n        });\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        const initButton = (el, dir) => {\n          if (el) {\n            el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n          }\n          if (!swiper.enabled && el) {\n            el.classList.add(...params.lockClass.split(' '));\n          }\n        };\n        nextEl.forEach(el => initButton(el, 'next'));\n        prevEl.forEach(el => initButton(el, 'prev'));\n      }\n      function destroy() {\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        const destroyButton = (el, dir) => {\n          el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n          el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n        };\n        nextEl.forEach(el => destroyButton(el, 'next'));\n        prevEl.forEach(el => destroyButton(el, 'prev'));\n      }\n      on('init', () => {\n        if (swiper.params.navigation.enabled === false) {\n          // eslint-disable-next-line\n          disable();\n        } else {\n          init();\n          update();\n        }\n      });\n      on('toEdge fromEdge lock unlock', () => {\n        update();\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      on('enable disable', () => {\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n      });\n      on('click', (_s, e) => {\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        const targetEl = e.target;\n        if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n          let isHidden;\n          if (nextEl.length) {\n            isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n          } else if (prevEl.length) {\n            isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n          }\n          if (isHidden === true) {\n            emit('navigationShow');\n          } else {\n            emit('navigationHide');\n          }\n          [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n        }\n      });\n      const enable = () => {\n        swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n        init();\n        update();\n      };\n      const disable = () => {\n        swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n        destroy();\n      };\n      Object.assign(swiper.navigation, {\n        enable,\n        disable,\n        update,\n        init,\n        destroy\n      });\n    }\n\n    function classesToSelector(classes) {\n      if (classes === void 0) {\n        classes = '';\n      }\n      return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n    }\n\n    function Pagination(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const pfx = 'swiper-pagination';\n      extendParams({\n        pagination: {\n          el: null,\n          bulletElement: 'span',\n          clickable: false,\n          hideOnClick: false,\n          renderBullet: null,\n          renderProgressbar: null,\n          renderFraction: null,\n          renderCustom: null,\n          progressbarOpposite: false,\n          type: 'bullets',\n          // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n          dynamicBullets: false,\n          dynamicMainBullets: 1,\n          formatFractionCurrent: number => number,\n          formatFractionTotal: number => number,\n          bulletClass: `${pfx}-bullet`,\n          bulletActiveClass: `${pfx}-bullet-active`,\n          modifierClass: `${pfx}-`,\n          currentClass: `${pfx}-current`,\n          totalClass: `${pfx}-total`,\n          hiddenClass: `${pfx}-hidden`,\n          progressbarFillClass: `${pfx}-progressbar-fill`,\n          progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n          clickableClass: `${pfx}-clickable`,\n          lockClass: `${pfx}-lock`,\n          horizontalClass: `${pfx}-horizontal`,\n          verticalClass: `${pfx}-vertical`,\n          paginationDisabledClass: `${pfx}-disabled`\n        }\n      });\n      swiper.pagination = {\n        el: null,\n        bullets: []\n      };\n      let bulletSize;\n      let dynamicBulletIndex = 0;\n      const makeElementsArray = el => {\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\n        return el;\n      };\n      function isPaginationDisabled() {\n        return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n      }\n      function setSideBullets(bulletEl, position) {\n        const {\n          bulletActiveClass\n        } = swiper.params.pagination;\n        if (!bulletEl) return;\n        bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n        if (bulletEl) {\n          bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n          bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n          if (bulletEl) {\n            bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n          }\n        }\n      }\n      function onBulletClick(e) {\n        const isBullet = e.target.matches(classesToSelector(swiper.params.pagination.bulletClass));\n        if (!isBullet) return;\n        e.preventDefault();\n        const index = elementIndex(e.target) * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) {\n          swiper.slideToLoop(index);\n        } else {\n          swiper.slideTo(index);\n        }\n      }\n      function update() {\n        // Render || Update Pagination bullets/items\n        const rtl = swiper.rtl;\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        let el = swiper.pagination.el;\n        el = makeElementsArray(el);\n        // Current/Total\n        let current;\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        if (swiper.params.loop) {\n          current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n        } else if (typeof swiper.snapIndex !== 'undefined') {\n          current = swiper.snapIndex;\n        } else {\n          current = swiper.activeIndex || 0;\n        }\n        // Types\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n          const bullets = swiper.pagination.bullets;\n          let firstIndex;\n          let lastIndex;\n          let midIndex;\n          if (params.dynamicBullets) {\n            bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n            el.forEach(subEl => {\n              subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n            });\n            if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n              dynamicBulletIndex += current - (swiper.previousIndex || 0);\n              if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n                dynamicBulletIndex = params.dynamicMainBullets - 1;\n              } else if (dynamicBulletIndex < 0) {\n                dynamicBulletIndex = 0;\n              }\n            }\n            firstIndex = Math.max(current - dynamicBulletIndex, 0);\n            lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n            midIndex = (lastIndex + firstIndex) / 2;\n          }\n          bullets.forEach(bulletEl => {\n            bulletEl.classList.remove(...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`));\n          });\n          if (el.length > 1) {\n            bullets.forEach(bullet => {\n              const bulletIndex = elementIndex(bullet);\n              if (bulletIndex === current) {\n                bullet.classList.add(params.bulletActiveClass);\n              }\n              if (params.dynamicBullets) {\n                if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                  bullet.classList.add(`${params.bulletActiveClass}-main`);\n                }\n                if (bulletIndex === firstIndex) {\n                  setSideBullets(bullet, 'prev');\n                }\n                if (bulletIndex === lastIndex) {\n                  setSideBullets(bullet, 'next');\n                }\n              }\n            });\n          } else {\n            const bullet = bullets[current];\n            if (bullet) {\n              bullet.classList.add(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              const firstDisplayedBullet = bullets[firstIndex];\n              const lastDisplayedBullet = bullets[lastIndex];\n              for (let i = firstIndex; i <= lastIndex; i += 1) {\n                bullets[i].classList.add(`${params.bulletActiveClass}-main`);\n              }\n              setSideBullets(firstDisplayedBullet, 'prev');\n              setSideBullets(lastDisplayedBullet, 'next');\n            }\n          }\n          if (params.dynamicBullets) {\n            const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n            const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n            const offsetProp = rtl ? 'right' : 'left';\n            bullets.forEach(bullet => {\n              bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n            });\n          }\n        }\n        el.forEach((subEl, subElIndex) => {\n          if (params.type === 'fraction') {\n            subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n              fractionEl.textContent = params.formatFractionCurrent(current + 1);\n            });\n            subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n              totalEl.textContent = params.formatFractionTotal(total);\n            });\n          }\n          if (params.type === 'progressbar') {\n            let progressbarDirection;\n            if (params.progressbarOpposite) {\n              progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n            } else {\n              progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n            }\n            const scale = (current + 1) / total;\n            let scaleX = 1;\n            let scaleY = 1;\n            if (progressbarDirection === 'horizontal') {\n              scaleX = scale;\n            } else {\n              scaleY = scale;\n            }\n            subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n              progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n              progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n            });\n          }\n          if (params.type === 'custom' && params.renderCustom) {\n            subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n            if (subElIndex === 0) emit('paginationRender', subEl);\n          } else {\n            if (subElIndex === 0) emit('paginationRender', subEl);\n            emit('paginationUpdate', subEl);\n          }\n          if (swiper.params.watchOverflow && swiper.enabled) {\n            subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n          }\n        });\n      }\n      function render() {\n        // Render Container\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        let el = swiper.pagination.el;\n        el = makeElementsArray(el);\n        let paginationHTML = '';\n        if (params.type === 'bullets') {\n          let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n          if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n            numberOfBullets = slidesLength;\n          }\n          for (let i = 0; i < numberOfBullets; i += 1) {\n            if (params.renderBullet) {\n              paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n            } else {\n              paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n            }\n          }\n        }\n        if (params.type === 'fraction') {\n          if (params.renderFraction) {\n            paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n          } else {\n            paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n          }\n        }\n        if (params.type === 'progressbar') {\n          if (params.renderProgressbar) {\n            paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n          } else {\n            paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n          }\n        }\n        el.forEach(subEl => {\n          if (params.type !== 'custom') {\n            subEl.innerHTML = paginationHTML || '';\n          }\n          if (params.type === 'bullets') {\n            swiper.pagination.bullets = [...subEl.querySelectorAll(classesToSelector(params.bulletClass))];\n          }\n        });\n        if (params.type !== 'custom') {\n          emit('paginationRender', el[0]);\n        }\n      }\n      function init() {\n        swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n          el: 'swiper-pagination'\n        });\n        const params = swiper.params.pagination;\n        if (!params.el) return;\n        let el;\n        if (typeof params.el === 'string' && swiper.isElement) {\n          el = swiper.el.shadowRoot.querySelector(params.el);\n        }\n        if (!el && typeof params.el === 'string') {\n          el = [...document.querySelectorAll(params.el)];\n        }\n        if (!el) {\n          el = params.el;\n        }\n        if (!el || el.length === 0) return;\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n          el = [...swiper.el.querySelectorAll(params.el)];\n          // check if it belongs to another nested Swiper\n          if (el.length > 1) {\n            el = el.filter(subEl => {\n              if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n              return true;\n            })[0];\n          }\n        }\n        if (Array.isArray(el) && el.length === 1) el = el[0];\n        Object.assign(swiper.pagination, {\n          el\n        });\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          if (params.type === 'bullets' && params.clickable) {\n            subEl.classList.add(params.clickableClass);\n          }\n          subEl.classList.add(params.modifierClass + params.type);\n          subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n          if (params.type === 'bullets' && params.dynamicBullets) {\n            subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n            dynamicBulletIndex = 0;\n            if (params.dynamicMainBullets < 1) {\n              params.dynamicMainBullets = 1;\n            }\n          }\n          if (params.type === 'progressbar' && params.progressbarOpposite) {\n            subEl.classList.add(params.progressbarOppositeClass);\n          }\n          if (params.clickable) {\n            subEl.addEventListener('click', onBulletClick);\n          }\n          if (!swiper.enabled) {\n            subEl.classList.add(params.lockClass);\n          }\n        });\n      }\n      function destroy() {\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        let el = swiper.pagination.el;\n        if (el) {\n          el = makeElementsArray(el);\n          el.forEach(subEl => {\n            subEl.classList.remove(params.hiddenClass);\n            subEl.classList.remove(params.modifierClass + params.type);\n            subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n            if (params.clickable) {\n              subEl.removeEventListener('click', onBulletClick);\n            }\n          });\n        }\n        if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(params.bulletActiveClass));\n      }\n      on('init', () => {\n        if (swiper.params.pagination.enabled === false) {\n          // eslint-disable-next-line\n          disable();\n        } else {\n          init();\n          render();\n          update();\n        }\n      });\n      on('activeIndexChange', () => {\n        if (typeof swiper.snapIndex === 'undefined') {\n          update();\n        }\n      });\n      on('snapIndexChange', () => {\n        update();\n      });\n      on('snapGridLengthChange', () => {\n        render();\n        update();\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      on('enable disable', () => {\n        let {\n          el\n        } = swiper.pagination;\n        if (el) {\n          el = makeElementsArray(el);\n          el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n        }\n      });\n      on('lock unlock', () => {\n        update();\n      });\n      on('click', (_s, e) => {\n        const targetEl = e.target;\n        let {\n          el\n        } = swiper.pagination;\n        if (!Array.isArray(el)) el = [el].filter(element => !!element);\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n          const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n          if (isHidden === true) {\n            emit('paginationShow');\n          } else {\n            emit('paginationHide');\n          }\n          el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n        }\n      });\n      const enable = () => {\n        swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n        let {\n          el\n        } = swiper.pagination;\n        if (el) {\n          el = makeElementsArray(el);\n          el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n        }\n        init();\n        render();\n        update();\n      };\n      const disable = () => {\n        swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n        let {\n          el\n        } = swiper.pagination;\n        if (el) {\n          el = makeElementsArray(el);\n          el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n        }\n        destroy();\n      };\n      Object.assign(swiper.pagination, {\n        enable,\n        disable,\n        render,\n        update,\n        init,\n        destroy\n      });\n    }\n\n    function Scrollbar(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const document = getDocument();\n      let isTouched = false;\n      let timeout = null;\n      let dragTimeout = null;\n      let dragStartPos;\n      let dragSize;\n      let trackSize;\n      let divider;\n      extendParams({\n        scrollbar: {\n          el: null,\n          dragSize: 'auto',\n          hide: false,\n          draggable: false,\n          snapOnRelease: true,\n          lockClass: 'swiper-scrollbar-lock',\n          dragClass: 'swiper-scrollbar-drag',\n          scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n          horizontalClass: `swiper-scrollbar-horizontal`,\n          verticalClass: `swiper-scrollbar-vertical`\n        }\n      });\n      swiper.scrollbar = {\n        el: null,\n        dragEl: null\n      };\n      function setTranslate() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        const {\n          scrollbar,\n          rtlTranslate: rtl\n        } = swiper;\n        const {\n          dragEl,\n          el\n        } = scrollbar;\n        const params = swiper.params.scrollbar;\n        const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n        let newSize = dragSize;\n        let newPos = (trackSize - dragSize) * progress;\n        if (rtl) {\n          newPos = -newPos;\n          if (newPos > 0) {\n            newSize = dragSize - newPos;\n            newPos = 0;\n          } else if (-newPos + dragSize > trackSize) {\n            newSize = trackSize + newPos;\n          }\n        } else if (newPos < 0) {\n          newSize = dragSize + newPos;\n          newPos = 0;\n        } else if (newPos + dragSize > trackSize) {\n          newSize = trackSize - newPos;\n        }\n        if (swiper.isHorizontal()) {\n          dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n          dragEl.style.width = `${newSize}px`;\n        } else {\n          dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n          dragEl.style.height = `${newSize}px`;\n        }\n        if (params.hide) {\n          clearTimeout(timeout);\n          el.style.opacity = 1;\n          timeout = setTimeout(() => {\n            el.style.opacity = 0;\n            el.style.transitionDuration = '400ms';\n          }, 1000);\n        }\n      }\n      function setTransition(duration) {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n      }\n      function updateSize() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        const {\n          scrollbar\n        } = swiper;\n        const {\n          dragEl,\n          el\n        } = scrollbar;\n        dragEl.style.width = '';\n        dragEl.style.height = '';\n        trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n        if (swiper.params.scrollbar.dragSize === 'auto') {\n          dragSize = trackSize * divider;\n        } else {\n          dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        }\n        if (swiper.isHorizontal()) {\n          dragEl.style.width = `${dragSize}px`;\n        } else {\n          dragEl.style.height = `${dragSize}px`;\n        }\n        if (divider >= 1) {\n          el.style.display = 'none';\n        } else {\n          el.style.display = '';\n        }\n        if (swiper.params.scrollbar.hide) {\n          el.style.opacity = 0;\n        }\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n        }\n      }\n      function getPointerPosition(e) {\n        return swiper.isHorizontal() ? e.clientX : e.clientY;\n      }\n      function setDragPosition(e) {\n        const {\n          scrollbar,\n          rtlTranslate: rtl\n        } = swiper;\n        const {\n          el\n        } = scrollbar;\n        let positionRatio;\n        positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n        if (rtl) {\n          positionRatio = 1 - positionRatio;\n        }\n        const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      function onDragStart(e) {\n        const params = swiper.params.scrollbar;\n        const {\n          scrollbar,\n          wrapperEl\n        } = swiper;\n        const {\n          el,\n          dragEl\n        } = scrollbar;\n        isTouched = true;\n        dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n        e.preventDefault();\n        e.stopPropagation();\n        wrapperEl.style.transitionDuration = '100ms';\n        dragEl.style.transitionDuration = '100ms';\n        setDragPosition(e);\n        clearTimeout(dragTimeout);\n        el.style.transitionDuration = '0ms';\n        if (params.hide) {\n          el.style.opacity = 1;\n        }\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n        }\n        emit('scrollbarDragStart', e);\n      }\n      function onDragMove(e) {\n        const {\n          scrollbar,\n          wrapperEl\n        } = swiper;\n        const {\n          el,\n          dragEl\n        } = scrollbar;\n        if (!isTouched) return;\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        setDragPosition(e);\n        wrapperEl.style.transitionDuration = '0ms';\n        el.style.transitionDuration = '0ms';\n        dragEl.style.transitionDuration = '0ms';\n        emit('scrollbarDragMove', e);\n      }\n      function onDragEnd(e) {\n        const params = swiper.params.scrollbar;\n        const {\n          scrollbar,\n          wrapperEl\n        } = swiper;\n        const {\n          el\n        } = scrollbar;\n        if (!isTouched) return;\n        isTouched = false;\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style['scroll-snap-type'] = '';\n          wrapperEl.style.transitionDuration = '';\n        }\n        if (params.hide) {\n          clearTimeout(dragTimeout);\n          dragTimeout = nextTick(() => {\n            el.style.opacity = 0;\n            el.style.transitionDuration = '400ms';\n          }, 1000);\n        }\n        emit('scrollbarDragEnd', e);\n        if (params.snapOnRelease) {\n          swiper.slideToClosest();\n        }\n      }\n      function events(method) {\n        const {\n          scrollbar,\n          params\n        } = swiper;\n        const el = scrollbar.el;\n        if (!el) return;\n        const target = el;\n        const activeListener = params.passiveListeners ? {\n          passive: false,\n          capture: false\n        } : false;\n        const passiveListener = params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        if (!target) return;\n        const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n        target[eventMethod]('pointerdown', onDragStart, activeListener);\n        document[eventMethod]('pointermove', onDragMove, activeListener);\n        document[eventMethod]('pointerup', onDragEnd, passiveListener);\n      }\n      function enableDraggable() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        events('on');\n      }\n      function disableDraggable() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        events('off');\n      }\n      function init() {\n        const {\n          scrollbar,\n          el: swiperEl\n        } = swiper;\n        swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n          el: 'swiper-scrollbar'\n        });\n        const params = swiper.params.scrollbar;\n        if (!params.el) return;\n        let el;\n        if (typeof params.el === 'string' && swiper.isElement) {\n          el = swiper.el.shadowRoot.querySelector(params.el);\n        }\n        if (!el && typeof params.el === 'string') {\n          el = document.querySelectorAll(params.el);\n        } else if (!el) {\n          el = params.el;\n        }\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n          el = swiperEl.querySelector(params.el);\n        }\n        if (el.length > 0) el = el[0];\n        el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        let dragEl;\n        if (el) {\n          el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n          if (!dragEl) {\n            dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n            el.append(dragEl);\n          }\n        }\n        Object.assign(scrollbar, {\n          el,\n          dragEl\n        });\n        if (params.draggable) {\n          enableDraggable();\n        }\n        if (el) {\n          el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n        }\n      }\n      function destroy() {\n        const params = swiper.params.scrollbar;\n        const el = swiper.scrollbar.el;\n        if (el) {\n          el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        }\n        disableDraggable();\n      }\n      on('init', () => {\n        if (swiper.params.scrollbar.enabled === false) {\n          // eslint-disable-next-line\n          disable();\n        } else {\n          init();\n          updateSize();\n          setTranslate();\n        }\n      });\n      on('update resize observerUpdate lock unlock', () => {\n        updateSize();\n      });\n      on('setTranslate', () => {\n        setTranslate();\n      });\n      on('setTransition', (_s, duration) => {\n        setTransition(duration);\n      });\n      on('enable disable', () => {\n        const {\n          el\n        } = swiper.scrollbar;\n        if (el) {\n          el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n        }\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      const enable = () => {\n        swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n        if (swiper.scrollbar.el) {\n          swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n        }\n        init();\n        updateSize();\n        setTranslate();\n      };\n      const disable = () => {\n        swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n        if (swiper.scrollbar.el) {\n          swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n        }\n        destroy();\n      };\n      Object.assign(swiper.scrollbar, {\n        enable,\n        disable,\n        updateSize,\n        setTranslate,\n        init,\n        destroy\n      });\n    }\n\n    function Parallax(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        parallax: {\n          enabled: false\n        }\n      });\n      const setTransform = (el, progress) => {\n        const {\n          rtl\n        } = swiper;\n        const rtlFactor = rtl ? -1 : 1;\n        const p = el.getAttribute('data-swiper-parallax') || '0';\n        let x = el.getAttribute('data-swiper-parallax-x');\n        let y = el.getAttribute('data-swiper-parallax-y');\n        const scale = el.getAttribute('data-swiper-parallax-scale');\n        const opacity = el.getAttribute('data-swiper-parallax-opacity');\n        const rotate = el.getAttribute('data-swiper-parallax-rotate');\n        if (x || y) {\n          x = x || '0';\n          y = y || '0';\n        } else if (swiper.isHorizontal()) {\n          x = p;\n          y = '0';\n        } else {\n          y = p;\n          x = '0';\n        }\n        if (x.indexOf('%') >= 0) {\n          x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n        } else {\n          x = `${x * progress * rtlFactor}px`;\n        }\n        if (y.indexOf('%') >= 0) {\n          y = `${parseInt(y, 10) * progress}%`;\n        } else {\n          y = `${y * progress}px`;\n        }\n        if (typeof opacity !== 'undefined' && opacity !== null) {\n          const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n          el.style.opacity = currentOpacity;\n        }\n        let transform = `translate3d(${x}, ${y}, 0px)`;\n        if (typeof scale !== 'undefined' && scale !== null) {\n          const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n          transform += ` scale(${currentScale})`;\n        }\n        if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n          const currentRotate = rotate * progress * -1;\n          transform += ` rotate(${currentRotate}deg)`;\n        }\n        el.style.transform = transform;\n      };\n      const setTranslate = () => {\n        const {\n          el,\n          slides,\n          progress,\n          snapGrid\n        } = swiper;\n        elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n          setTransform(subEl, progress);\n        });\n        slides.forEach((slideEl, slideIndex) => {\n          let slideProgress = slideEl.progress;\n          if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n            slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n          }\n          slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n          slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n            setTransform(subEl, slideProgress);\n          });\n        });\n      };\n      const setTransition = function (duration) {\n        if (duration === void 0) {\n          duration = swiper.params.speed;\n        }\n        const {\n          el\n        } = swiper;\n        el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n          let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) parallaxDuration = 0;\n          parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n        });\n      };\n      on('beforeInit', () => {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      });\n      on('init', () => {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n      });\n      on('setTranslate', () => {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n      });\n      on('setTransition', (_swiper, duration) => {\n        if (!swiper.params.parallax.enabled) return;\n        setTransition(duration);\n      });\n    }\n\n    function Zoom(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const window = getWindow();\n      extendParams({\n        zoom: {\n          enabled: false,\n          maxRatio: 3,\n          minRatio: 1,\n          toggle: true,\n          containerClass: 'swiper-zoom-container',\n          zoomedSlideClass: 'swiper-slide-zoomed'\n        }\n      });\n      swiper.zoom = {\n        enabled: false\n      };\n      let currentScale = 1;\n      let isScaling = false;\n      let fakeGestureTouched;\n      let fakeGestureMoved;\n      const evCache = [];\n      const gesture = {\n        slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        imageEl: undefined,\n        imageWrapEl: undefined,\n        maxRatio: 3\n      };\n      const image = {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {}\n      };\n      const velocity = {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined\n      };\n      let scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get() {\n          return scale;\n        },\n        set(value) {\n          if (scale !== value) {\n            const imageEl = gesture.imageEl;\n            const slideEl = gesture.slideEl;\n            emit('zoomChange', value, imageEl, slideEl);\n          }\n          scale = value;\n        }\n      });\n      function getDistanceBetweenTouches() {\n        if (evCache.length < 2) return 1;\n        const x1 = evCache[0].pageX;\n        const y1 = evCache[0].pageY;\n        const x2 = evCache[1].pageX;\n        const y2 = evCache[1].pageY;\n        const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n        return distance;\n      }\n      function getSlideSelector() {\n        return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n      }\n      function eventWithinSlide(e) {\n        const slideSelector = getSlideSelector();\n        if (e.target.matches(slideSelector)) return true;\n        if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n        return false;\n      }\n      function eventWithinZoomContainer(e) {\n        const selector = `.${swiper.params.zoom.containerClass}`;\n        if (e.target.matches(selector)) return true;\n        if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n        return false;\n      }\n\n      // Events\n      function onGestureStart(e) {\n        if (!eventWithinSlide(e)) return;\n        const params = swiper.params.zoom;\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n        evCache.push(e);\n        if (evCache.length < 2) {\n          return;\n        }\n        fakeGestureTouched = true;\n        gesture.scaleStart = getDistanceBetweenTouches();\n        if (!gesture.slideEl) {\n          gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n          if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n          if (imageEl) {\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n          }\n          gesture.imageEl = imageEl;\n          if (imageEl) {\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n          } else {\n            gesture.imageWrapEl = undefined;\n          }\n          if (!gesture.imageWrapEl) {\n            gesture.imageEl = undefined;\n            return;\n          }\n          gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n        }\n        if (gesture.imageEl) {\n          gesture.imageEl.style.transitionDuration = '0ms';\n        }\n        isScaling = true;\n      }\n      function onGestureChange(e) {\n        if (!eventWithinSlide(e)) return;\n        const params = swiper.params.zoom;\n        const zoom = swiper.zoom;\n        const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n        if (pointerIndex >= 0) evCache[pointerIndex] = e;\n        if (evCache.length < 2) {\n          return;\n        }\n        fakeGestureMoved = true;\n        gesture.scaleMove = getDistanceBetweenTouches();\n        if (!gesture.imageEl) {\n          return;\n        }\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n        if (zoom.scale > gesture.maxRatio) {\n          zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n        }\n        if (zoom.scale < params.minRatio) {\n          zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n        }\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n      }\n      function onGestureEnd(e) {\n        if (!eventWithinSlide(e)) return;\n        const params = swiper.params.zoom;\n        const zoom = swiper.zoom;\n        const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n        if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n        if (!fakeGestureTouched || !fakeGestureMoved) {\n          return;\n        }\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n        if (!gesture.imageE) return;\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n        currentScale = zoom.scale;\n        isScaling = false;\n        if (zoom.scale === 1) gesture.slideEl = undefined;\n      }\n      function onTouchStart(e) {\n        const device = swiper.device;\n        if (!gesture.imageEl) return;\n        if (image.isTouched) return;\n        if (device.android && e.cancelable) e.preventDefault();\n        image.isTouched = true;\n        image.touchesStart.x = e.pageX;\n        image.touchesStart.y = e.pageY;\n      }\n      function onTouchMove(e) {\n        if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n        const zoom = swiper.zoom;\n        if (!gesture.imageEl) return;\n        swiper.allowClick = false;\n        if (!image.isTouched || !gesture.slideEl) return;\n        if (!image.isMoved) {\n          image.width = gesture.imageEl.offsetWidth;\n          image.height = gesture.imageEl.offsetHeight;\n          image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n          image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n          gesture.slideWidth = gesture.slideEl.offsetWidth;\n          gesture.slideHeight = gesture.slideEl.offsetHeight;\n          gesture.imageWrapEl.style.transitionDuration = '0ms';\n        }\n        // Define if we need image drag\n        const scaledWidth = image.width * zoom.scale;\n        const scaledHeight = image.height * zoom.scale;\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n        image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n        if (!image.isMoved && !isScaling) {\n          if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n            image.isTouched = false;\n            return;\n          }\n          if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n            image.isTouched = false;\n            return;\n          }\n        }\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        image.isMoved = true;\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n        if (image.currentX < image.minX) {\n          image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n        }\n        if (image.currentX > image.maxX) {\n          image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n        }\n        if (image.currentY < image.minY) {\n          image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n        }\n        if (image.currentY > image.maxY) {\n          image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n        }\n\n        // Velocity\n        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n        if (!velocity.prevTime) velocity.prevTime = Date.now();\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n      }\n      function onTouchEnd() {\n        const zoom = swiper.zoom;\n        if (!gesture.imageEl) return;\n        if (!image.isTouched || !image.isMoved) {\n          image.isTouched = false;\n          image.isMoved = false;\n          return;\n        }\n        image.isTouched = false;\n        image.isMoved = false;\n        let momentumDurationX = 300;\n        let momentumDurationY = 300;\n        const momentumDistanceX = velocity.x * momentumDurationX;\n        const newPositionX = image.currentX + momentumDistanceX;\n        const momentumDistanceY = velocity.y * momentumDurationY;\n        const newPositionY = image.currentY + momentumDistanceY;\n\n        // Fix duration\n        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY;\n\n        // Define if we need image drag\n        const scaledWidth = image.width * zoom.scale;\n        const scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n        gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n      }\n      function onTransitionEnd() {\n        const zoom = swiper.zoom;\n        if (gesture.slideEl && swiper.previousIndex !== swiper.activeIndex) {\n          if (gesture.imageEl) {\n            gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n          }\n          if (gesture.imageWrapEl) {\n            gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n          }\n          zoom.scale = 1;\n          currentScale = 1;\n          gesture.slideEl = undefined;\n          gesture.imageEl = undefined;\n          gesture.imageWrapEl = undefined;\n        }\n      }\n      function zoomIn(e) {\n        const zoom = swiper.zoom;\n        const params = swiper.params.zoom;\n        if (!gesture.slideEl) {\n          if (e && e.target) {\n            gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n          }\n          if (!gesture.slideEl) {\n            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n              gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n            } else {\n              gesture.slideEl = swiper.slides[swiper.activeIndex];\n            }\n          }\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n          if (imageEl) {\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n          }\n          gesture.imageEl = imageEl;\n          if (imageEl) {\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n          } else {\n            gesture.imageWrapEl = undefined;\n          }\n        }\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style.overflow = 'hidden';\n          swiper.wrapperEl.style.touchAction = 'none';\n        }\n        gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n        let touchX;\n        let touchY;\n        let offsetX;\n        let offsetY;\n        let diffX;\n        let diffY;\n        let translateX;\n        let translateY;\n        let imageWidth;\n        let imageHeight;\n        let scaledWidth;\n        let scaledHeight;\n        let translateMinX;\n        let translateMinY;\n        let translateMaxX;\n        let translateMaxY;\n        let slideWidth;\n        let slideHeight;\n        if (typeof image.touchesStart.x === 'undefined' && e) {\n          touchX = e.pageX;\n          touchY = e.pageY;\n        } else {\n          touchX = image.touchesStart.x;\n          touchY = image.touchesStart.y;\n        }\n        const forceZoomRatio = typeof e === 'number' ? e : null;\n        if (currentScale === 1 && forceZoomRatio) {\n          touchX = undefined;\n          touchY = undefined;\n        }\n        zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n        currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n        if (e && !(currentScale === 1 && forceZoomRatio)) {\n          slideWidth = gesture.slideEl.offsetWidth;\n          slideHeight = gesture.slideEl.offsetHeight;\n          offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n          offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n          diffX = offsetX + slideWidth / 2 - touchX;\n          diffY = offsetY + slideHeight / 2 - touchY;\n          imageWidth = gesture.imageEl.offsetWidth;\n          imageHeight = gesture.imageEl.offsetHeight;\n          scaledWidth = imageWidth * zoom.scale;\n          scaledHeight = imageHeight * zoom.scale;\n          translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n          translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n          translateMaxX = -translateMinX;\n          translateMaxY = -translateMinY;\n          translateX = diffX * zoom.scale;\n          translateY = diffY * zoom.scale;\n          if (translateX < translateMinX) {\n            translateX = translateMinX;\n          }\n          if (translateX > translateMaxX) {\n            translateX = translateMaxX;\n          }\n          if (translateY < translateMinY) {\n            translateY = translateMinY;\n          }\n          if (translateY > translateMaxY) {\n            translateY = translateMaxY;\n          }\n        } else {\n          translateX = 0;\n          translateY = 0;\n        }\n        gesture.imageWrapEl.style.transitionDuration = '300ms';\n        gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n        gesture.imageEl.style.transitionDuration = '300ms';\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n      }\n      function zoomOut() {\n        const zoom = swiper.zoom;\n        const params = swiper.params.zoom;\n        if (!gesture.slideEl) {\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n            gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n          } else {\n            gesture.slideEl = swiper.slides[swiper.activeIndex];\n          }\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n          if (imageEl) {\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n          }\n          gesture.imageEl = imageEl;\n          if (imageEl) {\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n          } else {\n            gesture.imageWrapEl = undefined;\n          }\n        }\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style.overflow = '';\n          swiper.wrapperEl.style.touchAction = '';\n        }\n        zoom.scale = 1;\n        currentScale = 1;\n        gesture.imageWrapEl.style.transitionDuration = '300ms';\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n        gesture.imageEl.style.transitionDuration = '300ms';\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n        gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n        gesture.slideEl = undefined;\n      }\n\n      // Toggle Zoom\n      function zoomToggle(e) {\n        const zoom = swiper.zoom;\n        if (zoom.scale && zoom.scale !== 1) {\n          // Zoom Out\n          zoomOut();\n        } else {\n          // Zoom In\n          zoomIn(e);\n        }\n      }\n      function getListeners() {\n        const passiveListener = swiper.params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        const activeListenerWithCapture = swiper.params.passiveListeners ? {\n          passive: false,\n          capture: true\n        } : true;\n        return {\n          passiveListener,\n          activeListenerWithCapture\n        };\n      }\n\n      // Attach/Detach Events\n      function enable() {\n        const zoom = swiper.zoom;\n        if (zoom.enabled) return;\n        zoom.enabled = true;\n        const {\n          passiveListener,\n          activeListenerWithCapture\n        } = getListeners();\n\n        // Scale image\n\n        swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n        swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n        ['pointerup', 'pointercancel'].forEach(eventName => {\n          swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n        });\n\n        // Move image\n        swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n      }\n      function disable() {\n        const zoom = swiper.zoom;\n        if (!zoom.enabled) return;\n        zoom.enabled = false;\n        const {\n          passiveListener,\n          activeListenerWithCapture\n        } = getListeners();\n\n        // Scale image\n        swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n        swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n        ['pointerup', 'pointercancel'].forEach(eventName => {\n          swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n        });\n\n        // Move image\n        swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n      }\n      on('init', () => {\n        if (swiper.params.zoom.enabled) {\n          enable();\n        }\n      });\n      on('destroy', () => {\n        disable();\n      });\n      on('touchStart', (_s, e) => {\n        if (!swiper.zoom.enabled) return;\n        onTouchStart(e);\n      });\n      on('touchEnd', (_s, e) => {\n        if (!swiper.zoom.enabled) return;\n        onTouchEnd();\n      });\n      on('doubleTap', (_s, e) => {\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          zoomToggle(e);\n        }\n      });\n      on('transitionEnd', () => {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          onTransitionEnd();\n        }\n      });\n      on('slideChange', () => {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n          onTransitionEnd();\n        }\n      });\n      Object.assign(swiper.zoom, {\n        enable,\n        disable,\n        in: zoomIn,\n        out: zoomOut,\n        toggle: zoomToggle\n      });\n    }\n\n    /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n    function Controller(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        controller: {\n          control: undefined,\n          inverse: false,\n          by: 'slide' // or 'container'\n        }\n      });\n\n      swiper.controller = {\n        control: undefined\n      };\n      function LinearSpline(x, y) {\n        const binarySearch = function search() {\n          let maxIndex;\n          let minIndex;\n          let guess;\n          return (array, val) => {\n            minIndex = -1;\n            maxIndex = array.length;\n            while (maxIndex - minIndex > 1) {\n              guess = maxIndex + minIndex >> 1;\n              if (array[guess] <= val) {\n                minIndex = guess;\n              } else {\n                maxIndex = guess;\n              }\n            }\n            return maxIndex;\n          };\n        }();\n        this.x = x;\n        this.y = y;\n        this.lastIndex = x.length - 1;\n        // Given an x value (x2), return the expected y2 value:\n        // (x1,y1) is the known point before given value,\n        // (x3,y3) is the known point after given value.\n        let i1;\n        let i3;\n        this.interpolate = function interpolate(x2) {\n          if (!x2) return 0;\n\n          // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n          i3 = binarySearch(this.x, x2);\n          i1 = i3 - 1;\n\n          // We have our indexes i1 & i3, so we can calculate already:\n          // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n        };\n        return this;\n      }\n      // xxx: for now i will just save one spline function to to\n      function getInterpolateFunction(c) {\n        if (!swiper.controller.spline) {\n          swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n        }\n      }\n      function setTranslate(_t, byController) {\n        const controlled = swiper.controller.control;\n        let multiplier;\n        let controlledTranslate;\n        const Swiper = swiper.constructor;\n        function setControlledTranslate(c) {\n          // this will create an Interpolate function based on the snapGrids\n          // x is the Grid of the scrolled scroller and y will be the controlled scroller\n          // it makes sense to create this only once and recall it for the interpolation\n          // the function does a lot of value caching for performance\n          const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n          if (swiper.params.controller.by === 'slide') {\n            getInterpolateFunction(c);\n            // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n            // but it did not work out\n            controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n          }\n          if (!controlledTranslate || swiper.params.controller.by === 'container') {\n            multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n            controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n          }\n          if (swiper.params.controller.inverse) {\n            controlledTranslate = c.maxTranslate() - controlledTranslate;\n          }\n          c.updateProgress(controlledTranslate);\n          c.setTranslate(controlledTranslate, swiper);\n          c.updateActiveIndex();\n          c.updateSlidesClasses();\n        }\n        if (Array.isArray(controlled)) {\n          for (let i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTranslate(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTranslate(controlled);\n        }\n      }\n      function setTransition(duration, byController) {\n        const Swiper = swiper.constructor;\n        const controlled = swiper.controller.control;\n        let i;\n        function setControlledTransition(c) {\n          c.setTransition(duration, swiper);\n          if (duration !== 0) {\n            c.transitionStart();\n            if (c.params.autoHeight) {\n              nextTick(() => {\n                c.updateAutoHeight();\n              });\n            }\n            elementTransitionEnd(c.wrapperEl, () => {\n              if (!controlled) return;\n              c.transitionEnd();\n            });\n          }\n        }\n        if (Array.isArray(controlled)) {\n          for (i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTransition(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTransition(controlled);\n        }\n      }\n      function removeSpline() {\n        if (!swiper.controller.control) return;\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      }\n      on('beforeInit', () => {\n        if (typeof window !== 'undefined' && (\n        // eslint-disable-line\n        typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n          const controlElement = document.querySelector(swiper.params.controller.control);\n          if (controlElement && controlElement.swiper) {\n            swiper.controller.control = controlElement.swiper;\n          } else if (controlElement) {\n            const onControllerSwiper = e => {\n              swiper.controller.control = e.detail[0];\n              swiper.update();\n              controlElement.removeEventListener('init', onControllerSwiper);\n            };\n            controlElement.addEventListener('init', onControllerSwiper);\n          }\n          return;\n        }\n        swiper.controller.control = swiper.params.controller.control;\n      });\n      on('update', () => {\n        removeSpline();\n      });\n      on('resize', () => {\n        removeSpline();\n      });\n      on('observerUpdate', () => {\n        removeSpline();\n      });\n      on('setTranslate', (_s, translate, byController) => {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTranslate(translate, byController);\n      });\n      on('setTransition', (_s, duration, byController) => {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTransition(duration, byController);\n      });\n      Object.assign(swiper.controller, {\n        setTranslate,\n        setTransition\n      });\n    }\n\n    function A11y(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        a11y: {\n          enabled: true,\n          notificationClass: 'swiper-notification',\n          prevSlideMessage: 'Previous slide',\n          nextSlideMessage: 'Next slide',\n          firstSlideMessage: 'This is the first slide',\n          lastSlideMessage: 'This is the last slide',\n          paginationBulletMessage: 'Go to slide {{index}}',\n          slideLabelMessage: '{{index}} / {{slidesLength}}',\n          containerMessage: null,\n          containerRoleDescriptionMessage: null,\n          itemRoleDescriptionMessage: null,\n          slideRole: 'group',\n          id: null\n        }\n      });\n      swiper.a11y = {\n        clicked: false\n      };\n      let liveRegion = null;\n      function notify(message) {\n        const notification = liveRegion;\n        if (notification.length === 0) return;\n        notification.innerHTML = '';\n        notification.innerHTML = message;\n      }\n      const makeElementsArray = el => {\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\n        return el;\n      };\n      function getRandomNumber(size) {\n        if (size === void 0) {\n          size = 16;\n        }\n        const randomChar = () => Math.round(16 * Math.random()).toString(16);\n        return 'x'.repeat(size).replace(/x/g, randomChar);\n      }\n      function makeElFocusable(el) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('tabIndex', '0');\n        });\n      }\n      function makeElNotFocusable(el) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('tabIndex', '-1');\n        });\n      }\n      function addElRole(el, role) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('role', role);\n        });\n      }\n      function addElRoleDescription(el, description) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-roledescription', description);\n        });\n      }\n      function addElControls(el, controls) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-controls', controls);\n        });\n      }\n      function addElLabel(el, label) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-label', label);\n        });\n      }\n      function addElId(el, id) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('id', id);\n        });\n      }\n      function addElLive(el, live) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-live', live);\n        });\n      }\n      function disableEl(el) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-disabled', true);\n        });\n      }\n      function enableEl(el) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-disabled', false);\n        });\n      }\n      function onEnterOrSpaceKey(e) {\n        if (e.keyCode !== 13 && e.keyCode !== 32) return;\n        const params = swiper.params.a11y;\n        const targetEl = e.target;\n        if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n          if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n        }\n        if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n          if (!(swiper.isEnd && !swiper.params.loop)) {\n            swiper.slideNext();\n          }\n          if (swiper.isEnd) {\n            notify(params.lastSlideMessage);\n          } else {\n            notify(params.nextSlideMessage);\n          }\n        }\n        if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n          if (!(swiper.isBeginning && !swiper.params.loop)) {\n            swiper.slidePrev();\n          }\n          if (swiper.isBeginning) {\n            notify(params.firstSlideMessage);\n          } else {\n            notify(params.prevSlideMessage);\n          }\n        }\n        if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n          targetEl.click();\n        }\n      }\n      function updateNavigation() {\n        if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n        const {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        if (prevEl) {\n          if (swiper.isBeginning) {\n            disableEl(prevEl);\n            makeElNotFocusable(prevEl);\n          } else {\n            enableEl(prevEl);\n            makeElFocusable(prevEl);\n          }\n        }\n        if (nextEl) {\n          if (swiper.isEnd) {\n            disableEl(nextEl);\n            makeElNotFocusable(nextEl);\n          } else {\n            enableEl(nextEl);\n            makeElFocusable(nextEl);\n          }\n        }\n      }\n      function hasPagination() {\n        return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n      }\n      function hasClickablePagination() {\n        return hasPagination() && swiper.params.pagination.clickable;\n      }\n      function updatePagination() {\n        const params = swiper.params.a11y;\n        if (!hasPagination()) return;\n        swiper.pagination.bullets.forEach(bulletEl => {\n          if (swiper.params.pagination.clickable) {\n            makeElFocusable(bulletEl);\n            if (!swiper.params.pagination.renderBullet) {\n              addElRole(bulletEl, 'button');\n              addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n            }\n          }\n          if (bulletEl.matches(`.${swiper.params.pagination.bulletActiveClass}`)) {\n            bulletEl.setAttribute('aria-current', 'true');\n          } else {\n            bulletEl.removeAttribute('aria-current');\n          }\n        });\n      }\n      const initNavEl = (el, wrapperId, message) => {\n        makeElFocusable(el);\n        if (el.tagName !== 'BUTTON') {\n          addElRole(el, 'button');\n          el.addEventListener('keydown', onEnterOrSpaceKey);\n        }\n        addElLabel(el, message);\n        addElControls(el, wrapperId);\n      };\n      const handlePointerDown = () => {\n        swiper.a11y.clicked = true;\n      };\n      const handlePointerUp = () => {\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            if (!swiper.destroyed) {\n              swiper.a11y.clicked = false;\n            }\n          });\n        });\n      };\n      const handleFocus = e => {\n        if (swiper.a11y.clicked) return;\n        const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n        if (!slideEl || !swiper.slides.includes(slideEl)) return;\n        const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n        const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n        if (isActive || isVisible) return;\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n        if (swiper.isHorizontal()) {\n          swiper.el.scrollLeft = 0;\n        } else {\n          swiper.el.scrollTop = 0;\n        }\n        swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n      };\n      const initSlides = () => {\n        const params = swiper.params.a11y;\n        if (params.itemRoleDescriptionMessage) {\n          addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n        }\n        if (params.slideRole) {\n          addElRole(swiper.slides, params.slideRole);\n        }\n        const slidesLength = swiper.slides.length;\n        if (params.slideLabelMessage) {\n          swiper.slides.forEach((slideEl, index) => {\n            const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n            const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n            addElLabel(slideEl, ariaLabelMessage);\n          });\n        }\n      };\n      const init = () => {\n        const params = swiper.params.a11y;\n        swiper.el.append(liveRegion);\n\n        // Container\n        const containerEl = swiper.el;\n        if (params.containerRoleDescriptionMessage) {\n          addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n        }\n        if (params.containerMessage) {\n          addElLabel(containerEl, params.containerMessage);\n        }\n\n        // Wrapper\n        const wrapperEl = swiper.wrapperEl;\n        const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n        const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n        addElId(wrapperEl, wrapperId);\n        addElLive(wrapperEl, live);\n\n        // Slide\n        initSlides();\n\n        // Navigation\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation ? swiper.navigation : {};\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        if (nextEl) {\n          nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n        }\n        if (prevEl) {\n          prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n        }\n\n        // Pagination\n        if (hasClickablePagination()) {\n          const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n          paginationEl.forEach(el => {\n            el.addEventListener('keydown', onEnterOrSpaceKey);\n          });\n        }\n\n        // Tab focus\n        swiper.el.addEventListener('focus', handleFocus, true);\n        swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n        swiper.el.addEventListener('pointerup', handlePointerUp, true);\n      };\n      function destroy() {\n        if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation ? swiper.navigation : {};\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        if (nextEl) {\n          nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n        }\n        if (prevEl) {\n          prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n        }\n\n        // Pagination\n        if (hasClickablePagination()) {\n          const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n          paginationEl.forEach(el => {\n            el.removeEventListener('keydown', onEnterOrSpaceKey);\n          });\n        }\n\n        // Tab focus\n        swiper.el.removeEventListener('focus', handleFocus, true);\n        swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n        swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n      }\n      on('beforeInit', () => {\n        liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n        liveRegion.setAttribute('aria-live', 'assertive');\n        liveRegion.setAttribute('aria-atomic', 'true');\n        if (swiper.isElement) {\n          liveRegion.setAttribute('slot', 'container-end');\n        }\n      });\n      on('afterInit', () => {\n        if (!swiper.params.a11y.enabled) return;\n        init();\n      });\n      on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n        if (!swiper.params.a11y.enabled) return;\n        initSlides();\n      });\n      on('fromEdge toEdge afterInit lock unlock', () => {\n        if (!swiper.params.a11y.enabled) return;\n        updateNavigation();\n      });\n      on('paginationUpdate', () => {\n        if (!swiper.params.a11y.enabled) return;\n        updatePagination();\n      });\n      on('destroy', () => {\n        if (!swiper.params.a11y.enabled) return;\n        destroy();\n      });\n    }\n\n    function History(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        history: {\n          enabled: false,\n          root: '',\n          replaceState: false,\n          key: 'slides',\n          keepQuery: false\n        }\n      });\n      let initialized = false;\n      let paths = {};\n      const slugify = text => {\n        return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n      };\n      const getPathValues = urlOverride => {\n        const window = getWindow();\n        let location;\n        if (urlOverride) {\n          location = new URL(urlOverride);\n        } else {\n          location = window.location;\n        }\n        const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n        const total = pathArray.length;\n        const key = pathArray[total - 2];\n        const value = pathArray[total - 1];\n        return {\n          key,\n          value\n        };\n      };\n      const setHistory = (key, index) => {\n        const window = getWindow();\n        if (!initialized || !swiper.params.history.enabled) return;\n        let location;\n        if (swiper.params.url) {\n          location = new URL(swiper.params.url);\n        } else {\n          location = window.location;\n        }\n        const slide = swiper.slides[index];\n        let value = slugify(slide.getAttribute('data-history'));\n        if (swiper.params.history.root.length > 0) {\n          let root = swiper.params.history.root;\n          if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n          value = `${root}/${key ? `${key}/` : ''}${value}`;\n        } else if (!location.pathname.includes(key)) {\n          value = `${key ? `${key}/` : ''}${value}`;\n        }\n        if (swiper.params.history.keepQuery) {\n          value += location.search;\n        }\n        const currentState = window.history.state;\n        if (currentState && currentState.value === value) {\n          return;\n        }\n        if (swiper.params.history.replaceState) {\n          window.history.replaceState({\n            value\n          }, null, value);\n        } else {\n          window.history.pushState({\n            value\n          }, null, value);\n        }\n      };\n      const scrollToSlide = (speed, value, runCallbacks) => {\n        if (value) {\n          for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n            const slide = swiper.slides[i];\n            const slideHistory = slugify(slide.getAttribute('data-history'));\n            if (slideHistory === value) {\n              const index = elementIndex(slide);\n              swiper.slideTo(index, speed, runCallbacks);\n            }\n          }\n        } else {\n          swiper.slideTo(0, speed, runCallbacks);\n        }\n      };\n      const setHistoryPopState = () => {\n        paths = getPathValues(swiper.params.url);\n        scrollToSlide(swiper.params.speed, paths.value, false);\n      };\n      const init = () => {\n        const window = getWindow();\n        if (!swiper.params.history) return;\n        if (!window.history || !window.history.pushState) {\n          swiper.params.history.enabled = false;\n          swiper.params.hashNavigation.enabled = true;\n          return;\n        }\n        initialized = true;\n        paths = getPathValues(swiper.params.url);\n        if (!paths.key && !paths.value) {\n          if (!swiper.params.history.replaceState) {\n            window.addEventListener('popstate', setHistoryPopState);\n          }\n          return;\n        }\n        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n        if (!swiper.params.history.replaceState) {\n          window.addEventListener('popstate', setHistoryPopState);\n        }\n      };\n      const destroy = () => {\n        const window = getWindow();\n        if (!swiper.params.history.replaceState) {\n          window.removeEventListener('popstate', setHistoryPopState);\n        }\n      };\n      on('init', () => {\n        if (swiper.params.history.enabled) {\n          init();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.params.history.enabled) {\n          destroy();\n        }\n      });\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\n        if (initialized) {\n          setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      });\n      on('slideChange', () => {\n        if (initialized && swiper.params.cssMode) {\n          setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      });\n    }\n\n    function HashNavigation(_ref) {\n      let {\n        swiper,\n        extendParams,\n        emit,\n        on\n      } = _ref;\n      let initialized = false;\n      const document = getDocument();\n      const window = getWindow();\n      extendParams({\n        hashNavigation: {\n          enabled: false,\n          replaceState: false,\n          watchState: false\n        }\n      });\n      const onHashChange = () => {\n        emit('hashChange');\n        const newHash = document.location.hash.replace('#', '');\n        const activeSlideHash = swiper.slides[swiper.activeIndex].getAttribute('data-hash');\n        if (newHash !== activeSlideHash) {\n          const newIndex = elementIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${newHash}\"], swiper-slide[data-hash=\"${newHash}\"]`)[0]);\n          if (typeof newIndex === 'undefined') return;\n          swiper.slideTo(newIndex);\n        }\n      };\n      const setHash = () => {\n        if (!initialized || !swiper.params.hashNavigation.enabled) return;\n        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n          window.history.replaceState(null, null, `#${swiper.slides[swiper.activeIndex].getAttribute('data-hash')}` || '');\n          emit('hashSet');\n        } else {\n          const slide = swiper.slides[swiper.activeIndex];\n          const hash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n          document.location.hash = hash || '';\n          emit('hashSet');\n        }\n      };\n      const init = () => {\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n        initialized = true;\n        const hash = document.location.hash.replace('#', '');\n        if (hash) {\n          const speed = 0;\n          for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n            const slide = swiper.slides[i];\n            const slideHash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n            if (slideHash === hash) {\n              const index = elementIndex(slide);\n              swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n            }\n          }\n        }\n        if (swiper.params.hashNavigation.watchState) {\n          window.addEventListener('hashchange', onHashChange);\n        }\n      };\n      const destroy = () => {\n        if (swiper.params.hashNavigation.watchState) {\n          window.removeEventListener('hashchange', onHashChange);\n        }\n      };\n      on('init', () => {\n        if (swiper.params.hashNavigation.enabled) {\n          init();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.params.hashNavigation.enabled) {\n          destroy();\n        }\n      });\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\n        if (initialized) {\n          setHash();\n        }\n      });\n      on('slideChange', () => {\n        if (initialized && swiper.params.cssMode) {\n          setHash();\n        }\n      });\n    }\n\n    /* eslint no-underscore-dangle: \"off\" */\n    function Autoplay(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit,\n        params\n      } = _ref;\n      swiper.autoplay = {\n        running: false,\n        paused: false,\n        timeLeft: 0\n      };\n      extendParams({\n        autoplay: {\n          enabled: false,\n          delay: 3000,\n          waitForTransition: true,\n          disableOnInteraction: true,\n          stopOnLastSlide: false,\n          reverseDirection: false,\n          pauseOnMouseEnter: false\n        }\n      });\n      let timeout;\n      let raf;\n      let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n      let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n      let autoplayTimeLeft;\n      let autoplayStartTime = new Date().getTime;\n      let wasPaused;\n      let isTouched;\n      let pausedByTouch;\n      let touchStartTimeout;\n      let slideChanged;\n      let pausedByInteraction;\n      function onTransitionEnd(e) {\n        if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n        if (e.target !== swiper.wrapperEl) return;\n        swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n        resume();\n      }\n      const calcTimeLeft = () => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (swiper.autoplay.paused) {\n          wasPaused = true;\n        } else if (wasPaused) {\n          autoplayDelayCurrent = autoplayTimeLeft;\n          wasPaused = false;\n        }\n        const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n        swiper.autoplay.timeLeft = timeLeft;\n        emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n        raf = requestAnimationFrame(() => {\n          calcTimeLeft();\n        });\n      };\n      const getSlideDelay = () => {\n        let activeSlideEl;\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n        } else {\n          activeSlideEl = swiper.slides[swiper.activeIndex];\n        }\n        if (!activeSlideEl) return undefined;\n        const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n        return currentSlideDelay;\n      };\n      const run = delayForce => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        cancelAnimationFrame(raf);\n        calcTimeLeft();\n        let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n        autoplayDelayTotal = swiper.params.autoplay.delay;\n        autoplayDelayCurrent = swiper.params.autoplay.delay;\n        const currentSlideDelay = getSlideDelay();\n        if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n          delay = currentSlideDelay;\n          autoplayDelayTotal = currentSlideDelay;\n          autoplayDelayCurrent = currentSlideDelay;\n        }\n        autoplayTimeLeft = delay;\n        const speed = swiper.params.speed;\n        const proceed = () => {\n          if (swiper.params.autoplay.reverseDirection) {\n            if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n              swiper.slidePrev(speed, true, true);\n              emit('autoplay');\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\n              swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n              emit('autoplay');\n            }\n          } else {\n            if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n              swiper.slideNext(speed, true, true);\n              emit('autoplay');\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\n              swiper.slideTo(0, speed, true, true);\n              emit('autoplay');\n            }\n          }\n          if (swiper.params.cssMode) {\n            autoplayStartTime = new Date().getTime();\n            requestAnimationFrame(() => {\n              run();\n            });\n          }\n        };\n        if (delay > 0) {\n          clearTimeout(timeout);\n          timeout = setTimeout(() => {\n            proceed();\n          }, delay);\n        } else {\n          requestAnimationFrame(() => {\n            proceed();\n          });\n        }\n\n        // eslint-disable-next-line\n        return delay;\n      };\n      const start = () => {\n        swiper.autoplay.running = true;\n        run();\n        emit('autoplayStart');\n      };\n      const stop = () => {\n        swiper.autoplay.running = false;\n        clearTimeout(timeout);\n        cancelAnimationFrame(raf);\n        emit('autoplayStop');\n      };\n      const pause = (internal, reset) => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        clearTimeout(timeout);\n        if (!internal) {\n          pausedByInteraction = true;\n        }\n        const proceed = () => {\n          emit('autoplayPause');\n          if (swiper.params.autoplay.waitForTransition) {\n            swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n          } else {\n            resume();\n          }\n        };\n        swiper.autoplay.paused = true;\n        if (reset) {\n          if (slideChanged) {\n            autoplayTimeLeft = swiper.params.autoplay.delay;\n          }\n          slideChanged = false;\n          proceed();\n          return;\n        }\n        const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n        autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n        if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n        proceed();\n      };\n      const resume = () => {\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n        autoplayStartTime = new Date().getTime();\n        if (pausedByInteraction) {\n          pausedByInteraction = false;\n          run(autoplayTimeLeft);\n        } else {\n          run();\n        }\n        swiper.autoplay.paused = false;\n        emit('autoplayResume');\n      };\n      const onVisibilityChange = () => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        const document = getDocument();\n        if (document.visibilityState === 'hidden') {\n          pausedByInteraction = true;\n          pause(true);\n        }\n        if (document.visibilityState === 'visible') {\n          resume();\n        }\n      };\n      const onPointerEnter = e => {\n        if (e.pointerType !== 'mouse') return;\n        pausedByInteraction = true;\n        pause(true);\n      };\n      const onPointerLeave = e => {\n        if (e.pointerType !== 'mouse') return;\n        if (swiper.autoplay.paused) {\n          resume();\n        }\n      };\n      const attachMouseEvents = () => {\n        if (swiper.params.autoplay.pauseOnMouseEnter) {\n          swiper.el.addEventListener('pointerenter', onPointerEnter);\n          swiper.el.addEventListener('pointerleave', onPointerLeave);\n        }\n      };\n      const detachMouseEvents = () => {\n        swiper.el.removeEventListener('pointerenter', onPointerEnter);\n        swiper.el.removeEventListener('pointerleave', onPointerLeave);\n      };\n      const attachDocumentEvents = () => {\n        const document = getDocument();\n        document.addEventListener('visibilitychange', onVisibilityChange);\n      };\n      const detachDocumentEvents = () => {\n        const document = getDocument();\n        document.removeEventListener('visibilitychange', onVisibilityChange);\n      };\n      on('init', () => {\n        if (swiper.params.autoplay.enabled) {\n          attachMouseEvents();\n          attachDocumentEvents();\n          autoplayStartTime = new Date().getTime();\n          start();\n        }\n      });\n      on('destroy', () => {\n        detachMouseEvents();\n        detachDocumentEvents();\n        if (swiper.autoplay.running) {\n          stop();\n        }\n      });\n      on('beforeTransitionStart', (_s, speed, internal) => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          pause(true, true);\n        } else {\n          stop();\n        }\n      });\n      on('sliderFirstMove', () => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (swiper.params.autoplay.disableOnInteraction) {\n          stop();\n          return;\n        }\n        isTouched = true;\n        pausedByTouch = false;\n        pausedByInteraction = false;\n        touchStartTimeout = setTimeout(() => {\n          pausedByInteraction = true;\n          pausedByTouch = true;\n          pause(true);\n        }, 200);\n      });\n      on('touchEnd', () => {\n        if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n        clearTimeout(touchStartTimeout);\n        clearTimeout(timeout);\n        if (swiper.params.autoplay.disableOnInteraction) {\n          pausedByTouch = false;\n          isTouched = false;\n          return;\n        }\n        if (pausedByTouch && swiper.params.cssMode) resume();\n        pausedByTouch = false;\n        isTouched = false;\n      });\n      on('slideChange', () => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        slideChanged = true;\n      });\n      Object.assign(swiper.autoplay, {\n        start,\n        stop,\n        pause,\n        resume\n      });\n    }\n\n    function Thumb(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        thumbs: {\n          swiper: null,\n          multipleActiveThumbs: true,\n          autoScrollOffset: 0,\n          slideThumbActiveClass: 'swiper-slide-thumb-active',\n          thumbsContainerClass: 'swiper-thumbs'\n        }\n      });\n      let initialized = false;\n      let swiperCreated = false;\n      swiper.thumbs = {\n        swiper: null\n      };\n      function onThumbClick() {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        const clickedIndex = thumbsSwiper.clickedIndex;\n        const clickedSlide = thumbsSwiper.clickedSlide;\n        if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n        if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n        let slideToIndex;\n        if (thumbsSwiper.params.loop) {\n          slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n        } else {\n          slideToIndex = clickedIndex;\n        }\n        if (swiper.params.loop) {\n          swiper.slideToLoop(slideToIndex);\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      }\n      function init() {\n        const {\n          thumbs: thumbsParams\n        } = swiper.params;\n        if (initialized) return false;\n        initialized = true;\n        const SwiperClass = swiper.constructor;\n        if (thumbsParams.swiper instanceof SwiperClass) {\n          swiper.thumbs.swiper = thumbsParams.swiper;\n          Object.assign(swiper.thumbs.swiper.originalParams, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          Object.assign(swiper.thumbs.swiper.params, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          swiper.thumbs.swiper.update();\n        } else if (isObject(thumbsParams.swiper)) {\n          const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n          Object.assign(thumbsSwiperParams, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n          swiperCreated = true;\n        }\n        swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n        swiper.thumbs.swiper.on('tap', onThumbClick);\n        return true;\n      }\n      function update(initial) {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n        // Activate thumbs\n        let thumbsToActivate = 1;\n        const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n          thumbsToActivate = swiper.params.slidesPerView;\n        }\n        if (!swiper.params.thumbs.multipleActiveThumbs) {\n          thumbsToActivate = 1;\n        }\n        thumbsToActivate = Math.floor(thumbsToActivate);\n        thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n          for (let i = 0; i < thumbsToActivate; i += 1) {\n            elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n              slideEl.classList.add(thumbActiveClass);\n            });\n          }\n        } else {\n          for (let i = 0; i < thumbsToActivate; i += 1) {\n            if (thumbsSwiper.slides[swiper.realIndex + i]) {\n              thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n            }\n          }\n        }\n        const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n        const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n          const currentThumbsIndex = thumbsSwiper.activeIndex;\n          let newThumbsIndex;\n          let direction;\n          if (thumbsSwiper.params.loop) {\n            const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n            newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n            direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n          } else {\n            newThumbsIndex = swiper.realIndex;\n            direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n          }\n          if (useOffset) {\n            newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n          }\n          if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n            if (thumbsSwiper.params.centeredSlides) {\n              if (newThumbsIndex > currentThumbsIndex) {\n                newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n              } else {\n                newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n              }\n            } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\n            thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n          }\n        }\n      }\n      on('beforeInit', () => {\n        const {\n          thumbs\n        } = swiper.params;\n        if (!thumbs || !thumbs.swiper) return;\n        if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n          const document = getDocument();\n          const getThumbsElementAndInit = () => {\n            const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n            if (thumbsElement && thumbsElement.swiper) {\n              thumbs.swiper = thumbsElement.swiper;\n              init();\n              update(true);\n            } else if (thumbsElement) {\n              const onThumbsSwiper = e => {\n                thumbs.swiper = e.detail[0];\n                thumbsElement.removeEventListener('init', onThumbsSwiper);\n                init();\n                update(true);\n                thumbs.swiper.update();\n                swiper.update();\n              };\n              thumbsElement.addEventListener('init', onThumbsSwiper);\n            }\n            return thumbsElement;\n          };\n          const watchForThumbsToAppear = () => {\n            if (swiper.destroyed) return;\n            const thumbsElement = getThumbsElementAndInit();\n            if (!thumbsElement) {\n              requestAnimationFrame(watchForThumbsToAppear);\n            }\n          };\n          requestAnimationFrame(watchForThumbsToAppear);\n        } else {\n          init();\n          update(true);\n        }\n      });\n      on('slideChange update resize observerUpdate', () => {\n        update();\n      });\n      on('setTransition', (_s, duration) => {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        thumbsSwiper.setTransition(duration);\n      });\n      on('beforeDestroy', () => {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        if (swiperCreated) {\n          thumbsSwiper.destroy();\n        }\n      });\n      Object.assign(swiper.thumbs, {\n        init,\n        update\n      });\n    }\n\n    function freeMode(_ref) {\n      let {\n        swiper,\n        extendParams,\n        emit,\n        once\n      } = _ref;\n      extendParams({\n        freeMode: {\n          enabled: false,\n          momentum: true,\n          momentumRatio: 1,\n          momentumBounce: true,\n          momentumBounceRatio: 1,\n          momentumVelocityRatio: 1,\n          sticky: false,\n          minimumVelocity: 0.02\n        }\n      });\n      function onTouchStart() {\n        const translate = swiper.getTranslate();\n        swiper.setTranslate(translate);\n        swiper.setTransition(0);\n        swiper.touchEventsData.velocities.length = 0;\n        swiper.freeMode.onTouchEnd({\n          currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n        });\n      }\n      function onTouchMove() {\n        const {\n          touchEventsData: data,\n          touches\n        } = swiper;\n        // Velocity\n        if (data.velocities.length === 0) {\n          data.velocities.push({\n            position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n            time: data.touchStartTime\n          });\n        }\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n          time: now()\n        });\n      }\n      function onTouchEnd(_ref2) {\n        let {\n          currentPos\n        } = _ref2;\n        const {\n          params,\n          wrapperEl,\n          rtlTranslate: rtl,\n          snapGrid,\n          touchEventsData: data\n        } = swiper;\n        // Time diff\n        const touchEndTime = now();\n        const timeDiff = touchEndTime - data.touchStartTime;\n        if (currentPos < -swiper.minTranslate()) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        if (currentPos > -swiper.maxTranslate()) {\n          if (swiper.slides.length < snapGrid.length) {\n            swiper.slideTo(snapGrid.length - 1);\n          } else {\n            swiper.slideTo(swiper.slides.length - 1);\n          }\n          return;\n        }\n        if (params.freeMode.momentum) {\n          if (data.velocities.length > 1) {\n            const lastMoveEvent = data.velocities.pop();\n            const velocityEvent = data.velocities.pop();\n            const distance = lastMoveEvent.position - velocityEvent.position;\n            const time = lastMoveEvent.time - velocityEvent.time;\n            swiper.velocity = distance / time;\n            swiper.velocity /= 2;\n            if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n              swiper.velocity = 0;\n            }\n            // this implies that the user stopped moving a finger then released.\n            // There would be no events with distance zero, so the last event is stale.\n            if (time > 150 || now() - lastMoveEvent.time > 300) {\n              swiper.velocity = 0;\n            }\n          } else {\n            swiper.velocity = 0;\n          }\n          swiper.velocity *= params.freeMode.momentumVelocityRatio;\n          data.velocities.length = 0;\n          let momentumDuration = 1000 * params.freeMode.momentumRatio;\n          const momentumDistance = swiper.velocity * momentumDuration;\n          let newPosition = swiper.translate + momentumDistance;\n          if (rtl) newPosition = -newPosition;\n          let doBounce = false;\n          let afterBouncePosition;\n          const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n          let needsLoopFix;\n          if (newPosition < swiper.maxTranslate()) {\n            if (params.freeMode.momentumBounce) {\n              if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n                newPosition = swiper.maxTranslate() - bounceAmount;\n              }\n              afterBouncePosition = swiper.maxTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.maxTranslate();\n            }\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\n          } else if (newPosition > swiper.minTranslate()) {\n            if (params.freeMode.momentumBounce) {\n              if (newPosition - swiper.minTranslate() > bounceAmount) {\n                newPosition = swiper.minTranslate() + bounceAmount;\n              }\n              afterBouncePosition = swiper.minTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.minTranslate();\n            }\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\n          } else if (params.freeMode.sticky) {\n            let nextSlide;\n            for (let j = 0; j < snapGrid.length; j += 1) {\n              if (snapGrid[j] > -newPosition) {\n                nextSlide = j;\n                break;\n              }\n            }\n            if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n              newPosition = snapGrid[nextSlide];\n            } else {\n              newPosition = snapGrid[nextSlide - 1];\n            }\n            newPosition = -newPosition;\n          }\n          if (needsLoopFix) {\n            once('transitionEnd', () => {\n              swiper.loopFix();\n            });\n          }\n          // Fix duration\n          if (swiper.velocity !== 0) {\n            if (rtl) {\n              momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n            } else {\n              momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n            }\n            if (params.freeMode.sticky) {\n              // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n              // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n              // It's easy to see this when simulating touch with mouse events. To fix this,\n              // limit single-slide swipes to the default slide duration. This also has the\n              // nice side effect of matching slide speed if the user stopped moving before\n              // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n              // For faster swipes, also apply limits (albeit higher ones).\n              const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n              const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n              if (moveDistance < currentSlideSize) {\n                momentumDuration = params.speed;\n              } else if (moveDistance < 2 * currentSlideSize) {\n                momentumDuration = params.speed * 1.5;\n              } else {\n                momentumDuration = params.speed * 2.5;\n              }\n            }\n          } else if (params.freeMode.sticky) {\n            swiper.slideToClosest();\n            return;\n          }\n          if (params.freeMode.momentumBounce && doBounce) {\n            swiper.updateProgress(afterBouncePosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n            swiper.animating = true;\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n              emit('momentumBounce');\n              swiper.setTransition(params.speed);\n              setTimeout(() => {\n                swiper.setTranslate(afterBouncePosition);\n                elementTransitionEnd(wrapperEl, () => {\n                  if (!swiper || swiper.destroyed) return;\n                  swiper.transitionEnd();\n                });\n              }, 0);\n            });\n          } else if (swiper.velocity) {\n            emit('_freeModeNoMomentumRelease');\n            swiper.updateProgress(newPosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n            if (!swiper.animating) {\n              swiper.animating = true;\n              elementTransitionEnd(wrapperEl, () => {\n                if (!swiper || swiper.destroyed) return;\n                swiper.transitionEnd();\n              });\n            }\n          } else {\n            swiper.updateProgress(newPosition);\n          }\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        } else if (params.freeMode.sticky) {\n          swiper.slideToClosest();\n          return;\n        } else if (params.freeMode) {\n          emit('_freeModeNoMomentumRelease');\n        }\n        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n      }\n      Object.assign(swiper, {\n        freeMode: {\n          onTouchStart,\n          onTouchMove,\n          onTouchEnd\n        }\n      });\n    }\n\n    function Grid(_ref) {\n      let {\n        swiper,\n        extendParams\n      } = _ref;\n      extendParams({\n        grid: {\n          rows: 1,\n          fill: 'column'\n        }\n      });\n      let slidesNumberEvenToRows;\n      let slidesPerRow;\n      let numFullColumns;\n      const initSlides = slidesLength => {\n        const {\n          slidesPerView\n        } = swiper.params;\n        const {\n          rows,\n          fill\n        } = swiper.params.grid;\n        slidesPerRow = slidesNumberEvenToRows / rows;\n        numFullColumns = Math.floor(slidesLength / rows);\n        if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n          slidesNumberEvenToRows = slidesLength;\n        } else {\n          slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n        }\n        if (slidesPerView !== 'auto' && fill === 'row') {\n          slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n        }\n      };\n      const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n        const {\n          slidesPerGroup,\n          spaceBetween\n        } = swiper.params;\n        const {\n          rows,\n          fill\n        } = swiper.params.grid;\n        // Set slides order\n        let newSlideOrderIndex;\n        let column;\n        let row;\n        if (fill === 'row' && slidesPerGroup > 1) {\n          const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n          const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n          const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n          slide.style.order = newSlideOrderIndex;\n        } else if (fill === 'column') {\n          column = Math.floor(i / rows);\n          row = i - column * rows;\n          if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n            row += 1;\n            if (row >= rows) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - row * slidesPerRow;\n        }\n        slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n      };\n      const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n        const {\n          spaceBetween,\n          centeredSlides,\n          roundLengths\n        } = swiper.params;\n        const {\n          rows\n        } = swiper.params.grid;\n        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n        swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n        if (centeredSlides) {\n          const newSlidesGrid = [];\n          for (let i = 0; i < snapGrid.length; i += 1) {\n            let slidesGridItem = snapGrid[i];\n            if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n            if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n          }\n          snapGrid.splice(0, snapGrid.length);\n          snapGrid.push(...newSlidesGrid);\n        }\n      };\n      swiper.grid = {\n        initSlides,\n        updateSlide,\n        updateWrapperSize\n      };\n    }\n\n    function appendSlide(slides) {\n      const swiper = this;\n      const {\n        params,\n        slidesEl\n      } = swiper;\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n      const appendElement = slideEl => {\n        if (typeof slideEl === 'string') {\n          const tempDOM = document.createElement('div');\n          tempDOM.innerHTML = slideEl;\n          slidesEl.append(tempDOM.children[0]);\n          tempDOM.innerHTML = '';\n        } else {\n          slidesEl.append(slideEl);\n        }\n      };\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) appendElement(slides[i]);\n        }\n      } else {\n        appendElement(slides);\n      }\n      swiper.recalcSlides();\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!params.observer || swiper.isElement) {\n        swiper.update();\n      }\n    }\n\n    function prependSlide(slides) {\n      const swiper = this;\n      const {\n        params,\n        activeIndex,\n        slidesEl\n      } = swiper;\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n      let newActiveIndex = activeIndex + 1;\n      const prependElement = slideEl => {\n        if (typeof slideEl === 'string') {\n          const tempDOM = document.createElement('div');\n          tempDOM.innerHTML = slideEl;\n          slidesEl.prepend(tempDOM.children[0]);\n          tempDOM.innerHTML = '';\n        } else {\n          slidesEl.prepend(slideEl);\n        }\n      };\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) prependElement(slides[i]);\n        }\n        newActiveIndex = activeIndex + slides.length;\n      } else {\n        prependElement(slides);\n      }\n      swiper.recalcSlides();\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!params.observer || swiper.isElement) {\n        swiper.update();\n      }\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n\n    function addSlide(index, slides) {\n      const swiper = this;\n      const {\n        params,\n        activeIndex,\n        slidesEl\n      } = swiper;\n      let activeIndexBuffer = activeIndex;\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.recalcSlides();\n      }\n      const baseLength = swiper.slides.length;\n      if (index <= 0) {\n        swiper.prependSlide(slides);\n        return;\n      }\n      if (index >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n      }\n      let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n      const slidesBuffer = [];\n      for (let i = baseLength - 1; i >= index; i -= 1) {\n        const currentSlide = swiper.slides[i];\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n      }\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) slidesEl.append(slides[i]);\n        }\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n      } else {\n        slidesEl.append(slides);\n      }\n      for (let i = 0; i < slidesBuffer.length; i += 1) {\n        slidesEl.append(slidesBuffer[i]);\n      }\n      swiper.recalcSlides();\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!params.observer || swiper.isElement) {\n        swiper.update();\n      }\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n\n    function removeSlide(slidesIndexes) {\n      const swiper = this;\n      const {\n        params,\n        activeIndex\n      } = swiper;\n      let activeIndexBuffer = activeIndex;\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n      }\n      let newActiveIndex = activeIndexBuffer;\n      let indexToRemove;\n      if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n        for (let i = 0; i < slidesIndexes.length; i += 1) {\n          indexToRemove = slidesIndexes[i];\n          if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n          if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        }\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      } else {\n        indexToRemove = slidesIndexes;\n        if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      }\n      swiper.recalcSlides();\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!params.observer || swiper.isElement) {\n        swiper.update();\n      }\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n\n    function removeAllSlides() {\n      const swiper = this;\n      const slidesIndexes = [];\n      for (let i = 0; i < swiper.slides.length; i += 1) {\n        slidesIndexes.push(i);\n      }\n      swiper.removeSlide(slidesIndexes);\n    }\n\n    function Manipulation(_ref) {\n      let {\n        swiper\n      } = _ref;\n      Object.assign(swiper, {\n        appendSlide: appendSlide.bind(swiper),\n        prependSlide: prependSlide.bind(swiper),\n        addSlide: addSlide.bind(swiper),\n        removeSlide: removeSlide.bind(swiper),\n        removeAllSlides: removeAllSlides.bind(swiper)\n      });\n    }\n\n    function effectInit(params) {\n      const {\n        effect,\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        overwriteParams,\n        perspective,\n        recreateShadows,\n        getEffectParams\n      } = params;\n      on('beforeInit', () => {\n        if (swiper.params.effect !== effect) return;\n        swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n        if (perspective && perspective()) {\n          swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n        }\n        const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n        Object.assign(swiper.params, overwriteParamsResult);\n        Object.assign(swiper.originalParams, overwriteParamsResult);\n      });\n      on('setTranslate', () => {\n        if (swiper.params.effect !== effect) return;\n        setTranslate();\n      });\n      on('setTransition', (_s, duration) => {\n        if (swiper.params.effect !== effect) return;\n        setTransition(duration);\n      });\n      on('transitionEnd', () => {\n        if (swiper.params.effect !== effect) return;\n        if (recreateShadows) {\n          if (!getEffectParams || !getEffectParams().slideShadows) return;\n          // remove shadows\n          swiper.slides.forEach(slideEl => {\n            slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n          });\n          // create new one\n          recreateShadows();\n        }\n      });\n      let requireUpdateOnVirtual;\n      on('virtualUpdate', () => {\n        if (swiper.params.effect !== effect) return;\n        if (!swiper.slides.length) {\n          requireUpdateOnVirtual = true;\n        }\n        requestAnimationFrame(() => {\n          if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n            setTranslate();\n            requireUpdateOnVirtual = false;\n          }\n        });\n      });\n    }\n\n    function effectTarget(effectParams, slideEl) {\n      const transformEl = getSlideTransformEl(slideEl);\n      if (transformEl !== slideEl) {\n        transformEl.style.backfaceVisibility = 'hidden';\n        transformEl.style['-webkit-backface-visibility'] = 'hidden';\n      }\n      return transformEl;\n    }\n\n    function effectVirtualTransitionEnd(_ref) {\n      let {\n        swiper,\n        duration,\n        transformElements,\n        allSlides\n      } = _ref;\n      const {\n        activeIndex\n      } = swiper;\n      const getSlide = el => {\n        if (!el.parentElement) {\n          // assume shadow root\n          const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n          return slide;\n        }\n        return el.parentElement;\n      };\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        let eventTriggered = false;\n        let transitionEndTarget;\n        if (allSlides) {\n          transitionEndTarget = transformElements;\n        } else {\n          transitionEndTarget = transformElements.filter(transformEl => {\n            const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n            return elementIndex(el) === activeIndex;\n          });\n        }\n        transitionEndTarget.forEach(el => {\n          elementTransitionEnd(el, () => {\n            if (eventTriggered) return;\n            if (!swiper || swiper.destroyed) return;\n            eventTriggered = true;\n            swiper.animating = false;\n            const evt = new window.CustomEvent('transitionend', {\n              bubbles: true,\n              cancelable: true\n            });\n            swiper.wrapperEl.dispatchEvent(evt);\n          });\n        });\n      }\n    }\n\n    function EffectFade(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        fadeEffect: {\n          crossFade: false\n        }\n      });\n      const setTranslate = () => {\n        const {\n          slides\n        } = swiper;\n        const params = swiper.params.fadeEffect;\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = swiper.slides[i];\n          const offset = slideEl.swiperSlideOffset;\n          let tx = -offset;\n          if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n          let ty = 0;\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n          }\n          const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.opacity = slideOpacity;\n          targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n        });\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformElements,\n          allSlides: true\n        });\n      };\n      effectInit({\n        effect: 'fade',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCube(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        cubeEffect: {\n          slideShadows: true,\n          shadow: true,\n          shadowOffset: 20,\n          shadowScale: 0.94\n        }\n      });\n      const createSlideShadows = (slideEl, progress, isHorizontal) => {\n        let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBefore) {\n          shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n          slideEl.append(shadowBefore);\n        }\n        if (!shadowAfter) {\n          shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n          slideEl.append(shadowAfter);\n        }\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n      };\n      const recreateShadows = () => {\n        // create new ones\n        const isHorizontal = swiper.isHorizontal();\n        swiper.slides.forEach(slideEl => {\n          const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n          createSlideShadows(slideEl, progress, isHorizontal);\n        });\n      };\n      const setTranslate = () => {\n        const {\n          el,\n          wrapperEl,\n          slides,\n          width: swiperWidth,\n          height: swiperHeight,\n          rtlTranslate: rtl,\n          size: swiperSize,\n          browser\n        } = swiper;\n        const params = swiper.params.cubeEffect;\n        const isHorizontal = swiper.isHorizontal();\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        let wrapperRotate = 0;\n        let cubeShadowEl;\n        if (params.shadow) {\n          if (isHorizontal) {\n            cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n            if (!cubeShadowEl) {\n              cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n              swiper.slidesEl.append(cubeShadowEl);\n            }\n            cubeShadowEl.style.height = `${swiperWidth}px`;\n          } else {\n            cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n            if (!cubeShadowEl) {\n              cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n              el.append(cubeShadowEl);\n            }\n          }\n        }\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = slides[i];\n          let slideIndex = i;\n          if (isVirtual) {\n            slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n          }\n          let slideAngle = slideIndex * 90;\n          let round = Math.floor(slideAngle / 360);\n          if (rtl) {\n            slideAngle = -slideAngle;\n            round = Math.floor(-slideAngle / 360);\n          }\n          const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n          let tx = 0;\n          let ty = 0;\n          let tz = 0;\n          if (slideIndex % 4 === 0) {\n            tx = -round * 4 * swiperSize;\n            tz = 0;\n          } else if ((slideIndex - 1) % 4 === 0) {\n            tx = 0;\n            tz = -round * 4 * swiperSize;\n          } else if ((slideIndex - 2) % 4 === 0) {\n            tx = swiperSize + round * 4 * swiperSize;\n            tz = swiperSize;\n          } else if ((slideIndex - 3) % 4 === 0) {\n            tx = -swiperSize;\n            tz = 3 * swiperSize + swiperSize * 4 * round;\n          }\n          if (rtl) {\n            tx = -tx;\n          }\n          if (!isHorizontal) {\n            ty = tx;\n            tx = 0;\n          }\n          const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n          if (progress <= 1 && progress > -1) {\n            wrapperRotate = slideIndex * 90 + progress * 90;\n            if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n          }\n          slideEl.style.transform = transform;\n          if (params.slideShadows) {\n            createSlideShadows(slideEl, progress, isHorizontal);\n          }\n        }\n        wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n        wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n        if (params.shadow) {\n          if (isHorizontal) {\n            cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n          } else {\n            const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n            const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n            const scale1 = params.shadowScale;\n            const scale2 = params.shadowScale / multiplier;\n            const offset = params.shadowOffset;\n            cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n          }\n        }\n        const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n        wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n        wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n      };\n      const setTransition = duration => {\n        const {\n          el,\n          slides\n        } = swiper;\n        slides.forEach(slideEl => {\n          slideEl.style.transitionDuration = `${duration}ms`;\n          slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n            subEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n          const shadowEl = el.querySelector('.swiper-cube-shadow');\n          if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n        }\n      };\n      effectInit({\n        effect: 'cube',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        recreateShadows,\n        getEffectParams: () => swiper.params.cubeEffect,\n        perspective: () => true,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true\n        })\n      });\n    }\n\n    function createShadow(params, slideEl, side) {\n      const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n      const shadowContainer = getSlideTransformEl(slideEl);\n      let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n      if (!shadowEl) {\n        shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n        shadowContainer.append(shadowEl);\n      }\n      return shadowEl;\n    }\n\n    function EffectFlip(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        flipEffect: {\n          slideShadows: true,\n          limitRotation: true\n        }\n      });\n      const createSlideShadows = (slideEl, progress, params) => {\n        let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBefore) {\n          shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n        }\n        if (!shadowAfter) {\n          shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n        }\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n      };\n      const recreateShadows = () => {\n        // Set shadows\n        const params = swiper.params.flipEffect;\n        swiper.slides.forEach(slideEl => {\n          let progress = slideEl.progress;\n          if (swiper.params.flipEffect.limitRotation) {\n            progress = Math.max(Math.min(slideEl.progress, 1), -1);\n          }\n          createSlideShadows(slideEl, progress, params);\n        });\n      };\n      const setTranslate = () => {\n        const {\n          slides,\n          rtlTranslate: rtl\n        } = swiper;\n        const params = swiper.params.flipEffect;\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = slides[i];\n          let progress = slideEl.progress;\n          if (swiper.params.flipEffect.limitRotation) {\n            progress = Math.max(Math.min(slideEl.progress, 1), -1);\n          }\n          const offset = slideEl.swiperSlideOffset;\n          const rotate = -180 * progress;\n          let rotateY = rotate;\n          let rotateX = 0;\n          let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n          let ty = 0;\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n            rotateX = -rotateY;\n            rotateY = 0;\n          } else if (rtl) {\n            rotateY = -rotateY;\n          }\n          slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n          if (params.slideShadows) {\n            createSlideShadows(slideEl, progress, params);\n          }\n          const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.transform = transform;\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n          el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n            shadowEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformElements\n        });\n      };\n      effectInit({\n        effect: 'flip',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        recreateShadows,\n        getEffectParams: () => swiper.params.flipEffect,\n        perspective: () => true,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCoverflow(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          scale: 1,\n          modifier: 1,\n          slideShadows: true\n        }\n      });\n      const setTranslate = () => {\n        const {\n          width: swiperWidth,\n          height: swiperHeight,\n          slides,\n          slidesSizesGrid\n        } = swiper;\n        const params = swiper.params.coverflowEffect;\n        const isHorizontal = swiper.isHorizontal();\n        const transform = swiper.translate;\n        const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n        const rotate = isHorizontal ? params.rotate : -params.rotate;\n        const translate = params.depth;\n        // Each slide offset from center\n        for (let i = 0, length = slides.length; i < length; i += 1) {\n          const slideEl = slides[i];\n          const slideSize = slidesSizesGrid[i];\n          const slideOffset = slideEl.swiperSlideOffset;\n          const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n          const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n          let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n          let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n          // var rotateZ = 0\n          let translateZ = -translate * Math.abs(offsetMultiplier);\n          let stretch = params.stretch;\n          // Allow percentage to make a relative stretch for responsive sliders\n          if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n            stretch = parseFloat(params.stretch) / 100 * slideSize;\n          }\n          let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n          let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n          let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n          // Fix for ultra small values\n          if (Math.abs(translateX) < 0.001) translateX = 0;\n          if (Math.abs(translateY) < 0.001) translateY = 0;\n          if (Math.abs(translateZ) < 0.001) translateZ = 0;\n          if (Math.abs(rotateY) < 0.001) rotateY = 0;\n          if (Math.abs(rotateX) < 0.001) rotateX = 0;\n          if (Math.abs(scale) < 0.001) scale = 0;\n          const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.transform = slideTransform;\n          slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n          if (params.slideShadows) {\n            // Set shadows\n            let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n            let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n            if (!shadowBeforeEl) {\n              shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n            }\n            if (!shadowAfterEl) {\n              shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n            }\n            if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n            if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n          }\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n          el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n            shadowEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n      };\n      effectInit({\n        effect: 'coverflow',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => true,\n        overwriteParams: () => ({\n          watchSlidesProgress: true\n        })\n      });\n    }\n\n    function EffectCreative(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        creativeEffect: {\n          limitProgress: 1,\n          shadowPerProgress: false,\n          progressMultiplier: 1,\n          perspective: true,\n          prev: {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            opacity: 1,\n            scale: 1\n          },\n          next: {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            opacity: 1,\n            scale: 1\n          }\n        }\n      });\n      const getTranslateValue = value => {\n        if (typeof value === 'string') return value;\n        return `${value}px`;\n      };\n      const setTranslate = () => {\n        const {\n          slides,\n          wrapperEl,\n          slidesSizesGrid\n        } = swiper;\n        const params = swiper.params.creativeEffect;\n        const {\n          progressMultiplier: multiplier\n        } = params;\n        const isCenteredSlides = swiper.params.centeredSlides;\n        if (isCenteredSlides) {\n          const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n          wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n        }\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = slides[i];\n          const slideProgress = slideEl.progress;\n          const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n          let originalProgress = progress;\n          if (!isCenteredSlides) {\n            originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n          }\n          const offset = slideEl.swiperSlideOffset;\n          const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n          const r = [0, 0, 0];\n          let custom = false;\n          if (!swiper.isHorizontal()) {\n            t[1] = t[0];\n            t[0] = 0;\n          }\n          let data = {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            scale: 1,\n            opacity: 1\n          };\n          if (progress < 0) {\n            data = params.next;\n            custom = true;\n          } else if (progress > 0) {\n            data = params.prev;\n            custom = true;\n          }\n          // set translate\n          t.forEach((value, index) => {\n            t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n          });\n          // set rotates\n          r.forEach((value, index) => {\n            r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n          });\n          slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n          const translateString = t.join(', ');\n          const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n          const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n          const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n          const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n          // Set shadows\n          if (custom && data.shadow || !custom) {\n            let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n            if (!shadowEl && data.shadow) {\n              shadowEl = createShadow(params, slideEl);\n            }\n            if (shadowEl) {\n              const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n              shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n            }\n          }\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.transform = transform;\n          targetEl.style.opacity = opacityString;\n          if (data.origin) {\n            targetEl.style.transformOrigin = opacityString;\n          }\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n          el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n            shadowEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformElements,\n          allSlides: true\n        });\n      };\n      effectInit({\n        effect: 'creative',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => swiper.params.creativeEffect.perspective,\n        overwriteParams: () => ({\n          watchSlidesProgress: true,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCards(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        cardsEffect: {\n          slideShadows: true,\n          rotate: true,\n          perSlideRotate: 2,\n          perSlideOffset: 8\n        }\n      });\n      const setTranslate = () => {\n        const {\n          slides,\n          activeIndex\n        } = swiper;\n        const params = swiper.params.cardsEffect;\n        const {\n          startTranslate,\n          isTouched\n        } = swiper.touchEventsData;\n        const currentTranslate = swiper.translate;\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = slides[i];\n          const slideProgress = slideEl.progress;\n          const progress = Math.min(Math.max(slideProgress, -4), 4);\n          let offset = slideEl.swiperSlideOffset;\n          if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n            swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n          }\n          if (swiper.params.centeredSlides && swiper.params.cssMode) {\n            offset -= slides[0].swiperSlideOffset;\n          }\n          let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n          let tY = 0;\n          const tZ = -100 * Math.abs(progress);\n          let scale = 1;\n          let rotate = -params.perSlideRotate * progress;\n          let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n          const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n          const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n          const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n          if (isSwipeToNext || isSwipeToPrev) {\n            const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n            rotate += -28 * progress * subProgress;\n            scale += -0.5 * subProgress;\n            tXAdd += 96 * subProgress;\n            tY = `${-25 * subProgress * Math.abs(progress)}%`;\n          }\n          if (progress < 0) {\n            // next\n            tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n          } else if (progress > 0) {\n            // prev\n            tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n          } else {\n            tX = `${tX}px`;\n          }\n          if (!swiper.isHorizontal()) {\n            const prevY = tY;\n            tY = tX;\n            tX = prevY;\n          }\n          const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n          const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n          if (params.slideShadows) {\n            // Set shadows\n            let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n            if (!shadowEl) {\n              shadowEl = createShadow(params, slideEl);\n            }\n            if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n          }\n          slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.transform = transform;\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n          el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n            shadowEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformElements\n        });\n      };\n      effectInit({\n        effect: 'cards',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => true,\n        overwriteParams: () => ({\n          watchSlidesProgress: true,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    // Swiper Class\n    const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\n    Swiper.use(modules);\n\n    return Swiper;\n\n}));\n//# sourceMappingURL=swiper-bundle.js.map\n"]}